/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import correo.FnEnviar;
import entities.Ficha;
import fn.FnFicha;
import fn.GlobalValues;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author home
 */
public class VReporteFichas extends javax.swing.JPanel {

    private static int cont = 0;
    /**
     * Creates new form VClientes
     */
    public VReporteFichas() throws SQLException, ClassNotFoundException {
        initComponents();
        cargarDatos(0,1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListar = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        txtDe = new com.toedter.calendar.JDateChooser();
        txtHasta = new com.toedter.calendar.JDateChooser();
        lblDe = new javax.swing.JLabel();
        lblHasta = new javax.swing.JLabel();
        btnFiltrar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtReport = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mis Registros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe Print", 0, 18))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de registros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe Print", 0, 11))); // NOI18N

        tblListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Folio", "Fecha", "Cliente", "Estado", "Total"
            }
        ));
        jScrollPane1.setViewportView(tblListar);

        btnEliminar.setBackground(new java.awt.Color(153, 255, 153));
        btnEliminar.setFont(new java.awt.Font("Aharoni", 0, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(102, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botonGraph/btnDanger1.jpg"))); // NOI18N
        btnEliminar.setText("Anular");
        btnEliminar.setBorder(null);
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setIconTextGap(-3);
        btnEliminar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/botonGraph/btnDanger3.jpg"))); // NOI18N
        btnEliminar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botonGraph/btnDanger2.jpg"))); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        lblDe.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblDe.setText("DE");

        lblHasta.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblHasta.setText("HASTA");

        btnFiltrar.setBackground(new java.awt.Color(153, 255, 153));
        btnFiltrar.setFont(new java.awt.Font("Aharoni", 0, 14)); // NOI18N
        btnFiltrar.setForeground(new java.awt.Color(0, 102, 0));
        btnFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botonGraph/btnDefault1.jpg"))); // NOI18N
        btnFiltrar.setText("Filtrar");
        btnFiltrar.setBorder(null);
        btnFiltrar.setBorderPainted(false);
        btnFiltrar.setContentAreaFilled(false);
        btnFiltrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFiltrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFiltrar.setIconTextGap(-3);
        btnFiltrar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/botonGraph/btnDefault3.jpg"))); // NOI18N
        btnFiltrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botonGraph/btnDefault2.jpg"))); // NOI18N
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDe, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(36, 36, 36)
                                    .addComponent(lblDe, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblHasta)
                                .addComponent(txtHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(26, 26, 26)
                            .addComponent(btnFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDe)
                    .addComponent(lblHasta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtReport.setEditable(false);
        txtReport.setColumns(20);
        txtReport.setRows(5);
        jScrollPane2.setViewportView(txtReport);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(226, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane2)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        try{
            int fila = tblListar.getSelectedRow();
            int idFicha = (int) tblListar.getValueAt(fila, 0);
            FnFicha load = new FnFicha();
            Ficha temp = load.cargar(idFicha,1);
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea eliminar la ficha numero "+temp.getId()+"?");
            if(respuesta == JOptionPane.YES_OPTION){
                if(load.eliminar(idFicha)){
                    JOptionPane.showMessageDialog(null, "El registro ha sido eliminado", "Eliminar", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar el registro", "Eliminar", JOptionPane.WARNING_MESSAGE);
                }
                cargarDatos(0,1);
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro en la tabla", "Seleccione", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        
        int idSesion1 = GlobalValues.ID_USER;
        Date fecha1 = txtDe.getDate();
        Date fecha2 = txtHasta.getDate();
        FnFicha load = new FnFicha();
        try {
            llenarTabla(load.listarPorFecha(fecha1, fecha2), 1);
            
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error desconocido: "+ex.getMessage(),"Cargar Datos",JOptionPane.WARNING_MESSAGE);
        }
        
        
        
        btnEliminar.setVisible(true);

        lblDe.setVisible(true);
        lblHasta.setVisible(true);
        txtDe.setVisible(true);
        txtHasta.setVisible(true);
        btnFiltrar.setVisible(true);

        
        
    }//GEN-LAST:event_btnFiltrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDe;
    private javax.swing.JLabel lblHasta;
    private javax.swing.JTable tblListar;
    private com.toedter.calendar.JDateChooser txtDe;
    private com.toedter.calendar.JDateChooser txtHasta;
    private javax.swing.JTextArea txtReport;
    // End of variables declaration//GEN-END:variables

   
    private void cargarDatos(int listar, int estado) throws SQLException, ClassNotFoundException {
        
        
        
        if(listar == -1){//eliminados
            btnEliminar.setVisible(false);
            
            lblDe.setVisible(false);
            lblHasta.setVisible(false);
            txtDe.setVisible(false);
            txtHasta.setVisible(false);
            btnFiltrar.setVisible(false);
            
            
            estado=0;
        }else{
            btnEliminar.setVisible(true);
            
            lblDe.setVisible(true);
            lblHasta.setVisible(true);
            txtDe.setVisible(true);
            txtHasta.setVisible(true);
            btnFiltrar.setVisible(true);
            
            
        }
            
        FnFicha datbd= new FnFicha();
        Date d1 = new Date();
        int idSesion = GlobalValues.ID_USER;
        llenarTabla(datbd.listarPorFecha(d1, d1), estado);
//        llenarTabla(datbd.listarPorSesion(listar,idSesion,estado), estado);
        
    }

    

    private void buscarDatos(int buscar, int i) throws SQLException, ClassNotFoundException {
//        int idSesion = Integer.parseInt(ContentAdmin.idSesion.getText());
        FnFicha load= new FnFicha();
        llenarTabla(load.listar(0, i), i);
//        llenarTabla(load.listarPorSesion(buscar,idSesion, i), i);
        
    }
    
    private void llenarTabla(ArrayList<Ficha> lista, int i) throws SQLException, ClassNotFoundException{
        DecimalFormat formateador = new DecimalFormat("###,###,###"); 
        
        DefaultTableModel modelo;
        modelo = new DefaultTableModel() {
           @Override
           public boolean isCellEditable(int fila, int columna) {
               return false; //Con esto conseguimos que la tabla no se pueda editar
           }
        };
        FnEnviar load = new FnEnviar();
        String reporte = "";
        
        Date d1 = txtDe.getDate();
        Date d2 = txtHasta.getDate();
//        if(d1 == null && d2 == null){
//            d1 = new Date(-604070999750L);
//            d2 = new Date();
//            if(i==1){
//                reporte = "REPORTE SEGÚN LISTA DESPLEGADA EN TABLA:\n\n"+load.obtenerReportePorUser2(d1,d1);
//            }
//        }
        if(i==1){
           reporte = "REPORTE SEGÚN LISTA DESPLEGADA EN TABLA:\n\n"+load.obtenerReportePorUser2(d1,d2);
         
        }
        txtReport.setText(reporte);
        modelo.addColumn("Folio");
        modelo.addColumn("Fecha");
        modelo.addColumn("Cliente");
        modelo.addColumn("Estado");
        modelo.addColumn("Total");
        modelo.addColumn("Abono");
        modelo.addColumn("Saldo");
        tblListar.setModel(modelo);
        FnFicha datbd= new FnFicha();
        
        
        try{
            for (Ficha temp : lista) {
                int descuento =0;
                Object[] fila = new Object[7];
                fila[0] = temp.getId();
                fila[1] = temp.getFecha();
                fila[2] = temp.getCliente().getNombre();
                if(temp.getEstado() == 1)
                    fila[3] = "Pendiente";
                if(temp.getEstado() == 2)
                    fila[3] = "Pagada";
                if(temp.getEstado() == 3)
                    fila[3] = "Despachada";
                if(temp.getEstado() == 0)
                    fila[3] = "Anulada";
                if(temp.getEstado() == 4)
                    fila[3] = "Garantia";
                fila[4] = "$ "+formateador.format(temp.getValorTotal());
                fila[5] = "$ "+formateador.format((temp.getValorTotal()-temp.getSaldo()));
                fila[6] = "$ "+formateador.format(temp.getSaldo());
                modelo.addRow(fila);
            }
            tblListar.updateUI();
            if(tblListar.getRowCount() == 0){
                JOptionPane.showMessageDialog(null, "No se encontraron resultados, pruebe con otros valores de búsqueda.");
                 
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error, ["+e.getMessage()+"]");
        }
    }

}

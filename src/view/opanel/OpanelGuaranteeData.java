/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.opanel;

import dao.Dao;
import entities.ficha.Armazon;
import entities.ficha.Ficha;
import fn.GV;
import fn.Icons;
import fn.OptionPane;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author sdx
 */
public class OpanelGuaranteeData extends javax.swing.JPanel {
    private static Ficha ficha;
    private static String horaEntrega="";
    private static String stOldFicha="";
    /**
     * Creates new form OpanelSelectDate
     */
    public OpanelGuaranteeData(Ficha ficha) {
        initComponents();
        this.ficha = ficha;
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JLabel();
        btnCrearGarantia = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        txtLugar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        txtFecha = new com.toedter.calendar.JDateChooser();
        jPanel10 = new javax.swing.JPanel();
        txtHora1 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        txtMinuto1 = new javax.swing.JSpinner();
        iconClock = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        txtHora2 = new javax.swing.JSpinner();
        txtMinuto2 = new javax.swing.JSpinner();
        jLabel48 = new javax.swing.JLabel();
        iconClock2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        jLabel1.setText("Lugar");

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cancel_50px.png"))); // NOI18N
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCancelarMousePressed(evt);
            }
        });

        btnCrearGarantia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/btn_Ok_50px.png"))); // NOI18N
        btnCrearGarantia.setToolTipText("Crear garant√≠a");
        btnCrearGarantia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearGarantiaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCrearGarantiaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCrearGarantiaMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCrearGarantiaMousePressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        jLabel3.setText("Fecha");

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        jLabel4.setText("Hora");

        txtLugar.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        txtLugar.setBorder(null);
        txtLugar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLugarFocusLost(evt);
            }
        });
        txtLugar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLugarKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        jLabel7.setText("Observaciones");

        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane1.setViewportView(txtObs);

        txtFecha.setMaxSelectableDate(new java.util.Date(32503694492000L));
        txtFecha.setMinSelectableDate(new java.util.Date(1514779292000L));
        txtFecha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaFocusLost(evt);
            }
        });
        txtFecha.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtFechaInputMethodTextChanged(evt);
            }
        });
        txtFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtFechaPropertyChange(evt);
            }
        });
        txtFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaKeyTyped(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Desde", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHora1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        txtHora1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHora1FocusLost(evt);
            }
        });
        jPanel10.add(txtHora1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 49, -1));

        jLabel5.setText(":");
        jPanel10.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        txtMinuto1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        txtMinuto1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMinuto1FocusLost(evt);
            }
        });
        jPanel10.add(txtMinuto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 49, -1));

        iconClock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Clock_25px.png"))); // NOI18N
        iconClock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconClockMouseClicked(evt);
            }
        });
        jPanel10.add(iconClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, -1, 30));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Hasta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHora2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        txtHora2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHora2FocusLost(evt);
            }
        });
        jPanel11.add(txtHora2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 49, -1));

        txtMinuto2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        txtMinuto2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMinuto2FocusLost(evt);
            }
        });
        jPanel11.add(txtMinuto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 49, -1));

        jLabel48.setText(":");
        jPanel11.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, 20));

        iconClock2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Clock_25px.png"))); // NOI18N
        iconClock2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconClock2MouseClicked(evt);
            }
        });
        jPanel11.add(iconClock2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(btnCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCrearGarantia))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLugar, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtLugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCrearGarantia, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        OptionPane.closeOptionPanel();
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseEntered
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnCancelar.getIcon().toString()))));
    }//GEN-LAST:event_btnCancelarMouseEntered

    private void btnCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseExited
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnCancelar.getIcon().toString()))));
    }//GEN-LAST:event_btnCancelarMouseExited

    private void btnCancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarMousePressed

    private void btnCrearGarantiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearGarantiaMouseClicked
        if(datosValidos()){
            asignarDatos();
            GV.crearGarantia(ficha);
            GV.getFichas().add(ficha);
            OptionPane.closeOptionPanel();
            GV.printFicha(ficha);
        }else{
            return;
        }
    }//GEN-LAST:event_btnCrearGarantiaMouseClicked

    private void btnCrearGarantiaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearGarantiaMouseEntered
        btnCrearGarantia.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnCrearGarantia.getIcon().toString()))));
    }//GEN-LAST:event_btnCrearGarantiaMouseEntered

    private void btnCrearGarantiaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearGarantiaMouseExited
        btnCrearGarantia.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnCrearGarantia.getIcon().toString()))));
    }//GEN-LAST:event_btnCrearGarantiaMouseExited

    private void btnCrearGarantiaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearGarantiaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCrearGarantiaMousePressed

    private void txtLugarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLugarKeyTyped
        int largo = 45;
        
        if(txtLugar.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El lugar solo debe contener 45 caracteres", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtLugarKeyTyped

    private void txtLugarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLugarFocusLost
        txtLugar.setText(GV.strToRut(txtLugar.getText()));// TODO add your handling code here:
    }//GEN-LAST:event_txtLugarFocusLost

    private void txtFechaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaFocusLost
        
    }//GEN-LAST:event_txtFechaFocusLost

    private void txtFechaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtFechaInputMethodTextChanged

    }//GEN-LAST:event_txtFechaInputMethodTextChanged

    private void txtFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtFechaPropertyChange

    }//GEN-LAST:event_txtFechaPropertyChange

    private void txtFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyPressed
        
    }//GEN-LAST:event_txtFechaKeyPressed

    private void txtFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyTyped

    }//GEN-LAST:event_txtFechaKeyTyped

    private void txtHora1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHora1FocusLost
        
    }//GEN-LAST:event_txtHora1FocusLost

    private void txtMinuto1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinuto1FocusLost
        
    }//GEN-LAST:event_txtMinuto1FocusLost

    private void iconClockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconClockMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconClockMouseClicked

    private void txtHora2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHora2FocusLost
        
    }//GEN-LAST:event_txtHora2FocusLost

    private void txtMinuto2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinuto2FocusLost
        
    }//GEN-LAST:event_txtMinuto2FocusLost

    private void iconClock2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconClock2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconClock2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnCancelar;
    private javax.swing.JLabel btnCrearGarantia;
    private javax.swing.JLabel iconClock;
    private javax.swing.JLabel iconClock2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JSpinner txtHora1;
    private javax.swing.JSpinner txtHora2;
    private javax.swing.JTextField txtLugar;
    private javax.swing.JSpinner txtMinuto1;
    private javax.swing.JSpinner txtMinuto2;
    private javax.swing.JTextArea txtObs;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
            txtLugar.setText(ficha.getLugarEntrega());
            stOldFicha = ficha.getCod();
    }

    private boolean datosValidos() {
        if(!validaFecha()){msgInvalidData();return false;}
        if(!validaLugar()){msgInvalidPlace();return false;}
        if(!validaHora()){msgInvalidHour();return false;}
        if(!validaObs()){msgInvalidObs();return false;}
        return true;
    }
    
    private void msg(String msg){
        OptionPane.showMsg("Error de ingreso de datos", msg, 2);
    }

    private boolean validaFecha() {
        Date fecha = txtFecha.getDate();
        if(fecha == null)return false;
        if(GV.dateToString(fecha, "ddmmyyyy")
                .equals(GV.dateToString(new Date(), "ddmmyyyy"))){
            return true;
        }
        if(fecha.compareTo(new Date()) < 0)return false;
        return true;
    }

    private void msgInvalidData() {
        msg("Debe ingresar una fecha v√°lida");
    }

    private boolean validaLugar() {
        String place = txtLugar.getText();
        return !GV.getStr(place).isEmpty() && GV.getStr(place).length() > 4;
    }

    private void msgInvalidPlace() {
        msg("Debe ingresar un lugar v√°lido");
    }

    private boolean validaHora() {
        commitSpinners();
        int h1 = (int)txtHora1.getValue();
        int h2 = (int)txtHora2.getValue();
        int m1 = (int)txtMinuto1.getValue();
        int m2 = (int)txtMinuto2.getValue();
        String min1 = (m1<10)?"0"+m1:""+m1;
        String min2 = (m2<10)?"0"+m2:""+m2;
        int hora1 = GV.strToNumber(""+h1+min1);
        int hora2 = GV.strToNumber(""+h2+min2);
        if(GV.dateToString(txtFecha.getDate(), "ddmmyyyy").equals(GV.dateToString(new Date(), "ddmmyyyy"))){
            int auxH = GV.strToNumber(GV.dateToString(new Date(), "HH"));
            if(h1<auxH)return false;
        }
        if(hora1>=hora2)return false;
        horaEntrega = h1+":"+min1+" - "+h2+":"+min2;
        return true;
    }

    private void commitSpinners() {
        try {
            txtHora1.commitEdit();
            txtHora2.commitEdit();
            txtMinuto1.commitEdit();
            txtMinuto2.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(OpanelGuaranteeData.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void msgInvalidHour() {
        msg("Debe ingresar horas correctamente");
    }

    private boolean validaObs() {
        return !GV.getStr(txtObs.getText()).isEmpty() && GV.getStr(txtObs.getText()).length()>10;
    }

    private void msgInvalidObs() {
        msg("Debe ingresar una observaci√≥n v√°lida");
    }

    private void asignarDatos() {
        Dao load = new Dao();
        Armazon lejos = new Armazon(null, ficha.getLejos().getTipo(), ficha.getLejos().getMarca()
                , 0, ficha.getLejos().getCristal(), 0, ficha.getLejos().getAdd(), ficha.getLejos().getOdA(), 
                ficha.getLejos().getOdEsf(), ficha.getLejos().getOdCil(), ficha.getLejos().getOiA(), 
                ficha.getLejos().getOiEsf(), ficha.getLejos().getOiCil(), ficha.getLejos().getDp(), 
                ficha.getLejos().getEndurecido(), ficha.getLejos().getCapa(), ficha.getLejos().getPlusMax(), 
                null, 1, null, 0);
        Armazon cerca = new Armazon(null, ficha.getCerca().getTipo(), ficha.getCerca().getMarca()
                , 0, ficha.getCerca().getCristal(), 0, ficha.getCerca().getAdd(), ficha.getCerca().getOdA(), 
                ficha.getCerca().getOdEsf(), ficha.getCerca().getOdCil(), ficha.getCerca().getOiA(), 
                ficha.getCerca().getOiEsf(), ficha.getCerca().getOiCil(), ficha.getCerca().getDp(), 
                ficha.getCerca().getEndurecido(), ficha.getCerca().getCapa(), ficha.getCerca().getPlusMax(), 
                null, 1, null, 0);
        Ficha garantia = new Ficha(load.getCurrentCod(new Ficha()), new Date(), txtFecha.getDate(), txtLugar.getText(), 
                horaEntrega, txtObs.getText(), 0, 0, 0, ficha.getCliente(), ficha.getDoctor(), 
                ficha.getInstitucion(), null, lejos, cerca, GV.user(), null, 4, null, 0);
        
        
        garantia.getCerca().setIdFicha(garantia.getCod());
        garantia.getLejos().setIdFicha(garantia.getCod());
        garantia.setObservacion(garantia.getObservacion()+"\n"+
                "[Garant√≠a correspondiente a la ficha: "+stOldFicha+"]");
        ficha = garantia;
    }
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.mxrck.autocompleter.TextAutoCompleter;
import entities.Armazon;
import entities.Cliente;
import entities.Cristal;
import entities.Descuento;
import entities.Doctor;
import entities.Ficha;
import entities.HistorialPago;
import entities.Institucion;
import entities.Lente;
import entities.TipoPago;
import fn.Boton;
import fn.FnNuevaFicha;
import fn.FnValidaRut;
import fn.GlobalValues;
import fn.Icons;
import java.awt.Color;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author home
 */
public class VCrearFicha extends javax.swing.JPanel {

    private FnNuevaFicha load = new FnNuevaFicha();
    private static JLabel lblIdTipoPago = new JLabel();
    Boton boton = new Boton();
    /**
     * Creates new form VNuevaFicha
     */
    public VCrearFicha() throws SQLException, ClassNotFoundException {
        initComponents();
        ContentAdmin.lblTitle.setText("Nueva Ficha");
        txtTotal.setText("0");
        cargarCbos();
        autocompletar();
        lblCristalCerca.setVisible(false);
        lblCristalLejos.setVisible(false);
        lblLenteCerca.setVisible(false);
        lblLenteLejos.setVisible(false);
        lblIdTipoPago.setText("0");
        GlobalValues.TMP_ID_DESCUENTO = 0;
        
       // JFormattedTextField.COMMIT_OR_REVERT. Esta es la opción por defecto y la más útil. Si el texto introducido es incorrecto, se vuelve automáticamente al último valor bueno conocido. Si el texto no es válido, se muestra el último valor bueno conocido.<>
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtFecha = new com.toedter.calendar.JDateChooser();
        txtEntrega = new javax.swing.JTextField();
        btnSyncronize18 = new javax.swing.JLabel();
        btnSyncronize20 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        txtHora1 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        txtMinuto1 = new javax.swing.JSpinner();
        btnSyncronize21 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        txtHora2 = new javax.swing.JSpinner();
        txtMinuto2 = new javax.swing.JSpinner();
        jLabel48 = new javax.swing.JLabel();
        btnSyncronize17 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtDoctor = new javax.swing.JTextField();
        btnSyncronize16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtInstitucion = new javax.swing.JTextField();
        txtRutCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtTelefonoCliente2 = new javax.swing.JTextField();
        txtMailCliente = new javax.swing.JTextField();
        txtDireccionCliente = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtComuna = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        cboSexo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JSpinner();
        chkExtranjero = new javax.swing.JCheckBox();
        txtTelefonoCliente1 = new javax.swing.JTextField();
        btnSyncronize13 = new javax.swing.JLabel();
        btnSyncronize19 = new javax.swing.JLabel();
        btnSyncronize14 = new javax.swing.JLabel();
        btnSyncronize15 = new javax.swing.JLabel();
        btnSyncronize24 = new javax.swing.JLabel();
        btnSyncronize25 = new javax.swing.JLabel();
        btnSyncronize26 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtArmazonLejos = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtODLejosESF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtODLejosCIL = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtODLejosA = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtOILejosESF = new javax.swing.JTextField();
        txtOILejosCIL = new javax.swing.JTextField();
        txtOILejosA = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtDPLejos = new javax.swing.JSpinner();
        chkEndurecidoLejos = new javax.swing.JCheckBox();
        chkCapaLejos = new javax.swing.JCheckBox();
        chkPlusMaxLejos = new javax.swing.JCheckBox();
        jLabel26 = new javax.swing.JLabel();
        txtCristalLejos = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        txtArmazonCerca = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtODCercaESF = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtODCercaCIL = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtODCercaA = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        txtOICercaESF = new javax.swing.JTextField();
        txtOICercaCIL = new javax.swing.JTextField();
        txtOICercaA = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        txtDPCerca = new javax.swing.JSpinner();
        chkEndurecidoCerca = new javax.swing.JCheckBox();
        chkCapaCerca = new javax.swing.JCheckBox();
        chkPlusMaxCerca = new javax.swing.JCheckBox();
        jLabel40 = new javax.swing.JLabel();
        txtAddCerca = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtCristalCerca = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtAbono = new javax.swing.JSpinner();
        cboTipoPago = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        chkDescuento = new javax.swing.JCheckBox();
        cboDescuento = new javax.swing.JComboBox<>();
        lblDescuento = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        lblCristalLejos = new javax.swing.JLabel();
        lblCristalCerca = new javax.swing.JLabel();
        lblLenteCerca = new javax.swing.JLabel();
        lblLenteLejos = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnSave = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos de entrega", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 129, -1));

        txtEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEntregaActionPerformed(evt);
            }
        });
        txtEntrega.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEntregaKeyTyped(evt);
            }
        });
        jPanel1.add(txtEntrega, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 311, -1));

        btnSyncronize18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Calendar_25px.png"))); // NOI18N
        btnSyncronize18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize18MouseClicked(evt);
            }
        });
        jPanel1.add(btnSyncronize18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 20));

        btnSyncronize20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Geo-fence_25px.png"))); // NOI18N
        btnSyncronize20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize20MouseClicked(evt);
            }
        });
        jPanel1.add(btnSyncronize20, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 25, -1, 30));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Desde", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHora1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        jPanel10.add(txtHora1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 49, -1));

        jLabel4.setText(":");
        jPanel10.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        txtMinuto1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        jPanel10.add(txtMinuto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 49, -1));

        btnSyncronize21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Clock_25px.png"))); // NOI18N
        btnSyncronize21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize21MouseClicked(evt);
            }
        });
        jPanel10.add(btnSyncronize21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, -1, 30));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Hasta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHora2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        jPanel11.add(txtHora2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 49, -1));

        txtMinuto2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        jPanel11.add(txtMinuto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 49, -1));

        jLabel48.setText(":");
        jPanel11.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, 20));

        btnSyncronize17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Clock_25px.png"))); // NOI18N
        btnSyncronize17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize17MouseClicked(evt);
            }
        });
        jPanel11.add(btnSyncronize17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 40));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Especialista", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        txtDoctor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDoctorFocusLost(evt);
            }
        });

        btnSyncronize16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Account_25px.png"))); // NOI18N
        btnSyncronize16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSyncronize16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSyncronize16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos de Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        txtInstitucion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInstitucionFocusLost(evt);
            }
        });
        txtInstitucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInstitucionActionPerformed(evt);
            }
        });
        txtInstitucion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInstitucionKeyTyped(evt);
            }
        });

        txtRutCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRutClienteFocusLost(evt);
            }
        });
        txtRutCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutClienteActionPerformed(evt);
            }
        });
        txtRutCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRutClienteKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel7.setText("Nombre");

        txtNombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreClienteKeyTyped(evt);
            }
        });

        txtTelefonoCliente2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoCliente2KeyTyped(evt);
            }
        });

        txtMailCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMailClienteActionPerformed(evt);
            }
        });
        txtMailCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMailClienteKeyTyped(evt);
            }
        });

        txtDireccionCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionClienteKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel11.setText("Comuna");

        txtComuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtComunaKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel12.setText("Ciudad");

        txtCiudad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCiudadKeyTyped(evt);
            }
        });

        cboSexo.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel14.setText("Edad");

        txtEdad.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));

        chkExtranjero.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        chkExtranjero.setText("Extrangero");
        chkExtranjero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkExtranjeroActionPerformed(evt);
            }
        });

        txtTelefonoCliente1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoCliente1KeyTyped(evt);
            }
        });

        btnSyncronize13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Contact_Details_25px.png"))); // NOI18N
        btnSyncronize13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize13MouseClicked(evt);
            }
        });

        btnSyncronize19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Business_Building_25px_1.png"))); // NOI18N
        btnSyncronize19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize19MouseClicked(evt);
            }
        });

        btnSyncronize14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Gender_25px.png"))); // NOI18N
        btnSyncronize14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize14MouseClicked(evt);
            }
        });

        btnSyncronize15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_New_Post_25px.png"))); // NOI18N
        btnSyncronize15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize15MouseClicked(evt);
            }
        });

        btnSyncronize24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Geo-fence_25px.png"))); // NOI18N
        btnSyncronize24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize24MouseClicked(evt);
            }
        });

        btnSyncronize25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cell_Phone_25px.png"))); // NOI18N
        btnSyncronize25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize25MouseClicked(evt);
            }
        });

        btnSyncronize26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cell_Phone_25px.png"))); // NOI18N
        btnSyncronize26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSyncronize26MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSyncronize19)
                    .addComponent(btnSyncronize24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSyncronize13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(txtDireccionCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtComuna, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(txtRutCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkExtranjero, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnSyncronize26)
                        .addGap(1, 1, 1)
                        .addComponent(txtTelefonoCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSyncronize15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSyncronize14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(btnSyncronize25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTelefonoCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtRutCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(txtNombreCliente)
                        .addComponent(chkExtranjero))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(btnSyncronize19, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSyncronize13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtTelefonoCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSyncronize15)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtComuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDireccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSyncronize26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefonoCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSyncronize25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnSyncronize24))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(btnSyncronize14)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "LEJOS ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel10.setText("Armazon");

        txtArmazonLejos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtArmazonLejosFocusLost(evt);
            }
        });
        txtArmazonLejos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArmazonLejosActionPerformed(evt);
            }
        });
        txtArmazonLejos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtArmazonLejosKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel16.setText("O.D.   ");

        txtODLejosESF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODLejosESFKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel17.setText("ESF");

        txtODLejosCIL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODLejosCILKeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel18.setText("CIL");

        txtODLejosA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODLejosAKeyTyped(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel19.setText("O.I.   ");

        txtOILejosESF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOILejosESFKeyTyped(evt);
            }
        });

        txtOILejosCIL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOILejosCILKeyTyped(evt);
            }
        });

        txtOILejosA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOILejosAKeyTyped(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel20.setText("CIL");

        jLabel21.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel21.setText("ESF");

        jLabel22.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel22.setText("D.P.   ");

        txtDPLejos.setModel(new javax.swing.SpinnerNumberModel(0, -99, 99, 1));

        chkEndurecidoLejos.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkEndurecidoLejos.setText("ENDURECIDO");

        chkCapaLejos.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkCapaLejos.setText("CAPA");

        chkPlusMaxLejos.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkPlusMaxLejos.setText("PLUS MAX");

        jLabel26.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel26.setText("Cristal");

        txtCristalLejos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCristalLejosFocusLost(evt);
            }
        });
        txtCristalLejos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCristalLejosKeyTyped(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel31.setText("A");

        jLabel41.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel41.setText("A");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel17)
                        .addGap(4, 4, 4)
                        .addComponent(txtODLejosESF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel18)
                        .addGap(28, 28, 28)
                        .addComponent(txtODLejosCIL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel31)
                        .addGap(4, 4, 4)
                        .addComponent(txtODLejosA, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel21)
                        .addGap(4, 4, 4)
                        .addComponent(txtOILejosESF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel20)
                        .addGap(28, 28, 28)
                        .addComponent(txtOILejosCIL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel41)
                        .addGap(4, 4, 4)
                        .addComponent(txtOILejosA, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtDPLejos, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(chkEndurecidoLejos)
                        .addGap(2, 2, 2)
                        .addComponent(chkCapaLejos)
                        .addGap(2, 2, 2)
                        .addComponent(chkPlusMaxLejos))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtArmazonLejos, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                            .addComponent(txtCristalLejos))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel10))
                    .addComponent(txtArmazonLejos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel26))
                    .addComponent(txtCristalLejos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel17))
                    .addComponent(txtODLejosESF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel18))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtODLejosCIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel31))
                    .addComponent(txtODLejosA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel21))
                    .addComponent(txtOILejosESF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txtOILejosCIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel41))
                    .addComponent(txtOILejosA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel22))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtDPLejos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkEndurecidoLejos)
                    .addComponent(chkCapaLejos)
                    .addComponent(chkPlusMaxLejos)))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "CERCA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        jLabel32.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel32.setText("Armazon");

        txtArmazonCerca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtArmazonCercaFocusLost(evt);
            }
        });
        txtArmazonCerca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtArmazonCercaKeyTyped(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel33.setText("O.D.   ");

        txtODCercaESF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtODCercaESFActionPerformed(evt);
            }
        });
        txtODCercaESF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODCercaESFKeyTyped(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel34.setText("ESF");

        txtODCercaCIL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODCercaCILKeyTyped(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel35.setText("A");

        txtODCercaA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODCercaAKeyTyped(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel36.setText("O.I.   ");

        txtOICercaESF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOICercaESFKeyTyped(evt);
            }
        });

        txtOICercaCIL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOICercaCILKeyTyped(evt);
            }
        });

        txtOICercaA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOICercaAKeyTyped(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel37.setText("A");

        jLabel38.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel38.setText("ESF");

        jLabel39.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel39.setText("D.P.   ");

        txtDPCerca.setModel(new javax.swing.SpinnerNumberModel(0, -99, 99, 1));

        chkEndurecidoCerca.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkEndurecidoCerca.setText("ENDURECIDO");

        chkCapaCerca.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkCapaCerca.setText("CAPA");

        chkPlusMaxCerca.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkPlusMaxCerca.setText("PLUS MAX");

        jLabel40.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel40.setText("ADD  ");

        txtAddCerca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddCercaKeyTyped(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel28.setText("Cristal");

        txtCristalCerca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCristalCercaFocusLost(evt);
            }
        });
        txtCristalCerca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCristalCercaKeyTyped(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel29.setText("CIL");

        jLabel30.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel30.setText("CIL");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel34)
                        .addGap(4, 4, 4)
                        .addComponent(txtODCercaESF, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel29)
                        .addGap(4, 4, 4)
                        .addComponent(txtODCercaCIL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel35)
                        .addGap(4, 4, 4)
                        .addComponent(txtODCercaA, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel38)
                        .addGap(4, 4, 4)
                        .addComponent(txtOICercaESF, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel30)
                        .addGap(4, 4, 4)
                        .addComponent(txtOICercaCIL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel37)
                        .addGap(4, 4, 4)
                        .addComponent(txtOICercaA, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtDPCerca, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chkEndurecidoCerca)
                        .addGap(2, 2, 2)
                        .addComponent(chkCapaCerca)
                        .addGap(2, 2, 2)
                        .addComponent(chkPlusMaxCerca))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel32))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCristalCerca)
                            .addComponent(txtAddCerca)
                            .addComponent(txtArmazonCerca))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel32))
                    .addComponent(txtArmazonCerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel28))
                    .addComponent(txtCristalCerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel40))
                    .addComponent(txtAddCerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtODCercaESF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtODCercaCIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtODCercaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34)
                            .addComponent(jLabel29)
                            .addComponent(jLabel35))))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(txtOICercaESF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOICercaCIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOICercaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addComponent(jLabel30)
                            .addComponent(jLabel37))))
                .addGap(5, 5, 5)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel39))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtDPCerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkEndurecidoCerca)
                    .addComponent(chkCapaCerca)
                    .addComponent(chkPlusMaxCerca)))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane1.setViewportView(txtObs);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        jLabel24.setText("Valor total");
        jPanel7.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        jLabel25.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        jLabel25.setText("Abono");
        jPanel7.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, -1, -1));

        txtAbono.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9999999, 1));
        txtAbono.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtAbonoStateChanged(evt);
            }
        });
        jPanel7.add(txtAbono, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 134, -1));

        cboTipoPago.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboTipoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTipoPago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTipoPagoItemStateChanged(evt);
            }
        });
        jPanel7.add(cboTipoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 110, -1));

        jLabel27.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        jLabel27.setText("Saldo");
        jPanel7.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, -1, -1));

        chkDescuento.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkDescuento.setText("Aplicar descuento");
        chkDescuento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                chkDescuentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                chkDescuentoFocusLost(evt);
            }
        });
        chkDescuento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkDescuentoMouseClicked(evt);
            }
        });
        chkDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDescuentoActionPerformed(evt);
            }
        });
        chkDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chkDescuentoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chkDescuentoKeyTyped(evt);
            }
        });
        jPanel7.add(chkDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 13, -1, -1));

        cboDescuento.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboDescuento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboDescuento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDescuentoItemStateChanged(evt);
            }
        });
        jPanel7.add(cboDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 14, 330, -1));

        lblDescuento.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        lblDescuento.setText("Dscto");
        jPanel7.add(lblDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        txtSaldo.setEditable(false);
        txtSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaldoActionPerformed(evt);
            }
        });
        txtSaldo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtSaldoPropertyChange(evt);
            }
        });
        jPanel7.add(txtSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 118, -1));

        txtDescuento.setEditable(false);
        txtDescuento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtDescuentoPropertyChange(evt);
            }
        });
        jPanel7.add(txtDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 80, -1));

        lblCristalLejos.setText("0");
        jPanel7.add(lblCristalLejos, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, -1, -1));

        lblCristalCerca.setText("0");
        jPanel7.add(lblCristalCerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, -1));

        lblLenteCerca.setText("0");
        jPanel7.add(lblLenteCerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, -1, -1));

        lblLenteLejos.setText("0");
        jPanel7.add(lblLenteLejos, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, -1, -1));

        txtTotal.setEditable(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        txtTotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtTotalPropertyChange(evt);
            }
        });
        jPanel7.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 117, -1));

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Save_50px.png"))); // NOI18N
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(540, 540, 540)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(860, 860, 860)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(700, 700, 700)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSave)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(btnSave)
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtTotalPropertyChange
        txtTotal.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtTotalPropertyChange

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtDescuentoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtDescuentoPropertyChange
        txtDescuento.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtDescuentoPropertyChange

    private void txtSaldoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtSaldoPropertyChange
        txtSaldo.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtSaldoPropertyChange

    private void txtSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaldoActionPerformed

    private void cboDescuentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDescuentoItemStateChanged
        calcularSaldo();
    }//GEN-LAST:event_cboDescuentoItemStateChanged

    private void chkDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chkDescuentoKeyTyped

    }//GEN-LAST:event_chkDescuentoKeyTyped

    private void chkDescuentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chkDescuentoKeyPressed
        if(chkDescuento.isSelected())
        cboDescuento.setVisible(true);
        else
        cboDescuento.setVisible(false);
    }//GEN-LAST:event_chkDescuentoKeyPressed

    private void chkDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDescuentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkDescuentoActionPerformed

    private void chkDescuentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkDescuentoMouseClicked

        calcularSaldo();
        if(chkDescuento.isSelected()){
            cboDescuento.setVisible(true);
            lblDescuento.setVisible(true);
            txtDescuento.setVisible(true);
        }
        if(!chkDescuento.isSelected()){
            cboDescuento.setSelectedIndex(0);
            cboDescuento.setVisible(false);
            lblDescuento.setVisible(false);
            txtDescuento.setVisible(false);

        }
    }//GEN-LAST:event_chkDescuentoMouseClicked

    private void chkDescuentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chkDescuentoFocusLost

    }//GEN-LAST:event_chkDescuentoFocusLost

    private void chkDescuentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chkDescuentoFocusGained

    }//GEN-LAST:event_chkDescuentoFocusGained

    private void cboTipoPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTipoPagoItemStateChanged

        String nombre = (String) cboTipoPago.getSelectedItem();
        TipoPago tp = null;
        try {
            tp = load.buscarTipoPago(nombre);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error inesparado: "+ex);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error inesparado: "+ex);
        }
        if(tp != null){
            this.lblIdTipoPago.setText(""+tp.getId());
        }else{
            this.lblIdTipoPago.setText("0");
        }
    }//GEN-LAST:event_cboTipoPagoItemStateChanged

    private void txtAbonoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtAbonoStateChanged
        calcularSaldo();
    }//GEN-LAST:event_txtAbonoStateChanged

    private void txtCristalCercaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCristalCercaKeyTyped
        int largo = 45;
        if(txtCristalCerca.getText().length() >= largo){
            evt.consume();

        }
    }//GEN-LAST:event_txtCristalCercaKeyTyped

    private void txtCristalCercaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCristalCercaFocusLost

        try {
            Cristal cristal = load.cargarCristal(txtCristalCerca.getText());
            if(cristal != null){
                lblCristalCerca.setText(""+cristal.getPrecio());
                txtCristalCerca.setForeground(Color.black);
            }else{
                lblCristalCerca.setText("0");
                txtCristalCerca.setForeground(Color.red);
            }
            calcularTotal();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtCristalCercaFocusLost

    private void txtAddCercaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddCercaKeyTyped
        int largo = 45;
        if(txtAddCerca.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtAddCercaKeyTyped

    private void txtOICercaAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOICercaAKeyTyped
        int largo = 45;
        if(txtOICercaA.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtOICercaAKeyTyped

    private void txtOICercaCILKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOICercaCILKeyTyped
        int largo = 45;
        if(txtOICercaCIL.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtOICercaCILKeyTyped

    private void txtOICercaESFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOICercaESFKeyTyped
        int largo = 45;
        if(txtOICercaESF.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtOICercaESFKeyTyped

    private void txtODCercaAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODCercaAKeyTyped
        int largo = 45;
        if(txtODCercaA.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtODCercaAKeyTyped

    private void txtODCercaCILKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODCercaCILKeyTyped
        int largo = 45;
        if(txtODCercaCIL.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtODCercaCILKeyTyped

    private void txtODCercaESFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODCercaESFKeyTyped
        int largo = 45;
        if(txtODCercaESF.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtODCercaESFKeyTyped

    private void txtODCercaESFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtODCercaESFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtODCercaESFActionPerformed

    private void txtArmazonCercaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArmazonCercaKeyTyped
        int largo = 45;
        if(txtArmazonCerca.getText().length() >= largo){
            evt.consume();

        }
    }//GEN-LAST:event_txtArmazonCercaKeyTyped

    private void txtArmazonCercaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArmazonCercaFocusLost
        try {
            Lente lente = load.cargarLente(txtArmazonCerca.getText());
            if(lente != null){

                lblLenteCerca.setText(""+lente.getPrecioAct());
                txtArmazonCerca.setForeground(Color.black);

            }else{
                lblLenteCerca.setText("0");
                txtArmazonCerca.setForeground(Color.red);
            }
            calcularTotal();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtArmazonCercaFocusLost

    private void txtCristalLejosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCristalLejosKeyTyped
        int largo = 45;
        if(txtCristalLejos.getText().length() >= largo){
            evt.consume();

        }
    }//GEN-LAST:event_txtCristalLejosKeyTyped

    private void txtCristalLejosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCristalLejosFocusLost

        try {
            Cristal cristal = load.cargarCristal(txtCristalLejos.getText());
            if(cristal != null){
                lblCristalLejos.setText(""+cristal.getPrecio());
                txtCristalLejos.setForeground(Color.black);
            }else{
                lblCristalLejos.setText("0");
                txtCristalLejos.setForeground(Color.red);
            }
            calcularTotal();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtCristalLejosFocusLost

    private void txtOILejosAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOILejosAKeyTyped
        int largo = 45;
        if(txtOILejosA.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtOILejosAKeyTyped

    private void txtOILejosCILKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOILejosCILKeyTyped
        int largo = 45;
        if(txtOILejosESF.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtOILejosCILKeyTyped

    private void txtOILejosESFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOILejosESFKeyTyped
        int largo = 45;
        if(txtOILejosESF.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtOILejosESFKeyTyped

    private void txtODLejosAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODLejosAKeyTyped
        int largo = 45;
        if(txtODLejosA.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtODLejosAKeyTyped

    private void txtODLejosCILKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODLejosCILKeyTyped
        int largo = 45;
        if(txtODLejosCIL.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtODLejosCILKeyTyped

    private void txtODLejosESFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODLejosESFKeyTyped
        int largo = 45;
        if(txtODLejosESF.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtODLejosESFKeyTyped

    private void txtArmazonLejosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArmazonLejosKeyTyped
        int largo = 45;
        if(txtArmazonLejos.getText().length() >= largo){
            evt.consume();
        }
    }//GEN-LAST:event_txtArmazonLejosKeyTyped

    private void txtArmazonLejosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArmazonLejosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtArmazonLejosActionPerformed

    private void txtArmazonLejosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArmazonLejosFocusLost
        try {
            Lente lente = load.cargarLente(txtArmazonLejos.getText());
            if(lente != null){

                lblLenteLejos.setText(""+lente.getPrecioAct());
                txtArmazonLejos.setForeground(Color.black);

            }else{
                lblLenteLejos.setText("0");
                txtArmazonLejos.setForeground(Color.red);
            }
            calcularTotal();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtArmazonLejosFocusLost

    private void txtDoctorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDoctorFocusLost
        String nombre = txtDoctor.getText();
        String rutDoctor = "";
        try {
            if(load.cargarDoctor(nombre) != null){
                rutDoctor = load.cargarDoctor(nombre).getRut();
                txtDoctor.setForeground(Color.black);
            }else{
                txtDoctor.setForeground(Color.red);
            }
            GlobalValues.TMP_RUT_DOCTOR=rutDoctor;
        } catch (SQLException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtDoctorFocusLost

    private void txtEntregaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntregaKeyTyped
        int largo = 45;
        if(txtEntrega.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Datos mal ingresados", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtEntregaKeyTyped

    private void btnSyncronize16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize16MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize16MouseClicked

    private void txtEntregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEntregaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEntregaActionPerformed

    private void btnSyncronize17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize17MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize17MouseClicked

    private void btnSyncronize18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize18MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize18MouseClicked

    private void btnSyncronize20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize20MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize20MouseClicked

    private void btnSyncronize21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize21MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize21MouseClicked

    private void btnSyncronize15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize15MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize15MouseClicked

    private void btnSyncronize14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize14MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize14MouseClicked

    private void btnSyncronize19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize19MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize19MouseClicked

    private void btnSyncronize13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize13MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize13MouseClicked

    private void txtTelefonoCliente1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoCliente1KeyTyped
        int largo = 12;
        if(txtTelefonoCliente1.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "El teléfono debe contener hasta 12 caracteres", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtTelefonoCliente1KeyTyped

    private void chkExtranjeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkExtranjeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkExtranjeroActionPerformed

    private void txtCiudadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCiudadKeyTyped
        int largo = 45;
        if(txtCiudad.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "La ciudad debe contener hasta 45 caracteres", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtCiudadKeyTyped

    private void txtComunaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComunaKeyTyped
        int largo = 45;
        if(txtComuna.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "La comuna debe contener hasta 45 caracteres", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtComunaKeyTyped

    private void txtDireccionClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionClienteKeyTyped
        int largo = 45;
        if(txtDireccionCliente.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "La dirección debe contener hasta 45 caracteres", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtDireccionClienteKeyTyped

    private void txtMailClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMailClienteKeyTyped
        int largo = 45;
        if(txtMailCliente.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "El email debe contener hasta 45 caracteres", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtMailClienteKeyTyped

    private void txtMailClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMailClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMailClienteActionPerformed

    private void txtTelefonoCliente2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoCliente2KeyTyped
        int largo = 12;
        if(txtTelefonoCliente2.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "El teléfono debe contener hasta 12 caracteres", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtTelefonoCliente2KeyTyped

    private void txtNombreClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreClienteKeyTyped
        int largo = 45;
        if(txtNombreCliente.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "El nombre debe contener hasta 45 caracteres", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtNombreClienteKeyTyped

    private void txtRutClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRutClienteKeyTyped
        int largo = 10;

        String rutCliente = txtRutCliente.getText();
        Cliente temp = new Cliente();
        FnValidaRut vr = new FnValidaRut();
        if(vr.validarRut(rutCliente)){
            txtRutCliente.setForeground(Color.black);
        }else{
            txtRutCliente.setForeground(Color.red);
        }
        try {
            temp = load.cargarCliente(rutCliente);
            if(temp != null){
                txtNombreCliente.setText(temp.getNombre());
                if(temp.getTelefono() != null){
                    if(temp.getTelefono().contains("/")){
                        int ind = temp.getTelefono().indexOf("/");
                        txtTelefonoCliente1.setText(temp.getTelefono().substring(0, ind).replace("/", "").trim());
                        txtTelefonoCliente2.setText(temp.getTelefono().substring(ind, temp.getTelefono().length()).replace("/", "").trim());
                    }else{
                        txtTelefonoCliente1.setText(temp.getTelefono().replace("/", "").trim());
                        txtTelefonoCliente2.setText("");
                    }
                }
                txtMailCliente.setText(temp.getEmail());
                txtDireccionCliente.setText(temp.getDireccion());
                txtComuna.setText(temp.getComuna());
                txtCiudad.setText(temp.getCiudad());
                cboSexo.setSelectedIndex(temp.getSexo());
                txtEdad.setValue((int) temp.getEdad());
            }
        } catch (SQLException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtRutClienteKeyTyped

    private void txtRutClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutClienteActionPerformed

    }//GEN-LAST:event_txtRutClienteActionPerformed

    private void txtRutClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRutClienteFocusLost
        String rutCliente = txtRutCliente.getText();
        FnValidaRut vr = new FnValidaRut();
        if(vr.validarRut(rutCliente)){
            txtRutCliente.setForeground(Color.green);
        }else{
            txtRutCliente.setForeground(Color.red);
        }
        Cliente temp = new Cliente();
        try {
            temp = load.cargarCliente(rutCliente);
            if(temp != null){
                txtNombreCliente.setText(temp.getNombre());
                if(temp.getTelefono() != null){
                    if(temp.getTelefono().contains("/")){
                        int ind = temp.getTelefono().indexOf("/");
                        txtTelefonoCliente1.setText(temp.getTelefono().substring(0, ind).replace("/", "").trim());
                        txtTelefonoCliente2.setText(temp.getTelefono().substring(ind, temp.getTelefono().length()).replace("/", "").trim());
                    }else{
                        txtTelefonoCliente1.setText(temp.getTelefono().replace("/", "").trim());
                        txtTelefonoCliente2.setText("");
                    }
                }
                txtMailCliente.setText(temp.getEmail());
                txtDireccionCliente.setText(temp.getDireccion());
                txtComuna.setText(temp.getComuna());
                txtCiudad.setText(temp.getCiudad());
                cboSexo.setSelectedIndex(temp.getSexo());
                txtEdad.setValue((int) temp.getEdad());
            }else{
                txtNombreCliente.setText("");
                txtTelefonoCliente2.setText("");
                txtMailCliente.setText("");
                txtDireccionCliente.setText("");
                txtComuna.setText("");
                txtCiudad.setText("");
                cboSexo.setSelectedIndex(0);
                txtEdad.setValue(0);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtRutClienteFocusLost

    private void txtInstitucionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInstitucionKeyTyped
        int largo = 45;
        if(txtInstitucion.getText().length() >= largo){
            evt.consume();
            JOptionPane.showMessageDialog(null, "La institucion solo debe contener hasta 45 caracteres", "Error de ingreso de datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtInstitucionKeyTyped

    private void txtInstitucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInstitucionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInstitucionActionPerformed

    private void txtInstitucionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInstitucionFocusLost
        String nombre = txtInstitucion.getText();
        int idInstitucion = 0;
        try {
            if(load.cargarInstitucion(nombre) != null){
                idInstitucion = load.cargarInstitucion(nombre).getId();
                txtInstitucion.setForeground(Color.black);
            }else{
                txtInstitucion.setForeground(Color.red);
            }
            GlobalValues.TMP_ID_INSTITUCION=idInstitucion;
        } catch (SQLException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VCrearFicha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtInstitucionFocusLost

    private void btnSyncronize24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize24MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize24MouseClicked

    private void btnSyncronize25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize25MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize25MouseClicked

    private void btnSyncronize26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSyncronize26MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSyncronize26MouseClicked

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        save();
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnSave.getIcon().toString()))));
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnSave.getIcon().toString()))));
    }//GEN-LAST:event_btnSaveMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnSave;
    private javax.swing.JLabel btnSyncronize13;
    private javax.swing.JLabel btnSyncronize14;
    private javax.swing.JLabel btnSyncronize15;
    private javax.swing.JLabel btnSyncronize16;
    private javax.swing.JLabel btnSyncronize17;
    private javax.swing.JLabel btnSyncronize18;
    private javax.swing.JLabel btnSyncronize19;
    private javax.swing.JLabel btnSyncronize20;
    private javax.swing.JLabel btnSyncronize21;
    private javax.swing.JLabel btnSyncronize24;
    private javax.swing.JLabel btnSyncronize25;
    private javax.swing.JLabel btnSyncronize26;
    private javax.swing.JComboBox<String> cboDescuento;
    private javax.swing.JComboBox<String> cboSexo;
    private javax.swing.JComboBox<String> cboTipoPago;
    private javax.swing.JCheckBox chkCapaCerca;
    private javax.swing.JCheckBox chkCapaLejos;
    private javax.swing.JCheckBox chkDescuento;
    private javax.swing.JCheckBox chkEndurecidoCerca;
    private javax.swing.JCheckBox chkEndurecidoLejos;
    private javax.swing.JCheckBox chkExtranjero;
    private javax.swing.JCheckBox chkPlusMaxCerca;
    private javax.swing.JCheckBox chkPlusMaxLejos;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCristalCerca;
    private javax.swing.JLabel lblCristalLejos;
    private javax.swing.JLabel lblDescuento;
    private javax.swing.JLabel lblLenteCerca;
    private javax.swing.JLabel lblLenteLejos;
    private javax.swing.JSpinner txtAbono;
    private javax.swing.JTextField txtAddCerca;
    private javax.swing.JTextField txtArmazonCerca;
    private javax.swing.JTextField txtArmazonLejos;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtComuna;
    private javax.swing.JTextField txtCristalCerca;
    private javax.swing.JTextField txtCristalLejos;
    private javax.swing.JSpinner txtDPCerca;
    private javax.swing.JSpinner txtDPLejos;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtDireccionCliente;
    private javax.swing.JTextField txtDoctor;
    private javax.swing.JSpinner txtEdad;
    private javax.swing.JTextField txtEntrega;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JSpinner txtHora1;
    private javax.swing.JSpinner txtHora2;
    private javax.swing.JTextField txtInstitucion;
    private javax.swing.JTextField txtMailCliente;
    private javax.swing.JSpinner txtMinuto1;
    private javax.swing.JSpinner txtMinuto2;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtODCercaA;
    private javax.swing.JTextField txtODCercaCIL;
    private javax.swing.JTextField txtODCercaESF;
    private javax.swing.JTextField txtODLejosA;
    private javax.swing.JTextField txtODLejosCIL;
    private javax.swing.JTextField txtODLejosESF;
    private javax.swing.JTextField txtOICercaA;
    private javax.swing.JTextField txtOICercaCIL;
    private javax.swing.JTextField txtOICercaESF;
    private javax.swing.JTextField txtOILejosA;
    private javax.swing.JTextField txtOILejosCIL;
    private javax.swing.JTextField txtOILejosESF;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JTextField txtRutCliente;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtTelefonoCliente1;
    private javax.swing.JTextField txtTelefonoCliente2;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void cargarCbos() throws SQLException, ClassNotFoundException {
        cboSexo.removeAllItems();
        cboSexo.addItem("Sin Seleccionar");
        cboSexo.addItem("Femenino");
        cboSexo.addItem("Masculino");
        
        txtSaldo.setEditable(false);
        txtDescuento.setEditable(false);
        lblDescuento.setVisible(false);
        txtDescuento.setVisible(false);
        lblIdTipoPago.setVisible(false);
        
        
        cboDescuento.setVisible(false);
        cboDescuento.removeAllItems();
        cboDescuento.addItem("Sin descuento");
        int contDscto = 0;
        for (Descuento temp : load.listaDescuento()) {
            cboDescuento.addItem(temp.getNombre()+" ("+temp.getPorcetange()+"%)");
            contDscto++;
        }
        if(contDscto > 0)
            cboDescuento.setSelectedIndex(1);
        
        cboTipoPago.removeAllItems();
        cboTipoPago.addItem("Seleccione");
        for (TipoPago temp : load.listaTipoPago()) {
            cboTipoPago.addItem(temp.getNombre());
        }
        GlobalValues.TMP_ID_INSTITUCION=0;
        GlobalValues.TMP_RUT_DOCTOR="0";
        
        chkCapaCerca.setSelected(false);
        chkCapaLejos.setSelected(false);
        chkDescuento.setSelected(false);
        chkEndurecidoCerca.setSelected(false);
        chkEndurecidoLejos.setSelected(false);
        chkPlusMaxCerca.setSelected(false);
        chkPlusMaxLejos.setSelected(false);
        cboDescuento.setVisible(false);
    }

    private void autocompletar() throws SQLException, ClassNotFoundException {
        TextAutoCompleter textAutoCompleter = new TextAutoCompleter(txtInstitucion);
        textAutoCompleter.setMode(0);
        for (Institucion temp : load.listarInstituciones()) {
            textAutoCompleter.addItem(temp.getNombre());
            textAutoCompleter.setMode(0);
        }
        
      
        
        
        TextAutoCompleter textAutoCompleter2 = new TextAutoCompleter(txtRutCliente);
        for (Cliente temp : load.listarClientes()) {
            textAutoCompleter2.addItem(temp.getRut());
            textAutoCompleter2.setMode(0);
        }
        
        TextAutoCompleter textAutoCompleter3 = new TextAutoCompleter(txtDoctor);
        for (Doctor temp : load.listarDoctores()) {
            textAutoCompleter3.addItem(temp.getNombre());
            textAutoCompleter3.setMode(0);
        }
        
        TextAutoCompleter textAutoCompleter4 = new TextAutoCompleter(txtCristalCerca);
        for (Cristal temp : load.listarCristales()) {
            textAutoCompleter4.addItem(temp.getNombre());
            textAutoCompleter4.setMode(0);
        }
        
        TextAutoCompleter textAutoCompleter5 = new TextAutoCompleter(txtCristalLejos);
        for (Cristal temp : load.listarCristales()) {
            textAutoCompleter5.addItem(temp.getNombre());
            textAutoCompleter5.setMode(0);
        }
        
        TextAutoCompleter textAutoCompleter6 = new TextAutoCompleter(txtArmazonCerca);
        for (Lente temp : load.listarLentesConStock()) {
            textAutoCompleter6.addItem(temp.getCodigo());
            textAutoCompleter6.setMode(0);
        }
        
        TextAutoCompleter textAutoCompleter7 = new TextAutoCompleter(txtArmazonLejos);
        for (Lente temp : load.listarLentesConStock()) {
            textAutoCompleter7.addItem(temp.getCodigo());
            textAutoCompleter7.setMode(0);
        }
        TextAutoCompleter textAutoCompleter8 = new TextAutoCompleter(txtEntrega);
        textAutoCompleter8.setMode(0);
        for (Institucion temp : load.listarInstituciones()) {
            textAutoCompleter8.addItem(temp.getNombre());
            textAutoCompleter8.setMode(0);
        }
    }

    private void calcularSaldo() {
        int total =  Integer.parseInt(txtTotal.getText());
        int abono = (int)txtAbono.getValue();
        int descuento = 0;
        int porcentaje = 0;
        if(!chkDescuento.isSelected() || cboDescuento.getSelectedIndex()==0){
            GlobalValues.TMP_ID_DESCUENTO=0;
            txtDescuento.setText("0");
//            lblIdTipoPago.setText("0");
            
            total = total-descuento-abono;
            txtSaldo.setText("$ "+total);
            if(total < 0){
                txtSaldo.setForeground(Color.red);
            }else{
                txtSaldo.setForeground(Color.black);
            }
        }else{
            GlobalValues.TMP_ID_DESCUENTO = 0;
//            lblIdTipoPago.setText("0");
            cboDescuento.setVisible(true);
            lblDescuento.setVisible(true);
            txtDescuento.setVisible(true);
            String seleccionado = (String) cboDescuento.getSelectedItem();
            
            if(seleccionado != null){
                int ultimoEspacio = 0;
                for (int i=0; i < seleccionado.length()-1; i++) {
                    if (i>0 && seleccionado.substring(i, i+1).equals(" ")) {
                        ultimoEspacio = i;

                    }
                }
                seleccionado = seleccionado.substring(0, ultimoEspacio);
                }
                try {
                    Descuento des = load.buscarDescuento(seleccionado);
                    if(des != null){
                        GlobalValues.TMP_ID_DESCUENTO = des.getId();
                        porcentaje = des.getPorcetange();
                        descuento = (total*porcentaje)/100;
                        txtDescuento.setText("$ "+descuento);
                        total = total-descuento-abono;
                        txtSaldo.setText("$ "+total);
                        if(total < 0){
                            txtSaldo.setForeground(Color.red);
                        }else{
                            txtSaldo.setForeground(Color.black);
                        }
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error inesperado: "+ex);
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Error inesperado: "+ex);
                }
        }
        
            
    }

    private void limpiarDatos() throws SQLException, ClassNotFoundException {
        //Limpiar todo menos doctor y datos de entrega
        txtAbono.setValue(0);
        txtAddCerca.setText("");
        txtCiudad.setText("");
        txtComuna.setText("");
        txtArmazonCerca.setText("");
        txtArmazonLejos.setText("");
        txtCristalCerca.setText("");
        txtCristalLejos.setText("");
        txtDPCerca.setValue(0);
        txtDPLejos.setValue(0);
        txtDescuento.setText("0");
        txtDireccionCliente.setText("");
        txtEdad.setValue(0);
        txtInstitucion.setText("");
        txtMailCliente.setText("");
        txtNombreCliente.setText("");
        txtODCercaESF.setText("");
        txtODCercaA.setText("");
        txtODCercaCIL.setText("");
        txtODLejosESF.setText("");
        txtODLejosA.setText("");
        txtODLejosCIL.setText("");
        txtODLejosCIL.setText("");
        txtOICercaESF.setText("");
        txtOICercaA.setText("");
        txtOICercaCIL.setText("");
        txtOILejosESF.setText("");
        txtOILejosA.setText("");
        txtOILejosCIL.setText("");
        txtObs.setText("");
        txtRutCliente.setText("");
        txtSaldo.setText("$ 0");
        txtTelefonoCliente2.setText("");
        txtArmazonCerca.setText("");
        txtArmazonLejos.setText("");
        txtTotal.setText("0");
        cargarCbos();
        
    }

    private void calcularTotal() {
        int total = Integer.parseInt(lblCristalLejos.getText()) + Integer.parseInt(lblCristalCerca.getText());
        total = total + Integer.parseInt(lblLenteCerca.getText()) + Integer.parseInt(lblLenteLejos.getText());
        txtTotal.setText(""+total);
        calcularSaldo();
    }

    /**
     * Compara si las hora1 es menor que la hora 2
     * @param hora1
     * @param min1
     * @param hora2
     * @param min2
     * @return devuelve true si la hora 1 es menor que la hora 2
     */
    private boolean compararHoras(int hora1, int min1, int hora2, int min2) {
        String h1 = "";
        String m1 = "";
        if(hora1 < 10)
            h1 = "0";
        if(min1 < 10)
            m1 = "0";
        String h2 = "";
        String m2 = "";
        if(hora2 < 10)
            h2 = "0";
        if(min2 < 10)
            m2 = "0";
        String hh1 = h1+hora1+m1+min1;
        String hh2 = h2+hora2+m2+min2;
        
        int t1 = Integer.parseInt(hh1);
        int t2 = Integer.parseInt(hh2);
        
        if(t1 < t2)
            return true;
        return false;
    }

    private String formatoHora(int hora, int min) {
        String h = "";
        String m = "";
        if(hora < 10)
        h = "0";
        if(min < 10)
        m = "0";
            
        return h+hora+":"+m+min;
    }

    private void save() {
        //validado: validar si esta seleccionado el checbox descuento y ssi estan seleccionados los combobox descuento
        //valilado: validar si esta seleccionado el combobox tipo pago
        //validado: que el saldo sea mayor que cero
        //validado: validar que los JTextField necesarios tengan datos.
        FnValidaRut vr = new FnValidaRut();
        calcularSaldo();

        //VARIABLES PARA LA FICHA
        int idDescuento = 0;
        Descuento dscto = null;
        int idTipoPago = Integer.parseInt(this.lblIdTipoPago.getText());

        int idInstitucion = GlobalValues.TMP_ID_INSTITUCION;
        int idFicha = 0;
        try {
            idFicha = load.obtenerFolio();
            if(!load.actualizarFolio(idFicha)){
                JOptionPane.showMessageDialog(null, "Ocurrió un error al comunicarse con la base de datos,/nNo se pudo actualizar el Id del folio","Error al actualizar numero de folio",JOptionPane.WARNING_MESSAGE);
                return;
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error desconocido, Detalles: "+ex.getMessage(),"Error al cargar numero de folio",JOptionPane.WARNING_MESSAGE);
            return;
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error desconocido, Detalles: "+ex.getMessage(),"Error al cargar numero de folio",JOptionPane.WARNING_MESSAGE);
            return;
        }
        String rutCliente = txtRutCliente.getText();
        if(!chkExtranjero.isSelected()){
            if(!vr.validarRut(rutCliente)){
                JOptionPane.showMessageDialog(null, "El rut ingresado del cliente no existe", "Error de Rut",JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        String rutDoctor = GlobalValues.TMP_RUT_DOCTOR;
        Date fecha = new Date();
        Date fechaEntrega = txtFecha.getDate();
        String lugarEntrega = txtEntrega.getText().toUpperCase();
        int hora1 = (int) txtHora1.getValue();
        int min1 = (int) txtMinuto1.getValue();
        int hora2 = (int) txtHora2.getValue();
        int min2 = (int) txtMinuto2.getValue();

        if(fechaEntrega == null || lugarEntrega.length() < 3 || hora1 == 0 || hora2 == 0){
            JOptionPane.showMessageDialog(null, "Debe ingresar datos de entrega.","Faltan datos",JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if(!compararHoras(hora1,min1,hora2,min2)){
            JOptionPane.showMessageDialog(null, "Las horas están mal ingresadas,\nLa segunda hora debe ser mayor que la primera.","Faltan datos",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String horaEntrega1 = formatoHora(hora1,min1);
        String horaEntrega2 = formatoHora(hora2,min2);

        int total = Integer.parseInt(txtTotal.getText());
        int saldo = Integer.parseInt(txtSaldo.getText().replace("$ ",""));
        String obs = txtObs.getText();
        int estado = 1;//pendiente
        if(saldo == 0)
        estado = 2;//pagado
        if(saldo < 0){
            JOptionPane.showMessageDialog(null, "El abono ingresado no es correcto", "Corrija los datos", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(chkDescuento.isSelected()){
            if(GlobalValues.TMP_ID_DESCUENTO == 0){
                JOptionPane.showMessageDialog(null, "Debe seleccionar un descuento", "Seleccione un descuento", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            try {
                dscto = load.cargarDescuento(GlobalValues.TMP_ID_DESCUENTO);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "No se pudo cargar descuento, Detalles: "+ex.getMessage(),"Error al cargar descuento",JOptionPane.WARNING_MESSAGE);
                return;
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "No se pudo cargar descuento, Detalles: "+ex.getMessage(),"Error al cargar descuento",JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        int despacho = 0;//no se encuentra despachado
        Cliente cliente = null;
        try {
            //validar si cliente existe, si no existe guardar, si existe modificar
            cliente = load.cargarCliente(rutCliente);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error inesperado: "+ex.getMessage(),"Error al obtener cliente", JOptionPane.WARNING_MESSAGE);
            return;
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error inesperado: "+ex.getMessage(),"Error al obtener cliente", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //crear armazon lejos
        Armazon lejos = new Armazon();
        if(chkCapaLejos.isSelected())
        lejos.setCapa(1);
        else
        lejos.setCapa(0);
        lejos.setCristal(txtCristalLejos.getText());

        lejos.setDp((int) txtDPLejos.getValue());
        if(chkEndurecidoLejos.isSelected())
        lejos.setEndurecido(1);
        else
        lejos.setEndurecido(0);
        lejos.setMarca(txtArmazonLejos.getText());
        lejos.setIdFicha(idFicha);
        lejos.setOdA(txtODLejosA.getText());
        lejos.setOdCil(txtODLejosCIL.getText());
        lejos.setOdEsf(txtODLejosESF.getText());
        lejos.setOiA(txtOILejosA.getText());
        lejos.setOiCil(txtOILejosCIL.getText());
        lejos.setOiEsf(txtOILejosESF.getText());
        if(chkPlusMaxLejos.isSelected())
        lejos.setPlusMax(1);
        else
        lejos.setPlusMax(0);
        lejos.setTipo(1);

        //crear armazon cerca
        Armazon cerca = new Armazon();
        cerca.setAdd(txtAddCerca.getText());
        if(chkCapaCerca.isSelected())
        cerca.setCapa(1);
        else
        cerca.setCapa(0);
        cerca.setCristal(txtCristalCerca.getText());
        cerca.setDp((int) txtDPCerca.getValue());
        if(chkEndurecidoCerca.isSelected())
        cerca.setEndurecido(1);
        else
        cerca.setEndurecido(0);
        cerca.setMarca(txtArmazonCerca.getText());
        cerca.setIdFicha(idFicha);
        cerca.setOdA(txtODCercaA.getText());
        cerca.setOdCil(txtODCercaCIL.getText());
        cerca.setOdEsf(txtODCercaESF.getText());
        cerca.setOiA(txtOICercaA.getText());
        cerca.setOiCil(txtOICercaCIL.getText());
        cerca.setOiEsf(txtOICercaESF.getText());
        if(chkPlusMaxCerca.isSelected())
        cerca.setPlusMax(1);
        else
        cerca.setPlusMax(0);
        cerca.setTipo(0);

        if((cerca.getCristal().length()<1 && lejos.getCristal().length() < 1) || (cerca.getMarca().length() < 1 && lejos.getMarca().length() < 1)){
            JOptionPane.showMessageDialog(null, "Debe agregar al menos un armazón a la ficha", "Faltan valores", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        //crear historial de pago
        int abono = (int) txtAbono.getValue();
        if(abono > 0 && cboTipoPago.getSelectedIndex() == 0 && idTipoPago==0){
            JOptionPane.showMessageDialog(null, "Error, Debe seleccionsr un tipo de pago","Selecciona tipo de pago",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        HistorialPago hp = null;
        if(abono < 1){
            int respAbono2 = JOptionPane.showConfirmDialog(null, "¿Desea registrar un abono?", "Abono no ingresado", JOptionPane.YES_NO_OPTION);
            if(respAbono2 == JOptionPane.YES_OPTION){
                return;
            }
        }else{
            hp = new HistorialPago(0, fecha,abono, 1, idTipoPago, idFicha);
        }

        try {
            //actualizar ficha_actual en info
            Doctor dr = load.cargarDoctorRut(rutDoctor);
            Institucion ins = load.cargarInstitucionId(idInstitucion);

            Ficha ficha = new Ficha();
            ficha.setCerca(cerca);
            ficha.setCliente(cliente);
            ficha.setDescuento(dscto);
            ficha.setDespacho(null);
            ficha.setDoctor(dr);
            ficha.setEstado(estado);
            ficha.setFecha(fecha);
            ficha.setFechaEntrega(fechaEntrega);
            ficha.setHoraEntrega(horaEntrega1+" a "+horaEntrega2);
            ficha.setId(idFicha);
            ficha.setInstitucion(ins);
            ficha.setLejos(lejos);
            ficha.setLugarEntrega(lugarEntrega);
            ficha.setObservacion(obs);
            ficha.setSaldo(saldo);
            ficha.setValorTotal(total);

            if(cliente != null){
                cliente.setCiudad(txtCiudad.getText().toUpperCase());
                cliente.setComuna(txtComuna.getText().toUpperCase());
                cliente.setDireccion(txtDireccionCliente.getText().toUpperCase());
                cliente.setEdad((int)txtEdad.getValue());
                cliente.setEmail(txtMailCliente.getText());
                cliente.setNombre(txtNombreCliente.getText().toUpperCase());
                cliente.setSexo(cboSexo.getSelectedIndex());
                if(txtTelefonoCliente2.getText().length() > 0){
                    cliente.setTelefono(txtTelefonoCliente1.getText() + " / " +txtTelefonoCliente2.getText());
                }else{
                    cliente.setTelefono(txtTelefonoCliente1.getText());
                }
                //actualizar
                if(!load.actualizarCliente(cliente)){
                    JOptionPane.showMessageDialog(null, "No se pudo completar la operación [1100]", "Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }else{
                cliente = new Cliente();
                cliente.setRut(txtRutCliente.getText());
                cliente.setCiudad(txtCiudad.getText().toUpperCase());
                cliente.setComuna(txtComuna.getText().toUpperCase());
                cliente.setDireccion(txtDireccionCliente.getText().toUpperCase());
                cliente.setEdad((int)txtEdad.getValue());
                cliente.setEmail(txtMailCliente.getText());
                cliente.setNombre(txtNombreCliente.getText().toUpperCase());
                cliente.setSexo(cboSexo.getSelectedIndex());
                if(txtTelefonoCliente2.getText().length() > 0){
                    cliente.setTelefono(txtTelefonoCliente1.getText() + " / " +txtTelefonoCliente2.getText());
                }else{
                    cliente.setTelefono(txtTelefonoCliente1.getText());
                }
                cliente.setEstado(1);
                ficha.setCliente(cliente);
                //guardar
                if(!load.guardarCliente(cliente)){
                    JOptionPane.showMessageDialog(null, "No se pudo completar la operación [1102]", "Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }

            int resp = JOptionPane.showConfirmDialog(null, "¿Esta seguro que los datos ingresados están correctos?", "Guardar Ficha", JOptionPane.YES_NO_OPTION);
            if(resp == JOptionPane.YES_OPTION){

                //Guardar valores en BD
                //guardar armazones
                if(!load.guardarArmazon(ficha.getCerca())){
                    JOptionPane.showMessageDialog(null, "No se pudo completar la operación [1104]", "Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if(!load.guardarArmazon(ficha.getLejos())){
                    JOptionPane.showMessageDialog(null, "No se pudo completar la operación [1106]", "Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
                    return;
                }
                //guardar historial de pago
                if(!load.guardarHitorialPago(hp) && abono > 0){
                    JOptionPane.showMessageDialog(null, "No se pudo completar la operación [1108]", "Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
                    return;
                }
                //descontar de inventario
                if(load.cargarLente(ficha.getCerca().getMarca()) != null){//prgunta si existe un lente con los datos ingresados para poder descontar stock
                    if(!load.descontarStock(ficha.getCerca().getMarca())){
                        JOptionPane.showMessageDialog(null, "No se pudo completar la operación [1110]", "Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
                if(load.cargarLente(ficha.getLejos().getMarca()) != null){//prgunta si existe un lente con los datos ingresados para poder descontar stock
                    if(!load.descontarStock(ficha.getLejos().getMarca())){
                        JOptionPane.showMessageDialog(null, "No se pudo completar la operación [1112]", "Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }

                
                if(load.guardarFicha(ficha,GlobalValues.ID_USER)){
                    load.imprimir(ficha);
                    limpiarDatos();

                    try {
                        boton.crearFicha();
                    } catch (SQLException | ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(null, "Error inesperado "+ex.getMessage(), "Abrir ventana Nueva Ficha", JOptionPane.WARNING_MESSAGE);
                    }
                    return;
                }
                JOptionPane.showMessageDialog(null, "No se pudo completar la operación [1114]", "Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
                return;

            }else{
                return;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de comunicación con la base de datos, Detalle: "+ex.getMessage(),"Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
            return;
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error de comunicación con la base de datos, Detalle: "+ex.getMessage(),"Error al guardar Ficha",JOptionPane.WARNING_MESSAGE);
            return;
        }
    }

    
}

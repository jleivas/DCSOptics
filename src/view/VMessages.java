/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.mxrck.autocompleter.TextAutoCompleter;
import dao.Dao;
import entities.InternMail;
import entities.User;
import fn.Boton;
import fn.GV;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import fn.Icons;
import fn.OptionPane;
import fn.date.Cmp;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author home
 */
public class VMessages extends javax.swing.JPanel {
    Boton boton = new Boton();
    Dao load= new Dao();
    private static InternMail stMail = null;
    private static User stDestino = null;
    private static String stAsunto = "";
    private static String stContent = "";
    TableRowSorter trs;
    DefaultTableModel modelo = new DefaultTableModel() {
           @Override
           public boolean isCellEditable(int fila, int columna) {
               return false; //Con esto conseguimos que la tabla no se pueda editar
           }
        };
    /**
     * Creates new form VClientes
     */
    public VMessages() {
        ContentAdmin.lblTitle.setText("Registro de mensajes internos");
        initComponents();
        modelo.addColumn("Codigo");
        modelo.addColumn("Usuario");
        modelo.addColumn("Asunto");
        modelo.addColumn("Fecha");
        modelo.addColumn("Estado");
        tblListar.setModel(modelo);
        ContentAdmin.lblTitle.setText("Mensajes");
//        load.sincronize(new InternMail());
        setPanels(1);
        autocomplete();
        load();
        cDF();
        GV.cursorDF();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cboMostrar = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListar = new javax.swing.JTable();
        btnAbrir = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnReenviarA = new javax.swing.JLabel();
        cboLeidos = new javax.swing.JComboBox<>();
        pnl1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAsunto = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JLabel();
        txtUserDestino = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMessageContent = new javax.swing.JTextArea();
        btnCancelar = new javax.swing.JLabel();
        pnl2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtAsunto2 = new javax.swing.JTextField();
        btnReenviar = new javax.swing.JLabel();
        txtUserRemitente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMessageContent2 = new javax.swing.JTextArea();
        lblFecha = new javax.swing.JLabel();
        btnResponder = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Lista de registros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        cboMostrar.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        cboMostrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Recibidos", "Enviados" }));
        cboMostrar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMostrarItemStateChanged(evt);
            }
        });
        cboMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMostrarActionPerformed(evt);
            }
        });

        tblListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Remitente", "Asunto", "Fecha", "Estado"
            }
        ));
        jScrollPane1.setViewportView(tblListar);

        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Eye_50px.png"))); // NOI18N
        btnAbrir.setToolTipText("Cargar");
        btnAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAbrirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAbrirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAbrirMouseExited(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Trash_50px.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Search_Property_25px_1.png"))); // NOI18N

        txtBuscar.setToolTipText("Buscar");
        txtBuscar.setBorder(null);
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnReenviarA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Send_Email_50px.png"))); // NOI18N
        btnReenviarA.setToolTipText("Reenviar a...");
        btnReenviarA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReenviarAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReenviarAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReenviarAMouseExited(evt);
            }
        });

        cboLeidos.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        cboLeidos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "No leidos", "Leidos" }));
        cboLeidos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLeidosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboLeidos, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAbrir)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReenviarA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cboLeidos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAbrir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cboMostrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReenviarA, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(36, 36, 36))
        );

        pnl1.setBackground(new java.awt.Color(255, 255, 255));
        pnl1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Enviar un mensaje", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel2.setText("Asunto");

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel3.setText("Mensaje");

        txtAsunto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAsuntoKeyTyped(evt);
            }
        });

        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Send_Email_50px.png"))); // NOI18N
        btnEnviar.setToolTipText("Enviar");
        btnEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEnviarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEnviarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEnviarMouseExited(evt);
            }
        });

        txtUserDestino.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserDestinoFocusLost(evt);
            }
        });
        txtUserDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserDestinoKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel5.setText("Destinatario");

        txtMessageContent.setColumns(20);
        txtMessageContent.setRows(5);
        jScrollPane2.setViewportView(txtMessageContent);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cancel_50px.png"))); // NOI18N
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEnviar))
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtAsunto, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addComponent(txtUserDestino))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEnviar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pnl2.setBackground(new java.awt.Color(108, 217, 186));
        pnl2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Mensaje", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel4.setText("Asunto");

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel6.setText("Mensaje");

        txtAsunto2.setEditable(false);
        txtAsunto2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAsunto2KeyTyped(evt);
            }
        });

        btnReenviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Send_Email_50px.png"))); // NOI18N
        btnReenviar.setToolTipText("Reenviar a...");
        btnReenviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReenviarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReenviarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReenviarMouseExited(evt);
            }
        });

        txtUserRemitente.setEditable(false);
        txtUserRemitente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserRemitenteKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel7.setText("Remitente");

        txtMessageContent2.setColumns(20);
        txtMessageContent2.setRows(5);
        jScrollPane3.setViewportView(txtMessageContent2);

        lblFecha.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        lblFecha.setText("Este mensaje fue enviado el DD de MM de AAAA a las HH");

        btnResponder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Forward_Message_50px.png"))); // NOI18N
        btnResponder.setToolTipText("Responder");
        btnResponder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResponderMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnResponderMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnResponderMouseExited(evt);
            }
        });

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cancel_50px.png"))); // NOI18N
        btnCerrar.setToolTipText("Cerrar");
        btnCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCerrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCerrarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnl2Layout = new javax.swing.GroupLayout(pnl2);
        pnl2.setLayout(pnl2Layout);
        pnl2Layout.setHorizontalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAsunto2, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(txtUserRemitente))
                        .addGap(379, 379, 379))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl2Layout.createSequentialGroup()
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl2Layout.createSequentialGroup()
                                .addComponent(lblFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCerrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnResponder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnReenviar))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(40, Short.MAX_VALUE))))
        );
        pnl2Layout.setVerticalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAsunto2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReenviar)
                    .addComponent(lblFecha)
                    .addComponent(btnResponder)
                    .addComponent(btnCerrar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 3, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtAsuntoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAsuntoKeyTyped
        int largo = 45;
        if(txtAsunto.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El asunto solo debe contener hasta 45 caracteres", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtAsuntoKeyTyped

    private void btnAbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseClicked
        try{
            int fila = tblListar.getSelectedRow();
            int id = (int)tblListar.getValueAt(fila, 0);
            
            abrirMensaje(id);
        }catch(Exception e){
            OptionPane.showMsg("Seleccione un elemento en la tabla","Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el botón \"Ver\".",  JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAbrirMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            int id = (int)tblListar.getValueAt(fila, 0);
            stMail = (InternMail)load.get(null,id,new InternMail());
            String info = "¿Esta seguro que desea eliminar el mensaje?";
            if(stMail != null){
                if(stMail.getEstado() == 1){
                    info = info+"\nAún no lo ha leido el destinatario...";
                }
                if(OptionPane.getConfirmation("Eliminar Mensaje", info, JOptionPane.WARNING_MESSAGE)){
                    if(load.delete(null,id, stMail)){
                        OptionPane.showMsg("Eliminar Mensaje", "El registro ha sido eliminado", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else{
                        OptionPane.showMsg("Eliminar Mensaje", "No se pudo eliminar el registro", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
            load();
            cDF();
        }catch(Exception e){
            OptionPane.showMsg("Seleccione Mensaje","Error al cargar valores,\n"
                    + "es posible que no se haya seleccionado un registro:\n"
                    + "Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el botón \"Ver\".\n"
                    + "Otro posible error: el valor seleccionado no tiene un identificador válido.",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnAbrirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseEntered
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnAbrir.getIcon().toString()))));
    }//GEN-LAST:event_btnAbrirMouseEntered

    private void btnAbrirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseExited
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnAbrir.getIcon().toString()))));
    }//GEN-LAST:event_btnAbrirMouseExited

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnEliminar.getIcon().toString()))));
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnEliminar.getIcon().toString()))));
    }//GEN-LAST:event_btnEliminarMouseExited

    private void cboMostrarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMostrarItemStateChanged
        cWT();
        load();
        cDF();
    }//GEN-LAST:event_cboMostrarItemStateChanged

    private void btnEnviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarMouseClicked
        cWT();
        txtAsunto.setEditable(true);
        txtUserDestino.setEditable(true);
        if(txtUserDestino.getForeground() == Color.black){
            String userName = getUserName(txtUserDestino.getText());
            String asunto = txtAsunto.getText().replaceAll("\"", "");
            String content = txtMessageContent.getText().replaceAll("\"", "");
            try {
                stDestino = null;
                stDestino = (User)load.get(userName, 0, new User());
                if(asunto.trim().isEmpty() || asunto.length() < 5){
                    OptionPane.showMsg("No se puede enviar el mensaje", "Debe ingresar un asunto válido", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if(content.trim().isEmpty() || content.length() < 5){
                    OptionPane.showMsg("No se puede enviar el mensaje", "Debe ingresar un mensaje válido", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                cDF();
                if(stDestino != null) {
                     cWT();
                     stMail = new InternMail(0, GV.user(), stDestino, asunto.replaceAll("[-+^:‘´]",""), content.replaceAll("[-+^:‘´]",""), new Date(), Cmp.DateToStrHour(new Date()),1,null,0);
                     String resumen = (stMail.getContenido().length() > 1000)?(stMail.getContenido().substring(0,1000)+"..."):stMail.getContenido();
                     if(OptionPane.getConfirmation("El mensaje se verá así", "ASUNTO: "+stMail.getAsunto()+"\n\n"
                             + "MENSAJE: "+resumen+"\n\n"
                                     + "Los caracteres especiales serán eliminados\n"
                                     + "Presione SI para confirmar y enviar.\n"
                                     + "Presione NO para volver a editar.", 1)){
                         if(load.sendMessage(stMail)){
                            OptionPane.showMsg("Operación realizada con exito", "El mensaje ha sido enviado", JOptionPane.INFORMATION_MESSAGE);
                         }else{
                            OptionPane.showMsg("Error de envio", "El mensaje no se ha podido enviar", JOptionPane.INFORMATION_MESSAGE);
                         }
                     }else{
                         cDF();
                         return;
                     }
                    
                    
                    cDF();
                }else{
                    OptionPane.showMsg("No se puede enviar el mensaje", "Debe ingresar un usuario válido", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                Logger.getLogger(VMessages.class.getName()).log(Level.SEVERE, null, ex);
            }
            cargarDatos("0");
        }else{
            OptionPane.showMsg("El destinatario ingresado no existe", "Debe ingresar un destinatario válido", JOptionPane.WARNING_MESSAGE);
            return;
        }
            
    }//GEN-LAST:event_btnEnviarMouseClicked

    private void btnEnviarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarMouseEntered
        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnEnviar.getIcon().toString()))));
    }//GEN-LAST:event_btnEnviarMouseEntered

    private void btnEnviarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarMouseExited
        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnEnviar.getIcon().toString()))));
    }//GEN-LAST:event_btnEnviarMouseExited

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        txtBuscar.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(final KeyEvent e) {
                trs.setRowFilter(RowFilter.regexFilter("(?i)"+txtBuscar.getText(), 0,1,2,3,4,5,7,8,9,10));
            }
            
        });
        
        
        
        trs = new TableRowSorter(modelo);
        
        tblListar.setRowSorter(trs);
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void txtUserDestinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserDestinoKeyTyped
        validateUserInput();
    }//GEN-LAST:event_txtUserDestinoKeyTyped

    private void txtAsunto2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAsunto2KeyTyped
        int largo = 45;
        if(txtAsunto2.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El asunto solo debe contener hasta 45 caracteres", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtAsunto2KeyTyped

    private void btnReenviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReenviarMouseClicked
        cWT();
        stAsunto = txtAsunto2.getText();
        stContent = txtMessageContent2.getText();
        String destino = txtUserRemitente.getText();
        
        load();
        txtAsunto.setText("RW:"+stAsunto);
        txtAsunto.setEditable(false);
        
        txtMessageContent.setText("Reenviado\nRemitente original: "+destino+"\n\n"+stContent);
        txtUserDestino.setText(destino);
        txtUserDestino.setEditable(true);
        btnCancelar.setVisible(true);
        cDF();
    }//GEN-LAST:event_btnReenviarMouseClicked

    private void btnReenviarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReenviarMouseEntered
        btnReenviar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnReenviar.getIcon().toString()))));
    }//GEN-LAST:event_btnReenviarMouseEntered

    private void btnReenviarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReenviarMouseExited
        btnReenviar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnReenviar.getIcon().toString()))));
    }//GEN-LAST:event_btnReenviarMouseExited

    private void txtUserRemitenteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserRemitenteKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserRemitenteKeyTyped

    private void btnReenviarAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReenviarAMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            int id = (int)tblListar.getValueAt(fila, 0);
            stMail = (InternMail)load.get(null,id,new InternMail());
            if(stMail != null){
                load();
                txtAsunto.setText("RW:"+stMail.getAsunto());
                txtAsunto.setEditable(false);
                String destino = "";
                if(stMail.getDestinatario() != null){
                    if(stMail.getDestinatario().getId() == GV.user().getId()){
                        stMail.setEstado(2);
                        load.update(stMail);
                        destino= stMail.getDestinatario().getNombre()+" <"+stMail.getDestinatario().getUsername()+">";
                    }
                }
                txtMessageContent.setText("Reenviado\nRemitente original: "+destino+"\n\n"+stMail.getContenido());
                txtUserDestino.setText(destino);
                txtUserDestino.setEditable(true);
                btnCancelar.setVisible(true);
                cDF();
            }else{
                cDF();
                OptionPane.showMsg("Seleccione un elemento en la tabla","Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el botón \"Ver\".",  JOptionPane.WARNING_MESSAGE);
                return;
            }
            
        }catch(Exception e){
            OptionPane.showMsg("Seleccione un elemento en la tabla","Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el botón \"Ver\".",  JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnReenviarAMouseClicked

    private void btnReenviarAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReenviarAMouseEntered
        btnReenviarA.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnReenviarA.getIcon().toString()))));
    }//GEN-LAST:event_btnReenviarAMouseEntered

    private void btnReenviarAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReenviarAMouseExited
        btnReenviarA.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnReenviarA.getIcon().toString()))));
    }//GEN-LAST:event_btnReenviarAMouseExited

    private void cboLeidosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLeidosItemStateChanged
        load();
    }//GEN-LAST:event_cboLeidosItemStateChanged

    private void btnResponderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResponderMouseClicked
        cWT();
        stAsunto = txtAsunto2.getText();
        stContent = txtMessageContent2.getText();
        String destino = txtUserRemitente.getText();
        
        load();
        txtAsunto.setText("RE:"+stAsunto);
        txtAsunto.setEditable(false);
        txtMessageContent.setText(stContent);
        txtUserDestino.setText(destino);
        validateUserInput();
        txtUserDestino.setEditable(false);
        btnCancelar.setVisible(true);
        cDF();
    }//GEN-LAST:event_btnResponderMouseClicked

    private void btnResponderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResponderMouseEntered
        btnResponder.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnResponder.getIcon().toString()))));
    }//GEN-LAST:event_btnResponderMouseEntered

    private void btnResponderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResponderMouseExited
        btnResponder.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnResponder.getIcon().toString()))));
    }//GEN-LAST:event_btnResponderMouseExited

    private void txtUserDestinoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserDestinoFocusLost
        validateUserInput();
    }//GEN-LAST:event_txtUserDestinoFocusLost

    private void btnCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseClicked
        cWT();
        load();
        cDF();
    }//GEN-LAST:event_btnCerrarMouseClicked

    private void btnCerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseEntered
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnCerrar.getIcon().toString()))));
    }//GEN-LAST:event_btnCerrarMouseEntered

    private void btnCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseExited
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnCerrar.getIcon().toString()))));// TODO add your handling code here:
    }//GEN-LAST:event_btnCerrarMouseExited

    private void cboMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMostrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMostrarActionPerformed

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        txtAsunto.setEditable(true);
        txtUserDestino.setEditable(true);
        cWT();
        load();
        cDF();
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseEntered
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnCancelar.getIcon().toString()))));
    }//GEN-LAST:event_btnCancelarMouseEntered

    private void btnCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseExited
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnCancelar.getIcon().toString()))));
    }//GEN-LAST:event_btnCancelarMouseExited

    private void validateUserInput(){
        String username = getUserName(txtUserDestino.getText());
        try {
            if(load.get(username, 0, new User())==null){
                txtUserDestino.setForeground(Color.red);
            }else{
                txtUserDestino.setForeground(Color.black);
            }
        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(VMessages.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private String getUserName(String arg){
        arg = GV.getStr(arg);
        if(arg.contains("<") && !arg.endsWith("<")){
            arg=arg.substring(arg.indexOf("<")+1).replaceAll(">", "");
            return arg;
        }
        return "0";
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAbrir;
    private javax.swing.JLabel btnCancelar;
    private javax.swing.JLabel btnCerrar;
    private javax.swing.JLabel btnEliminar;
    private javax.swing.JLabel btnEnviar;
    private javax.swing.JLabel btnReenviar;
    private javax.swing.JLabel btnReenviarA;
    private javax.swing.JLabel btnResponder;
    private javax.swing.JComboBox<String> cboLeidos;
    private javax.swing.JComboBox<String> cboMostrar;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JPanel pnl1;
    private javax.swing.JPanel pnl2;
    private javax.swing.JTable tblListar;
    private javax.swing.JTextField txtAsunto;
    private javax.swing.JTextField txtAsunto2;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextArea txtMessageContent;
    private javax.swing.JTextArea txtMessageContent2;
    private javax.swing.JTextField txtUserDestino;
    private javax.swing.JTextField txtUserRemitente;
    // End of variables declaration//GEN-END:variables

    
    private void load(){
        
        if(cboMostrar.getSelectedIndex()==0){//en nueva version cargar ventana completa con lista de clientes estatica global
            cargarDatos("0");//recibidos
            btnResponder.setVisible(true);
        }else{
            cargarDatos("1");//enviados
            btnResponder.setVisible(false);
        }
    }
    private void cargarDatos(String listar) {
        limpiarTextField();
        setPanels(1);
        int rem = 0;
        int des = 0;
        int est = 0;
        if(listar.equals("0")){//recibidos
            des = GV.user().getId();
        }else{//enviados
            rem = GV.user().getId();
        }
        est = cboLeidos.getSelectedIndex();//0 todos,1 no leidos, 2 leidos
        try{
            modelo.setNumRows(0);
            for (InternMail temp : load.mensajes(rem, des, est)) {
                Object[] fila = new Object[5];
                fila[0] = temp.getId();
                if(rem == 0)
                    fila[1] = temp.getRemitente().getNombre();
                else
                    fila[1] = temp.getDestinatario().getNombre();
                fila[2] = temp.getAsunto();
                fila[3] = temp.getFecha();
                if(temp.getEstado() == 1)
                    fila[4] = "No leido";
                else
                    fila[4] = "Leido";
                modelo.addRow(fila);
            }
            tblListar.updateUI();
            if(tblListar.getRowCount() == 0){
                if(cboMostrar.getSelectedIndex() == 0)
                    OptionPane.showMsg("No existen Mensajes recibidos", "No existen mensajes en tu bandeja de entrada.",JOptionPane.INFORMATION_MESSAGE);
                else
                    OptionPane.showMsg("No existen Mensajes enviados", "No haz enviado ningún mensaje aún.",JOptionPane.INFORMATION_MESSAGE);
            }
            
        }catch(Exception e){
            OptionPane.showMsg("Ocurrió un error inesperado", "Error al cargar valores en la tabla, ["+e.getMessage()+"]",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void abrirMensaje(int id) throws SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {
        cWT();
        stMail = (InternMail)load.get(null,id,new InternMail());
        
            if(stMail!=null){
                setPanels(2);
                
                if(stMail.getDestinatario() != null && stMail.getRemitente() != null){
                    if(stMail.getRemitente().getId() != GV.user().getId()){
                        stMail.setEstado(2);
                        load.update(stMail);
                    }
                    txtUserRemitente.setText(stMail.getRemitente().getNombre()+" <"+stMail.getRemitente().getUsername()+">");
                    
                }
                else
                    txtUserRemitente.setText("");
                txtAsunto2.setText(stMail.getAsunto());
                txtMessageContent2.setText(stMail.getContenido());
                lblFecha.setText("Este mensaje fue enviado el "+Cmp.dateToString(stMail.getFecha(), "dd/mm/yyyy")+" a las "+stMail.getHora());
                cDF();
            }else{
                cDF();
                OptionPane.showMsg("Seleccione Mensaje","Error al cargar valores,\n"
                    + "es posible que no se haya seleccionado un registro\n"
                    + "o el valor seleccionado no tiene un identificador válido.",JOptionPane.WARNING_MESSAGE);
            }
    }

    private void limpiarTextField() {
        btnCancelar.setVisible(false);
        txtAsunto.setText("");
        txtUserDestino.setText("");
        txtMessageContent.setText("");
        txtAsunto2.setText("");
        txtUserRemitente.setText("");
        txtMessageContent2.setText("");
    }

    private void setPanels(int i) {
        if(i==2){
            pnl2.setVisible(true);
            pnl1.setVisible(false);
        }else{
            pnl2.setVisible(false);
            pnl1.setVisible(true);
        }
    }

    private void autocomplete() {
        TextAutoCompleter textAutoCompleter = new TextAutoCompleter(txtUserDestino);
        textAutoCompleter.setMode(0);
        for (Object temp : load.listar("0", new User())) {
            if(!((User)temp).getUsername().equals(GV.user().getUsername())){
                textAutoCompleter.addItem(((User)temp).getNombre()+" <"+((User)temp).getUsername()+">");
                textAutoCompleter.setMode(0);
            }
        }
    }
    private void cWT(){
        GV.cursorWAIT(this);
    }
    private void cDF(){
        GV.cursorDF(this);
    }
}

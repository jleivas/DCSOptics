/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import entities.Ficha;
import fn.Boton;
import fn.FnFicha;
import fn.FnInfo;
import fn.GlobalValues;
import fn.Icons;
import fn.OptionPane;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author home
 */
public class VMostrarFichas extends javax.swing.JPanel {
    
    Boton boton = new Boton();
    FnFicha load = new FnFicha();
    TableRowSorter trs;
    DefaultTableModel modelo = new DefaultTableModel() {
           @Override
           public boolean isCellEditable(int fila, int columna) {
               return false; //Con esto conseguimos que la tabla no se pueda editar
           }
        };

        
        
    
    
    
    /**
     * Creates new form VClientes
     */
    public VMostrarFichas() throws SQLException, ClassNotFoundException {
        initComponents();
        ContentAdmin.lblTitle.setText("Registro de Fichas desde el "+GlobalValues.TMP_DATE_FROM.getDay()+"-"+GlobalValues.TMP_DATE_FROM.getMonth()+"-"+GlobalValues.TMP_DATE_FROM.getYear()+" al "+GlobalValues.TMP_DATE_TO.getDay()+"-"+GlobalValues.TMP_DATE_TO.getMonth()+"-"+GlobalValues.TMP_DATE_TO.getYear());
        cargarDatos(GlobalValues.TMP_LIST_FICHAS);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListar = new javax.swing.JTable();
        btnBuscar = new javax.swing.JLabel();
        btnAbrir = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JLabel();
        btnRestaurar1 = new javax.swing.JLabel();
        btnEnviarCorreos = new javax.swing.JLabel();
        btnReport = new javax.swing.JLabel();
        btnExportarExcel1 = new javax.swing.JLabel();
        btnFiltrar1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Lista de registros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        tblListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Folio", "Fecha", "Cliente", "Estado", "Total"
            }
        ));
        jScrollPane1.setViewportView(tblListar);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Search_Property_25px_1.png"))); // NOI18N
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );

        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Eye_50px.png"))); // NOI18N
        btnAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAbrirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAbrirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAbrirMouseExited(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Trash_50px.png"))); // NOI18N
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });

        btnRestaurar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Data_Backup_50px.png"))); // NOI18N
        btnRestaurar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRestaurar1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRestaurar1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRestaurar1MouseExited(evt);
            }
        });

        btnEnviarCorreos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Send_Email_50px.png"))); // NOI18N
        btnEnviarCorreos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEnviarCorreosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEnviarCorreosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEnviarCorreosMouseExited(evt);
            }
        });

        btnReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Analyze_50px.png"))); // NOI18N
        btnReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReportMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReportMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReportMouseExited(evt);
            }
        });

        btnExportarExcel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_XLS_50px.png"))); // NOI18N
        btnExportarExcel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExportarExcel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExportarExcel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExportarExcel1MouseExited(evt);
            }
        });

        btnFiltrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Filter_50px.png"))); // NOI18N
        btnFiltrar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFiltrar1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFiltrar1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFiltrar1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(btnAbrir)
                        .addGap(36, 36, 36)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnRestaurar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 800, Short.MAX_VALUE)
                        .addComponent(btnReport)
                        .addGap(20, 20, 20)
                        .addComponent(btnEnviarCorreos)
                        .addGap(10, 10, 10)
                        .addComponent(btnExportarExcel1)
                        .addGap(10, 10, 10)
                        .addComponent(btnFiltrar1)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnAbrir)
                        .addComponent(btnEliminar)
                        .addComponent(btnRestaurar1))
                    .addComponent(btnReport)
                    .addComponent(btnEnviarCorreos)
                    .addComponent(btnExportarExcel1)
                    .addComponent(btnFiltrar1))
                .addContainerGap(68, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        
        
        txtBuscar.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(final KeyEvent e) {
//                trs.setRowFilter(RowFilter.regexFilter(txtBuscar.getText(), 1));
                trs.setRowFilter(RowFilter.regexFilter("(?i)"+txtBuscar.getText(), 0,1,2,3,4,5,7,8,9,10));
            }
            
        });
        
        
        
        trs = new TableRowSorter(modelo);
        
        tblListar.setRowSorter(trs);
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void btnAbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseClicked
       String idFicha = "";
        try{
            int fila = tblListar.getSelectedRow();
            idFicha =  tblListar.getValueAt(fila, 0).toString();
            abrirFicha(idFicha);
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro", "Seleccione un registro", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAbrirMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        try{
            int fila = tblListar.getSelectedRow();
            int idFicha = (int) tblListar.getValueAt(fila, 0);
            FnFicha load = new FnFicha();
            Ficha temp = load.cargar(idFicha,1);
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea eliminar la ficha numero "+temp.getId()+"?");
            if(respuesta == JOptionPane.YES_OPTION){
                if(load.eliminar(idFicha)){
                    GlobalValues.TMP_LIST_FICHAS = load.listar(0, 1);
                    boton.fichas();
                    JOptionPane.showMessageDialog(null, "El registro ha sido eliminado", "Eliminar", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar el registro", "Eliminar", JOptionPane.WARNING_MESSAGE);
                }
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro en la tabla", "Seleccione", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnRestaurar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestaurar1MouseClicked
        try{
            int fila = tblListar.getSelectedRow();
            int idFicha = (int) tblListar.getValueAt(fila, 0);
            
            Ficha temp = load.cargar(idFicha,0);
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea restaurar la ficha numero "+temp.getId()+"?");
            if(respuesta == JOptionPane.YES_OPTION){
                if(load.restaurar(idFicha)){
                    GlobalValues.TMP_LIST_FICHAS = load.listar(-1, 0);
                    boton.fichas();
                    JOptionPane.showMessageDialog(null, "El registro ha sido restaurado", "Restaurar", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudo restaurar el registro", "Restaurar", JOptionPane.WARNING_MESSAGE);
                }
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro en la tabla", "Seleccione", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRestaurar1MouseClicked

    private void btnEnviarCorreosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarCorreosMouseClicked
        Date fecha1 = GlobalValues.TMP_DATE_FROM;
        Date fecha2 = GlobalValues.TMP_DATE_TO;
        
        FnFicha load = new FnFicha();
        
        
        try {
            load.enviarComprobantes(load.listarPorFecha(fecha1,fecha2));
        } catch (SQLException | ClassNotFoundException | InterruptedException ex) {
            JOptionPane.showMessageDialog(null, "Error desconocido:"+ex.getMessage(),"Error",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEnviarCorreosMouseClicked

    private void btnReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportMouseClicked
        Date fecha1 = GlobalValues.TMP_DATE_FROM;
        Date fecha2 = GlobalValues.TMP_DATE_TO;
        
        FnFicha load = new FnFicha();
        FnInfo info = new FnInfo();
        try {
            if(info.isActive())
                load.enviarReporte(fecha1,fecha2,load.listarPorFecha(fecha1,fecha2));
            else
                JOptionPane.showMessageDialog(null,"No se pueden enviar reportes,\nLa licencia del producto se encuentra obsoleta.","Es necesaria la renovación de la Licencia",JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error desconocido:"+ex.getMessage(),"Error",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnReportMouseClicked

    private void btnExportarExcel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExportarExcel1MouseClicked
        Date fecha1 = GlobalValues.TMP_DATE_FROM;
        Date fecha2 = GlobalValues.TMP_DATE_TO;
        
        FnFicha load = new FnFicha();
        try {
            load.exportarExcel(load.listarPorFecha(fecha1,fecha2));
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Error: "+ex.getMessage(),"Error",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnExportarExcel1MouseClicked

    private void btnFiltrar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFiltrar1MouseClicked
        OptionPane.showPanel(new OpanelSelectDate(), "Seleccione un estado y un rango de fechas");
    }//GEN-LAST:event_btnFiltrar1MouseClicked

    private void btnFiltrar1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFiltrar1MouseEntered
        btnFiltrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnFiltrar1.getIcon().toString()))));
    }//GEN-LAST:event_btnFiltrar1MouseEntered

    private void btnFiltrar1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFiltrar1MouseExited
        btnFiltrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnFiltrar1.getIcon().toString()))));
    }//GEN-LAST:event_btnFiltrar1MouseExited

    private void btnExportarExcel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExportarExcel1MouseEntered
        btnExportarExcel1.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnExportarExcel1.getIcon().toString()))));
    }//GEN-LAST:event_btnExportarExcel1MouseEntered

    private void btnExportarExcel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExportarExcel1MouseExited
        btnExportarExcel1.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnExportarExcel1.getIcon().toString()))));
    }//GEN-LAST:event_btnExportarExcel1MouseExited

    private void btnEnviarCorreosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarCorreosMouseEntered
        btnEnviarCorreos.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnEnviarCorreos.getIcon().toString()))));
    }//GEN-LAST:event_btnEnviarCorreosMouseEntered

    private void btnEnviarCorreosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarCorreosMouseExited
        btnEnviarCorreos.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnEnviarCorreos.getIcon().toString()))));
    }//GEN-LAST:event_btnEnviarCorreosMouseExited

    private void btnReportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportMouseEntered
        btnReport.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnReport.getIcon().toString()))));
    }//GEN-LAST:event_btnReportMouseEntered

    private void btnReportMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportMouseExited
        btnReport.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnReport.getIcon().toString()))));
    }//GEN-LAST:event_btnReportMouseExited

    private void btnRestaurar1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestaurar1MouseEntered
        btnRestaurar1.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnRestaurar1.getIcon().toString()))));
    }//GEN-LAST:event_btnRestaurar1MouseEntered

    private void btnRestaurar1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestaurar1MouseExited
        btnRestaurar1.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnRestaurar1.getIcon().toString()))));
    }//GEN-LAST:event_btnRestaurar1MouseExited

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnEliminar.getIcon().toString()))));
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnEliminar.getIcon().toString()))));
    }//GEN-LAST:event_btnEliminarMouseExited

    private void btnAbrirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseEntered
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnAbrir.getIcon().toString()))));
    }//GEN-LAST:event_btnAbrirMouseEntered

    private void btnAbrirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseExited
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnAbrir.getIcon().toString()))));
    }//GEN-LAST:event_btnAbrirMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAbrir;
    private javax.swing.JLabel btnBuscar;
    private javax.swing.JLabel btnEliminar;
    private javax.swing.JLabel btnEnviarCorreos;
    private javax.swing.JLabel btnExportarExcel1;
    private javax.swing.JLabel btnFiltrar1;
    private javax.swing.JLabel btnReport;
    private javax.swing.JLabel btnRestaurar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblListar;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

    
    public void cargarDatos(ArrayList<Ficha> lista) throws SQLException, ClassNotFoundException {
        modelo.addColumn("Folio");
        modelo.addColumn("Fecha");
        modelo.addColumn("Cliente");
        modelo.addColumn("Correo");
        modelo.addColumn("Telefono");
        modelo.addColumn("Comuna");
        modelo.addColumn("Ciudad");
        modelo.addColumn("Estado");
        modelo.addColumn("Total");
        modelo.addColumn("Saldo");
        modelo.addColumn("Vendedor");
        tblListar.setModel(modelo);
        
        llenarTabla(lista);
        
    }

    private void metodosListar(){
        /*ACTIVOS*/
        try {
            
            load.listar(0, 1);
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrodo un error al cargar los datos: "+ex.getMessage(),"Error",JOptionPane.WARNING_MESSAGE);
        }
        /*GARANTIA*/
         try {
            load.garantias();
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error inesperado: "+ex.getMessage(),"Cargar morosos",JOptionPane.WARNING_MESSAGE);
        }
         /*MOROSOS*/
         try {
            load.morosos();
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error inesperado: "+ex.getMessage(),"Cargar morosos",JOptionPane.WARNING_MESSAGE);
        }
        /*ELIMINADOS*/
        FnFicha load = new FnFicha();
        if(load.validarAdmin()){
            try {
                load.listar(-1, 0);
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Error al cargar los datos: "+ex.getMessage(),"Error",JOptionPane.WARNING_MESSAGE);
            }
        }
    }
    
    private void llenarTabla(ArrayList<Ficha> lista){
        FnFicha datbd= new FnFicha();
        int cont =0;
        try{
            for (Ficha temp : lista) {
                int descuento =0;
                if(temp.getDescuento().getPorcetange() > 0){
                    descuento = (temp.getValorTotal()*temp.getDescuento().getPorcetange())/100;
                    temp.setValorTotal(temp.getValorTotal()-descuento);
                }
                Object[] fila = new Object[11];
                fila[0] = temp.getId();
                fila[1] = temp.getFecha();
                fila[2] = temp.getCliente().getNombre();
                fila[3] = temp.getCliente().getEmail();
                fila[4] = temp.getCliente().getTelefono();
                fila[5] = temp.getCliente().getComuna();
                fila[6] = temp.getCliente().getCiudad();
                if(temp.getEstado() == 1)
                    fila[7] = "Pendiente";
                if(temp.getEstado() == 2)
                    fila[7] = "Pagada";
                if(temp.getEstado() == 3)
                    fila[7] = "Despachada";
                if(temp.getEstado() == 0){
                    fila[7] = "Anulada";
                    cont++;
                }
                if(temp.getEstado() == 4)
                    fila[7] = "Garantia";
                fila[8] = "$ "+temp.getValorTotal();
                fila[9] = "$ "+temp.getSaldo();
                fila[10] = temp.getUser().getNombre();
                
                modelo.addRow(fila);
            }
            if(cont > 0){
                btnRestaurar1.setVisible(true);
                btnEliminar.setVisible(false);
                btnAbrir.setVisible(false);
            }else{
                btnRestaurar1.setVisible(false);
                btnEliminar.setVisible(true);
                btnAbrir.setVisible(true);
            }
            tblListar.updateUI();
            if(tblListar.getRowCount() == 0){
                JOptionPane.showMessageDialog(null, "No se encontraron resultados, pruebe con otros valores de búsqueda.");
                 
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error, ["+e.getMessage()+"]");
        }
    }


    private void abrirFicha(String idFicha) throws SQLException, ClassNotFoundException {
        Boton btn = new Boton();
        btn.abrirFicha(idFicha);
    }
 
}

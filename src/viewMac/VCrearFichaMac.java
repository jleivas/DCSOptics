/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewMac;

import com.mxrck.autocompleter.TextAutoCompleter;
import dao.Dao;
import entities.Cliente;
import entities.Convenio;
import entities.Cristal;
import entities.Descuento;
import entities.Doctor;
import entities.Institucion;
import entities.Inventario;
import entities.Lente;
import entities.TipoPago;
import entities.ficha.Armazon;
import entities.ficha.Ficha;
import entities.ficha.HistorialPago;
import fn.Boton;
import fn.GV;
import fn.Icons;
import fn.Log;
import fn.OptionPane;
import fn.ValidaRut;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import view.opanel.OpanelSelectConvenio;

/**
 *
 * @author home
 */
public class VCrearFichaMac extends javax.swing.JPanel {

    private Dao load = new Dao();
    private static String strCnvName;
    private static Color rojo = Color.red;
    private static Color negro = Color.black;
    private static TipoPago stTipoPago = null;
    private static Cristal stCristalLejos = null;
    private static Cristal stCristalCerca = null;
    private static Lente stLenteLejos = null;
    private static Lente stLenteCerca = null;
    private static Doctor stDoctor = null;
    private static Cliente stCliente = null;
    private static Institucion stInstitucion = null;
    private static Descuento stDescuento = null;
    private static Inventario stInventario = null;
    private static Convenio stConvenio = null;
    private static Ficha FICHA = null;
    private static int tpCerca = 0;
    private static int tpLejos = 1;
    
    private static List<Object> listInstituciones = new ArrayList<>();
    private static List<Object> listClientes = new ArrayList<>();
    private static List<Object> listDoctores = new ArrayList<>();
    private static List<Object> listCristales = new ArrayList<>();
    private static List<Object> listLentes = new ArrayList<>();
    private static List<Object> listTipoPagos = new ArrayList<>();
    private static List<Object> listDescuentos = new ArrayList<>();
    Boton boton = new Boton();
    /**
     * Creates new form VNuevaFicha
     */
    public VCrearFichaMac(){
        initComponents();
        loadStaticObjects();
        cboDescuento.setVisible(false);
        GV.cursorDF();
        GV.cursorDF(this);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtEntrega = new javax.swing.JTextField();
        iconCalendar = new javax.swing.JLabel();
        iconPlace = new javax.swing.JLabel();
        txtFecha = new com.toedter.calendar.JDateChooser();
        jPanel10 = new javax.swing.JPanel();
        txtHora1 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        txtMinuto1 = new javax.swing.JSpinner();
        iconClock = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        txtHora2 = new javax.swing.JSpinner();
        txtMinuto2 = new javax.swing.JSpinner();
        jLabel48 = new javax.swing.JLabel();
        iconClock2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtDoctor = new javax.swing.JTextField();
        iconDoctor = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtInstitucion = new javax.swing.JTextField();
        txtRutCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtTelefonoCliente2 = new javax.swing.JTextField();
        txtMailCliente = new javax.swing.JTextField();
        txtDireccionCliente = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtComuna = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        cboSexo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        chkExtranjero = new javax.swing.JCheckBox();
        txtTelefonoCliente1 = new javax.swing.JTextField();
        iconDni = new javax.swing.JLabel();
        iconInstitucion = new javax.swing.JLabel();
        iconGender = new javax.swing.JLabel();
        iconMail = new javax.swing.JLabel();
        iconAddress = new javax.swing.JLabel();
        iconPhone2 = new javax.swing.JLabel();
        iconPhone1 = new javax.swing.JLabel();
        txtNacimiento = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtArmazonLejos = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtODLejosESF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtODLejosCIL = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtODLejosA = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtOILejosESF = new javax.swing.JTextField();
        txtOILejosCIL = new javax.swing.JTextField();
        txtOILejosA = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtDPLejos = new javax.swing.JSpinner();
        chkEndurecidoLejos = new javax.swing.JCheckBox();
        chkCapaLejos = new javax.swing.JCheckBox();
        chkPlusMaxLejos = new javax.swing.JCheckBox();
        jLabel26 = new javax.swing.JLabel();
        txtCristalLejos = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        txtArmazonCerca = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtODCercaESF = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtODCercaCIL = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtODCercaA = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        txtOICercaESF = new javax.swing.JTextField();
        txtOICercaCIL = new javax.swing.JTextField();
        txtOICercaA = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        txtDPCerca = new javax.swing.JSpinner();
        chkEndurecidoCerca = new javax.swing.JCheckBox();
        chkCapaCerca = new javax.swing.JCheckBox();
        chkPlusMaxCerca = new javax.swing.JCheckBox();
        jLabel40 = new javax.swing.JLabel();
        txtAddCerca = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtCristalCerca = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtAbono = new javax.swing.JSpinner();
        cboTipoPago = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        chkDescuento = new javax.swing.JCheckBox();
        cboDescuento = new javax.swing.JComboBox<>();
        lblDescuento = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        txtCnvName = new javax.swing.JLabel();
        btnSave = new javax.swing.JLabel();
        lblMessageStatus = new javax.swing.JLabel();
        btnSelectConvenios = new javax.swing.JLabel();
        btnClearConvenio = new javax.swing.JLabel();
        btnCotizar = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Fecha de entrega y lugar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEntrega.setToolTipText("Lugar de entrega");
        txtEntrega.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEntregaFocusLost(evt);
            }
        });
        txtEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEntregaActionPerformed(evt);
            }
        });
        txtEntrega.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEntregaKeyTyped(evt);
            }
        });
        jPanel1.add(txtEntrega, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 311, -1));

        iconCalendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Calendar_25px.png"))); // NOI18N
        iconCalendar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconCalendarMouseClicked(evt);
            }
        });
        jPanel1.add(iconCalendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 20));

        iconPlace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Geo-fence_25px.png"))); // NOI18N
        iconPlace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconPlaceMouseClicked(evt);
            }
        });
        jPanel1.add(iconPlace, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 25, -1, 30));

        txtFecha.setDateFormatString("dd.MM.yyyy");
        txtFecha.setMaxSelectableDate(new java.util.Date(32503694492000L));
        txtFecha.setMinSelectableDate(new java.util.Date(1514779292000L));
        txtFecha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaFocusLost(evt);
            }
        });
        txtFecha.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtFechaInputMethodTextChanged(evt);
            }
        });
        txtFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtFechaPropertyChange(evt);
            }
        });
        txtFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaKeyTyped(evt);
            }
        });
        jPanel1.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 129, -1));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Desde", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHora1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        txtHora1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHora1FocusLost(evt);
            }
        });
        jPanel10.add(txtHora1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 49, -1));

        jLabel4.setText(":");
        jPanel10.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        txtMinuto1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        txtMinuto1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMinuto1FocusLost(evt);
            }
        });
        jPanel10.add(txtMinuto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 49, -1));

        iconClock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Clock_25px.png"))); // NOI18N
        iconClock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconClockMouseClicked(evt);
            }
        });
        jPanel10.add(iconClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, -1, 30));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Hasta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHora2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        txtHora2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHora2FocusLost(evt);
            }
        });
        jPanel11.add(txtHora2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 49, -1));

        txtMinuto2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        txtMinuto2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMinuto2FocusLost(evt);
            }
        });
        jPanel11.add(txtMinuto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 49, -1));

        jLabel48.setText(":");
        jPanel11.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, 20));

        iconClock2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Clock_25px.png"))); // NOI18N
        iconClock2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconClock2MouseClicked(evt);
            }
        });
        jPanel11.add(iconClock2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 40));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Especialista", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        txtDoctor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDoctorFocusLost(evt);
            }
        });
        txtDoctor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDoctorKeyTyped(evt);
            }
        });

        iconDoctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Account_25px.png"))); // NOI18N
        iconDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconDoctorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconDoctor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos de Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        txtInstitucion.setToolTipText("Institución del cliente");
        txtInstitucion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInstitucionFocusLost(evt);
            }
        });
        txtInstitucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInstitucionActionPerformed(evt);
            }
        });
        txtInstitucion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInstitucionKeyTyped(evt);
            }
        });

        txtRutCliente.setToolTipText("Rut o Identificador Personal");
        txtRutCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRutClienteFocusLost(evt);
            }
        });
        txtRutCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutClienteActionPerformed(evt);
            }
        });
        txtRutCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRutClienteKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel7.setText("Nombre");

        txtNombreCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreClienteFocusLost(evt);
            }
        });
        txtNombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreClienteKeyTyped(evt);
            }
        });

        txtTelefonoCliente2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoCliente2FocusLost(evt);
            }
        });
        txtTelefonoCliente2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoCliente2KeyTyped(evt);
            }
        });

        txtMailCliente.setToolTipText("Email del cliente");
        txtMailCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMailClienteFocusLost(evt);
            }
        });
        txtMailCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMailClienteActionPerformed(evt);
            }
        });
        txtMailCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMailClienteKeyTyped(evt);
            }
        });

        txtDireccionCliente.setToolTipText("Dirección del cliente");
        txtDireccionCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDireccionClienteFocusLost(evt);
            }
        });
        txtDireccionCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionClienteKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel11.setText("Comuna");

        txtComuna.setToolTipText("Comuna del cliente");
        txtComuna.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComunaFocusLost(evt);
            }
        });
        txtComuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtComunaKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel12.setText("Ciudad");

        txtCiudad.setToolTipText("Ciudad del cliente");
        txtCiudad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCiudadFocusLost(evt);
            }
        });
        txtCiudad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCiudadKeyTyped(evt);
            }
        });

        cboSexo.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSexo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSexoItemStateChanged(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel14.setText("Nac.");

        chkExtranjero.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        chkExtranjero.setText("Extranjero");
        chkExtranjero.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkExtranjeroItemStateChanged(evt);
            }
        });
        chkExtranjero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkExtranjeroActionPerformed(evt);
            }
        });

        txtTelefonoCliente1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoCliente1FocusLost(evt);
            }
        });
        txtTelefonoCliente1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoCliente1KeyTyped(evt);
            }
        });

        iconDni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Contact_Details_25px.png"))); // NOI18N
        iconDni.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconDniMouseClicked(evt);
            }
        });

        iconInstitucion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Business_Building_25px_1.png"))); // NOI18N
        iconInstitucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconInstitucionMouseClicked(evt);
            }
        });

        iconGender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Gender_25px.png"))); // NOI18N
        iconGender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconGenderMouseClicked(evt);
            }
        });

        iconMail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_New_Post_25px.png"))); // NOI18N
        iconMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconMailMouseClicked(evt);
            }
        });

        iconAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Geo-fence_25px.png"))); // NOI18N
        iconAddress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconAddressMouseClicked(evt);
            }
        });

        iconPhone2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cell_Phone_25px.png"))); // NOI18N
        iconPhone2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconPhone2MouseClicked(evt);
            }
        });

        iconPhone1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cell_Phone_25px.png"))); // NOI18N
        iconPhone1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconPhone1MouseClicked(evt);
            }
        });

        txtNacimiento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNacimientoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconInstitucion)
                    .addComponent(iconAddress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iconDni))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(txtDireccionCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtComuna, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(txtRutCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkExtranjero, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(iconPhone1)
                        .addGap(1, 1, 1)
                        .addComponent(txtTelefonoCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(iconMail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iconGender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(iconPhone2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefonoCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtRutCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(txtNombreCliente)
                        .addComponent(chkExtranjero))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(iconInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(iconDni, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtTelefonoCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconMail)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtComuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDireccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefonoCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconPhone2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(iconAddress))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(iconGender)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "LEJOS ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel10.setText("Armazon");

        txtArmazonLejos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtArmazonLejosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtArmazonLejosFocusLost(evt);
            }
        });
        txtArmazonLejos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArmazonLejosActionPerformed(evt);
            }
        });
        txtArmazonLejos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtArmazonLejosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtArmazonLejosKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel16.setText("O.D.   ");

        txtODLejosESF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtODLejosESFFocusLost(evt);
            }
        });
        txtODLejosESF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODLejosESFKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel17.setText("ESF");

        txtODLejosCIL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtODLejosCILFocusLost(evt);
            }
        });
        txtODLejosCIL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODLejosCILKeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel18.setText("CIL");

        txtODLejosA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtODLejosAFocusLost(evt);
            }
        });
        txtODLejosA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODLejosAKeyTyped(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel19.setText("O.I.   ");

        txtOILejosESF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOILejosESFFocusLost(evt);
            }
        });
        txtOILejosESF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOILejosESFKeyTyped(evt);
            }
        });

        txtOILejosCIL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOILejosCILFocusLost(evt);
            }
        });
        txtOILejosCIL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOILejosCILKeyTyped(evt);
            }
        });

        txtOILejosA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOILejosAFocusLost(evt);
            }
        });
        txtOILejosA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOILejosAKeyTyped(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel20.setText("CIL");

        jLabel21.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel21.setText("ESF");

        jLabel22.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel22.setText("D.P.   ");

        txtDPLejos.setModel(new javax.swing.SpinnerNumberModel(0, -99, 99, 1));

        chkEndurecidoLejos.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkEndurecidoLejos.setText("ENDURECIDO");
        chkEndurecidoLejos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkEndurecidoLejosItemStateChanged(evt);
            }
        });

        chkCapaLejos.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkCapaLejos.setText("CAPA");
        chkCapaLejos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkCapaLejosItemStateChanged(evt);
            }
        });

        chkPlusMaxLejos.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkPlusMaxLejos.setText("PLUS MAX");
        chkPlusMaxLejos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkPlusMaxLejosItemStateChanged(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel26.setText("Cristal");

        txtCristalLejos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCristalLejosFocusLost(evt);
            }
        });
        txtCristalLejos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCristalLejosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCristalLejosKeyTyped(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel31.setText("A");

        jLabel41.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel41.setText("A");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel17)
                        .addGap(4, 4, 4)
                        .addComponent(txtODLejosESF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel18)
                        .addGap(28, 28, 28)
                        .addComponent(txtODLejosCIL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel31)
                        .addGap(4, 4, 4)
                        .addComponent(txtODLejosA, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel21)
                        .addGap(4, 4, 4)
                        .addComponent(txtOILejosESF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel20)
                        .addGap(28, 28, 28)
                        .addComponent(txtOILejosCIL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel41)
                        .addGap(4, 4, 4)
                        .addComponent(txtOILejosA, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtDPLejos, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(chkEndurecidoLejos)
                        .addGap(2, 2, 2)
                        .addComponent(chkCapaLejos)
                        .addGap(2, 2, 2)
                        .addComponent(chkPlusMaxLejos))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtArmazonLejos, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                            .addComponent(txtCristalLejos))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel10))
                    .addComponent(txtArmazonLejos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel26))
                    .addComponent(txtCristalLejos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel17))
                    .addComponent(txtODLejosESF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel18))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtODLejosCIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel31))
                    .addComponent(txtODLejosA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel21))
                    .addComponent(txtOILejosESF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txtOILejosCIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel41))
                    .addComponent(txtOILejosA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel22))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtDPLejos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkEndurecidoLejos)
                    .addComponent(chkCapaLejos)
                    .addComponent(chkPlusMaxLejos)))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "CERCA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        jLabel32.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel32.setText("Armazon");

        txtArmazonCerca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtArmazonCercaFocusLost(evt);
            }
        });
        txtArmazonCerca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtArmazonCercaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtArmazonCercaKeyTyped(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel33.setText("O.D.   ");

        txtODCercaESF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtODCercaESFFocusLost(evt);
            }
        });
        txtODCercaESF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtODCercaESFActionPerformed(evt);
            }
        });
        txtODCercaESF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODCercaESFKeyTyped(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel34.setText("ESF");

        txtODCercaCIL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtODCercaCILFocusLost(evt);
            }
        });
        txtODCercaCIL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODCercaCILKeyTyped(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel35.setText("A");

        txtODCercaA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtODCercaAFocusLost(evt);
            }
        });
        txtODCercaA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtODCercaAKeyTyped(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel36.setText("O.I.   ");

        txtOICercaESF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOICercaESFFocusLost(evt);
            }
        });
        txtOICercaESF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOICercaESFKeyTyped(evt);
            }
        });

        txtOICercaCIL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOICercaCILFocusLost(evt);
            }
        });
        txtOICercaCIL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOICercaCILKeyTyped(evt);
            }
        });

        txtOICercaA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOICercaAFocusLost(evt);
            }
        });
        txtOICercaA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOICercaAKeyTyped(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel37.setText("A");

        jLabel38.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel38.setText("ESF");

        jLabel39.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel39.setText("D.P.   ");

        txtDPCerca.setModel(new javax.swing.SpinnerNumberModel(0, -99, 99, 1));

        chkEndurecidoCerca.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkEndurecidoCerca.setText("ENDURECIDO");
        chkEndurecidoCerca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkEndurecidoCercaItemStateChanged(evt);
            }
        });

        chkCapaCerca.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkCapaCerca.setText("CAPA");
        chkCapaCerca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkCapaCercaItemStateChanged(evt);
            }
        });

        chkPlusMaxCerca.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkPlusMaxCerca.setText("PLUS MAX");
        chkPlusMaxCerca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkPlusMaxCercaItemStateChanged(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel40.setText("ADD  ");

        txtAddCerca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAddCercaFocusLost(evt);
            }
        });
        txtAddCerca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddCercaKeyTyped(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel28.setText("Cristal");

        txtCristalCerca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCristalCercaFocusLost(evt);
            }
        });
        txtCristalCerca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCristalCercaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCristalCercaKeyTyped(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel29.setText("CIL");

        jLabel30.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel30.setText("CIL");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel34)
                        .addGap(4, 4, 4)
                        .addComponent(txtODCercaESF, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel29)
                        .addGap(4, 4, 4)
                        .addComponent(txtODCercaCIL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel35)
                        .addGap(4, 4, 4)
                        .addComponent(txtODCercaA, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel38)
                        .addGap(4, 4, 4)
                        .addComponent(txtOICercaESF, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel30)
                        .addGap(4, 4, 4)
                        .addComponent(txtOICercaCIL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel37)
                        .addGap(4, 4, 4)
                        .addComponent(txtOICercaA, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtDPCerca, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chkEndurecidoCerca)
                        .addGap(2, 2, 2)
                        .addComponent(chkCapaCerca)
                        .addGap(2, 2, 2)
                        .addComponent(chkPlusMaxCerca))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel32))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCristalCerca)
                            .addComponent(txtAddCerca)
                            .addComponent(txtArmazonCerca))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel32))
                    .addComponent(txtArmazonCerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel28))
                    .addComponent(txtCristalCerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel40))
                    .addComponent(txtAddCerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtODCercaESF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtODCercaCIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtODCercaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34)
                            .addComponent(jLabel29)
                            .addComponent(jLabel35))))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(txtOICercaESF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOICercaCIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOICercaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addComponent(jLabel30)
                            .addComponent(jLabel37))))
                .addGap(5, 5, 5)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel39))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtDPCerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkEndurecidoCerca)
                    .addComponent(chkCapaCerca)
                    .addComponent(chkPlusMaxCerca)))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane1.setViewportView(txtObs);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        jLabel24.setText("Valor total");
        jPanel7.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, -1, -1));

        jLabel25.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        jLabel25.setText("Abono");
        jPanel7.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, -1, -1));

        txtAbono.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9999999, 1));
        txtAbono.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtAbonoStateChanged(evt);
            }
        });
        jPanel7.add(txtAbono, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 134, -1));

        cboTipoPago.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboTipoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTipoPago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTipoPagoItemStateChanged(evt);
            }
        });
        jPanel7.add(cboTipoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 110, -1));

        jLabel27.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        jLabel27.setText("Saldo");
        jPanel7.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, -1, -1));

        chkDescuento.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        chkDescuento.setText("Aplicar descuento");
        chkDescuento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                chkDescuentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                chkDescuentoFocusLost(evt);
            }
        });
        chkDescuento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkDescuentoMouseClicked(evt);
            }
        });
        chkDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDescuentoActionPerformed(evt);
            }
        });
        chkDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chkDescuentoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chkDescuentoKeyTyped(evt);
            }
        });
        jPanel7.add(chkDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 130, -1));

        cboDescuento.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboDescuento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboDescuento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDescuentoItemStateChanged(evt);
            }
        });
        jPanel7.add(cboDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 330, -1));

        lblDescuento.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        lblDescuento.setText("Dscto");
        jPanel7.add(lblDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, -1, -1));

        txtSaldo.setEditable(false);
        txtSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaldoActionPerformed(evt);
            }
        });
        txtSaldo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtSaldoPropertyChange(evt);
            }
        });
        jPanel7.add(txtSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 118, -1));

        txtDescuento.setEditable(false);
        txtDescuento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtDescuentoPropertyChange(evt);
            }
        });
        jPanel7.add(txtDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 80, -1));

        txtTotal.setEditable(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        txtTotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtTotalPropertyChange(evt);
            }
        });
        jPanel7.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 117, -1));

        txtCnvName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtCnvName.setText("jLabel1");
        jPanel7.add(txtCnvName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 460, -1));

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Save_50px.png"))); // NOI18N
        btnSave.setToolTipText("Enviar datos");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });

        lblMessageStatus.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        lblMessageStatus.setText("jLabel1");

        btnSelectConvenios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Handshake_50px.png"))); // NOI18N
        btnSelectConvenios.setToolTipText("Generar recetas con convenios");
        btnSelectConvenios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSelectConveniosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSelectConveniosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSelectConveniosMouseExited(evt);
            }
        });

        btnClearConvenio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cancel_50px.png"))); // NOI18N
        btnClearConvenio.setToolTipText("Quitar convenio seleccionado");
        btnClearConvenio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearConvenioMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnClearConvenioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearConvenioMouseExited(evt);
            }
        });

        btnCotizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Purchase_Order_50px.png"))); // NOI18N
        btnCotizar.setToolTipText("Enviar datos");
        btnCotizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCotizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCotizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCotizarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(540, 540, 540)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(860, 860, 860)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(700, 700, 700)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblMessageStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnClearConvenio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelectConvenios)
                        .addGap(54, 54, 54)
                        .addComponent(btnCotizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)
                        .addGap(51, 51, 51)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave)
                    .addComponent(btnSelectConvenios)
                    .addComponent(btnClearConvenio)
                    .addComponent(lblMessageStatus)
                    .addComponent(btnCotizar))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtTotalPropertyChange
        txtTotal.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtTotalPropertyChange

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtDescuentoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtDescuentoPropertyChange
        txtDescuento.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtDescuentoPropertyChange

    private void txtSaldoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtSaldoPropertyChange
        txtSaldo.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtSaldoPropertyChange

    private void txtSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaldoActionPerformed

    private void cboDescuentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDescuentoItemStateChanged
        cmpPrecios();
    }//GEN-LAST:event_cboDescuentoItemStateChanged

    private void chkDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chkDescuentoKeyTyped

    }//GEN-LAST:event_chkDescuentoKeyTyped

    private void chkDescuentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chkDescuentoKeyPressed
        
    }//GEN-LAST:event_chkDescuentoKeyPressed

    private void chkDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDescuentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkDescuentoActionPerformed

    private void chkDescuentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkDescuentoMouseClicked
        logicaChkDescuento();
    }//GEN-LAST:event_chkDescuentoMouseClicked

    private void chkDescuentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chkDescuentoFocusLost

    }//GEN-LAST:event_chkDescuentoFocusLost

    private void chkDescuentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chkDescuentoFocusGained

    }//GEN-LAST:event_chkDescuentoFocusGained

    private void cboTipoPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTipoPagoItemStateChanged
        cmpTipoPago();
    }//GEN-LAST:event_cboTipoPagoItemStateChanged

    private void txtAbonoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtAbonoStateChanged
        cmpPrecios();
    }//GEN-LAST:event_txtAbonoStateChanged

    private void txtCristalCercaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCristalCercaKeyTyped
        int largo = 45;
        if(txtCristalCerca.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtCristalCercaKeyTyped

    private void txtCristalCercaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCristalCercaFocusLost
        cmpCristalCerca();
        cmpPrecios();
    }//GEN-LAST:event_txtCristalCercaFocusLost

    private void txtAddCercaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddCercaKeyTyped
        int largo = 45;
        if(txtAddCerca.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtAddCercaKeyTyped

    private void txtOICercaAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOICercaAKeyTyped
        int largo = 45;
        if(txtOICercaA.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtOICercaAKeyTyped

    private void txtOICercaCILKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOICercaCILKeyTyped
        int largo = 45;
        if(txtOICercaCIL.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtOICercaCILKeyTyped

    private void txtOICercaESFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOICercaESFKeyTyped
        int largo = 45;
        if(txtOICercaESF.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtOICercaESFKeyTyped

    private void txtODCercaAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODCercaAKeyTyped
        int largo = 45;
        if(txtODCercaA.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtODCercaAKeyTyped

    private void txtODCercaCILKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODCercaCILKeyTyped
        int largo = 45;
        if(txtODCercaCIL.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtODCercaCILKeyTyped

    private void txtODCercaESFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODCercaESFKeyTyped
        int largo = 45;
        if(txtODCercaESF.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtODCercaESFKeyTyped

    private void txtODCercaESFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtODCercaESFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtODCercaESFActionPerformed

    private void txtArmazonCercaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArmazonCercaKeyTyped
        int largo = 45;
        if(txtArmazonCerca.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtArmazonCercaKeyTyped

    private void txtArmazonCercaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArmazonCercaFocusLost
        cmpLenteCerca();
        cmpPrecios();
    }//GEN-LAST:event_txtArmazonCercaFocusLost

    private void txtCristalLejosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCristalLejosKeyTyped
        int largo = 45;
        if(txtCristalLejos.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtCristalLejosKeyTyped

    private void txtCristalLejosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCristalLejosFocusLost
        cmpCristalLejos();
        cmpPrecios();
    }//GEN-LAST:event_txtCristalLejosFocusLost

    private void txtOILejosAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOILejosAKeyTyped
        int largo = 45;
        if(txtOILejosA.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtOILejosAKeyTyped

    private void txtOILejosCILKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOILejosCILKeyTyped
        int largo = 45;
        if(txtOILejosESF.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtOILejosCILKeyTyped

    private void txtOILejosESFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOILejosESFKeyTyped
        int largo = 45;
        if(txtOILejosESF.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtOILejosESFKeyTyped

    private void txtODLejosAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODLejosAKeyTyped
        int largo = 45;
        if(txtODLejosA.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtODLejosAKeyTyped

    private void txtODLejosCILKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODLejosCILKeyTyped
        int largo = 45;
        if(txtODLejosCIL.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtODLejosCILKeyTyped

    private void txtODLejosESFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtODLejosESFKeyTyped
        int largo = 45;
        if(txtODLejosESF.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtODLejosESFKeyTyped

    private void txtArmazonLejosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArmazonLejosKeyTyped
        int largo = 45;
        if(txtArmazonLejos.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtArmazonLejosKeyTyped

    private void txtArmazonLejosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArmazonLejosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtArmazonLejosActionPerformed

    private void txtArmazonLejosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArmazonLejosFocusLost
        cmpLenteLejos();
        cmpPrecios();
    }//GEN-LAST:event_txtArmazonLejosFocusLost

    private void txtDoctorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDoctorFocusLost
        cmpEspecialista();
        cmpHoraEntrega();
    }//GEN-LAST:event_txtDoctorFocusLost

    
    private void txtEntregaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntregaKeyTyped
        int largo = 45;
        if(txtEntrega.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtEntregaKeyTyped

    private void iconDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconDoctorMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconDoctorMouseClicked

    private void txtEntregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEntregaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEntregaActionPerformed

    private void iconClock2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconClock2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconClock2MouseClicked

    private void iconCalendarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconCalendarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconCalendarMouseClicked

    private void iconPlaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconPlaceMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconPlaceMouseClicked

    private void iconClockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconClockMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconClockMouseClicked

    private void iconMailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconMailMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconMailMouseClicked

    private void iconGenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconGenderMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconGenderMouseClicked

    private void iconInstitucionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconInstitucionMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconInstitucionMouseClicked

    private void iconDniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconDniMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconDniMouseClicked

    private void txtTelefonoCliente1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoCliente1KeyTyped
        int largo = 12;
        if(txtTelefonoCliente1.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtTelefonoCliente1KeyTyped

    private void chkExtranjeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkExtranjeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkExtranjeroActionPerformed

    private void txtCiudadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCiudadKeyTyped
        int largo = 45;
        if(txtCiudad.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtCiudadKeyTyped

    private void txtComunaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComunaKeyTyped
        int largo = 45;
        if(txtComuna.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtComunaKeyTyped

    private void txtDireccionClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionClienteKeyTyped
        int largo = 45;
        if(txtDireccionCliente.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtDireccionClienteKeyTyped

    private void txtMailClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMailClienteKeyTyped
        int largo = 45;
        if(txtMailCliente.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtMailClienteKeyTyped

    private void txtMailClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMailClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMailClienteActionPerformed

    private void txtTelefonoCliente2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoCliente2KeyTyped
        int largo = 12;
        if(txtTelefonoCliente2.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtTelefonoCliente2KeyTyped

    private void txtNombreClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreClienteKeyTyped
        int largo = 45;
        if(txtNombreCliente.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtNombreClienteKeyTyped

    private void txtRutClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRutClienteKeyTyped
        
    }//GEN-LAST:event_txtRutClienteKeyTyped

    private void txtRutClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutClienteActionPerformed

    }//GEN-LAST:event_txtRutClienteActionPerformed

    private void txtRutClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRutClienteFocusLost
        txtRutClienteValidator();
        cmpRut();
    }//GEN-LAST:event_txtRutClienteFocusLost

    private void txtInstitucionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInstitucionKeyTyped
        int largo = 45;
        if(txtInstitucion.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtInstitucionKeyTyped

    private void txtInstitucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInstitucionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInstitucionActionPerformed

    private void txtInstitucionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInstitucionFocusLost
        cmpInstitucion();
    }//GEN-LAST:event_txtInstitucionFocusLost

    private void iconAddressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconAddressMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconAddressMouseClicked

    private void iconPhone2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconPhone2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconPhone2MouseClicked

    private void iconPhone1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconPhone1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconPhone1MouseClicked

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        GV.cursorWAIT(this);
        botonGuardar();
        GV.cursorDF(this);
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnSave.getIcon().toString()))));
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnSave.getIcon().toString()))));
    }//GEN-LAST:event_btnSaveMouseExited

    private void txtDoctorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDoctorKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorKeyTyped

    private void txtFechaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaFocusLost
        
    }//GEN-LAST:event_txtFechaFocusLost

    private void txtFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyTyped
       
    }//GEN-LAST:event_txtFechaKeyTyped

    private void chkExtranjeroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkExtranjeroItemStateChanged
        if(chkExtranjero.isSelected()){
            txtRutCliente.setForeground(negro);
        }else{
            txtRutClienteValidator();
        }
    }//GEN-LAST:event_chkExtranjeroItemStateChanged

    private void txtFechaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtFechaInputMethodTextChanged
        
    }//GEN-LAST:event_txtFechaInputMethodTextChanged

    private void txtFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtFechaPropertyChange
        
    }//GEN-LAST:event_txtFechaPropertyChange

    private void txtFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyPressed
        txtFechaCheck();
    }//GEN-LAST:event_txtFechaKeyPressed

    private void txtEntregaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEntregaFocusLost
        cmpLugarEntrega();
        cmpFechaEntrega();
    }//GEN-LAST:event_txtEntregaFocusLost

    private void txtHora1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHora1FocusLost
       
    }//GEN-LAST:event_txtHora1FocusLost

    private void txtMinuto1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinuto1FocusLost
        
    }//GEN-LAST:event_txtMinuto1FocusLost

    private void txtHora2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHora2FocusLost
        
    }//GEN-LAST:event_txtHora2FocusLost

    private void txtMinuto2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinuto2FocusLost
        
    }//GEN-LAST:event_txtMinuto2FocusLost

    private void txtNombreClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreClienteFocusLost
        cmpNombre();
    }//GEN-LAST:event_txtNombreClienteFocusLost

    private void txtTelefonoCliente1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoCliente1FocusLost
        cmpContactos();
    }//GEN-LAST:event_txtTelefonoCliente1FocusLost

    private void txtTelefonoCliente2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoCliente2FocusLost
        cmpContactos();
    }//GEN-LAST:event_txtTelefonoCliente2FocusLost

    private void txtDireccionClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionClienteFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtDireccionClienteFocusLost

    private void txtComunaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComunaFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtComunaFocusLost

    private void txtCiudadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCiudadFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtCiudadFocusLost

    private void txtMailClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMailClienteFocusLost
        cmpContactos();
    }//GEN-LAST:event_txtMailClienteFocusLost

    private void cboSexoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSexoItemStateChanged
        cmpCamposCliente();
    }//GEN-LAST:event_cboSexoItemStateChanged

    private void txtNacimientoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNacimientoFocusLost
        
    }//GEN-LAST:event_txtNacimientoFocusLost

    private void txtArmazonLejosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArmazonLejosFocusGained
        
    }//GEN-LAST:event_txtArmazonLejosFocusGained

    private void txtODLejosESFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtODLejosESFFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtODLejosESFFocusLost

    private void txtODLejosCILFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtODLejosCILFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtODLejosCILFocusLost

    private void txtODLejosAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtODLejosAFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtODLejosAFocusLost

    private void txtOILejosESFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOILejosESFFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtOILejosESFFocusLost

    private void txtOILejosCILFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOILejosCILFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtOILejosCILFocusLost

    private void txtOILejosAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOILejosAFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtOILejosAFocusLost

    private void chkEndurecidoLejosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkEndurecidoLejosItemStateChanged
        cmpFormulario();
    }//GEN-LAST:event_chkEndurecidoLejosItemStateChanged

    private void chkCapaLejosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkCapaLejosItemStateChanged
        cmpFormulario();
    }//GEN-LAST:event_chkCapaLejosItemStateChanged

    private void chkPlusMaxLejosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkPlusMaxLejosItemStateChanged
        cmpFormulario();
    }//GEN-LAST:event_chkPlusMaxLejosItemStateChanged

    private void txtAddCercaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddCercaFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtAddCercaFocusLost

    private void txtODCercaESFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtODCercaESFFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtODCercaESFFocusLost

    private void txtODCercaCILFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtODCercaCILFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtODCercaCILFocusLost

    private void txtODCercaAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtODCercaAFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtODCercaAFocusLost

    private void txtOICercaESFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOICercaESFFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtOICercaESFFocusLost

    private void txtOICercaCILFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOICercaCILFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtOICercaCILFocusLost

    private void txtOICercaAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOICercaAFocusLost
        cmpFormulario();
    }//GEN-LAST:event_txtOICercaAFocusLost

    private void chkEndurecidoCercaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkEndurecidoCercaItemStateChanged
        cmpFormulario();
    }//GEN-LAST:event_chkEndurecidoCercaItemStateChanged

    private void chkCapaCercaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkCapaCercaItemStateChanged
        cmpFormulario();
    }//GEN-LAST:event_chkCapaCercaItemStateChanged

    private void chkPlusMaxCercaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkPlusMaxCercaItemStateChanged
        cmpFormulario();
    }//GEN-LAST:event_chkPlusMaxCercaItemStateChanged

    private void btnSelectConveniosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectConveniosMouseClicked
        if(GV.sincronizacionIsStopped()){
            OptionPane.showOptionPanel(new OpanelSelectConvenio(), OptionPane.titleConvenyChooser());
        }
    }//GEN-LAST:event_btnSelectConveniosMouseClicked

    private void btnSelectConveniosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectConveniosMouseEntered
        btnSelectConvenios.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnSelectConvenios.getIcon().toString()))));
    }//GEN-LAST:event_btnSelectConveniosMouseEntered

    private void btnSelectConveniosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectConveniosMouseExited
        btnSelectConvenios.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnSelectConvenios.getIcon().toString()))));
    }//GEN-LAST:event_btnSelectConveniosMouseExited

    private void btnClearConvenioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearConvenioMouseClicked
        convenioLimpiarSeleccionado();
    }//GEN-LAST:event_btnClearConvenioMouseClicked

    private void btnClearConvenioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearConvenioMouseEntered
        btnClearConvenio.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnClearConvenio.getIcon().toString()))));
    }//GEN-LAST:event_btnClearConvenioMouseEntered

    private void btnClearConvenioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearConvenioMouseExited
        btnClearConvenio.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnClearConvenio.getIcon().toString()))));
    }//GEN-LAST:event_btnClearConvenioMouseExited

    private void txtArmazonLejosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArmazonLejosKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE){
            txtArmazonLejos.setText("");
        }
        cmpLenteLejos();
    }//GEN-LAST:event_txtArmazonLejosKeyPressed

    private void txtArmazonCercaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArmazonCercaKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE){
            txtArmazonCerca.setText("");
        }
        cmpLenteCerca();
    }//GEN-LAST:event_txtArmazonCercaKeyPressed

    private void txtCristalLejosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCristalLejosKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE){
            txtCristalLejos.setText("");
            stCristalLejos=null;
        }
        cmpCristalLejos();
    }//GEN-LAST:event_txtCristalLejosKeyPressed

    private void txtCristalCercaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCristalCercaKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE){
            txtCristalCerca.setText("");
            stCristalCerca=null;
        }
        cmpCristalCerca();
    }//GEN-LAST:event_txtCristalCercaKeyPressed

    private void btnCotizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCotizarMouseClicked
        GV.cursorWAIT(this);
        cotizar();
        GV.cursorDF(this);
    }//GEN-LAST:event_btnCotizarMouseClicked

    private void btnCotizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCotizarMouseEntered
        btnCotizar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnCotizar.getIcon().toString()))));
    }//GEN-LAST:event_btnCotizarMouseEntered

    private void btnCotizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCotizarMouseExited
        btnCotizar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnCotizar.getIcon().toString()))));
    }//GEN-LAST:event_btnCotizarMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnClearConvenio;
    private javax.swing.JLabel btnCotizar;
    private javax.swing.JLabel btnSave;
    private javax.swing.JLabel btnSelectConvenios;
    private javax.swing.JComboBox<String> cboDescuento;
    private javax.swing.JComboBox<String> cboSexo;
    private javax.swing.JComboBox<String> cboTipoPago;
    private javax.swing.JCheckBox chkCapaCerca;
    private javax.swing.JCheckBox chkCapaLejos;
    private javax.swing.JCheckBox chkDescuento;
    private javax.swing.JCheckBox chkEndurecidoCerca;
    private javax.swing.JCheckBox chkEndurecidoLejos;
    private javax.swing.JCheckBox chkExtranjero;
    private javax.swing.JCheckBox chkPlusMaxCerca;
    private javax.swing.JCheckBox chkPlusMaxLejos;
    private javax.swing.JLabel iconAddress;
    private javax.swing.JLabel iconCalendar;
    private javax.swing.JLabel iconClock;
    private javax.swing.JLabel iconClock2;
    private javax.swing.JLabel iconDni;
    private javax.swing.JLabel iconDoctor;
    private javax.swing.JLabel iconGender;
    private javax.swing.JLabel iconInstitucion;
    private javax.swing.JLabel iconMail;
    private javax.swing.JLabel iconPhone1;
    private javax.swing.JLabel iconPhone2;
    private javax.swing.JLabel iconPlace;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDescuento;
    private javax.swing.JLabel lblMessageStatus;
    private javax.swing.JSpinner txtAbono;
    private javax.swing.JTextField txtAddCerca;
    private javax.swing.JTextField txtArmazonCerca;
    private javax.swing.JTextField txtArmazonLejos;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JLabel txtCnvName;
    private javax.swing.JTextField txtComuna;
    private javax.swing.JTextField txtCristalCerca;
    private javax.swing.JTextField txtCristalLejos;
    private javax.swing.JSpinner txtDPCerca;
    private javax.swing.JSpinner txtDPLejos;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtDireccionCliente;
    private javax.swing.JTextField txtDoctor;
    private javax.swing.JTextField txtEntrega;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JSpinner txtHora1;
    private javax.swing.JSpinner txtHora2;
    private javax.swing.JTextField txtInstitucion;
    private javax.swing.JTextField txtMailCliente;
    private javax.swing.JSpinner txtMinuto1;
    private javax.swing.JSpinner txtMinuto2;
    private com.toedter.calendar.JDateChooser txtNacimiento;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtODCercaA;
    private javax.swing.JTextField txtODCercaCIL;
    private javax.swing.JTextField txtODCercaESF;
    private javax.swing.JTextField txtODLejosA;
    private javax.swing.JTextField txtODLejosCIL;
    private javax.swing.JTextField txtODLejosESF;
    private javax.swing.JTextField txtOICercaA;
    private javax.swing.JTextField txtOICercaCIL;
    private javax.swing.JTextField txtOICercaESF;
    private javax.swing.JTextField txtOILejosA;
    private javax.swing.JTextField txtOILejosCIL;
    private javax.swing.JTextField txtOILejosESF;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JTextField txtRutCliente;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtTelefonoCliente1;
    private javax.swing.JTextField txtTelefonoCliente2;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    
    private void cargarCbos() {
        cboSexo.removeAllItems();
        cboSexo.addItem("Sin Seleccionar");
        cboSexo.addItem("Femenino");
        cboSexo.addItem("Masculino");
        
        
        cboDescuento.removeAllItems();
        int contDscto = 0;
        for (Object object : listDescuentos) {
            Descuento temp = (Descuento)object;
            if(temp.getPorcetange() == 0){
                cboDescuento.addItem(temp.getNombre()+" ("+GV.strToPrice(temp.getMonto())+")");
            }else{
                cboDescuento.addItem(temp.getNombre()+" ("+temp.getPorcetange()+"%)");
            }
            contDscto++;
        }
        if(contDscto > 0){
            cboDescuento.setSelectedIndex(0);
        }
        
        cboTipoPago.removeAllItems();
        cboTipoPago.addItem("Seleccione");
        for (Object temp : listTipoPagos) {
            cboTipoPago.addItem(((TipoPago)temp).getNombre());
        }
    }

    //    private void cargarFicha() {
//        //no llamar, se debe usar para cargar una ficha a editar
//        txtCnvName.setText(strCnvName);
//        stArmazonCerca = GV.getFicha().getCerca();
//        stArmazonLejos = GV.getFicha().getLejos();
//        Armazon cerca = stArmazonCerca;
//        Armazon lejos = stArmazonLejos;
//        Cliente cliente = stCliente;
//        txtAbono.setValue(0);
//        String addCerca = (cerca != null)? cerca.getAdd():"";
//        txtAddCerca.setText(addCerca);
//        
//        String marcaCerca = (cerca!= null)? cerca.getMarca():"";
//        txtArmazonCerca.setText(marcaCerca);
//        String marcaLejos = (lejos!= null)? lejos.getMarca():"";
//        txtArmazonLejos.setText(marcaLejos);
//        String cristalCerca = (cerca!=null)? cerca.getCristal():"";
//        txtCristalCerca.setText(cristalCerca);
//        String cristalLejos = (lejos!=null)? lejos.getCristal():"";
//        txtCristalLejos.setText(cristalLejos);
//        int dpCerca = (cerca!=null)? cerca.getDp():0;
//        txtDPCerca.setValue(dpCerca);
//        int dpLejos = (lejos!=null)? lejos.getDp():0;
//        txtDPLejos.setValue(dpLejos);
//        GV.getFicha().setDescuento(0);
//        txtDescuento.setText("0");
//        txtFecha.setDate(ficha.getFechaEntrega());
//        txtEntrega.setText(ficha.getLugarEntrega());
//        String hora = ((!ficha.getHoraEntrega().isEmpty())&&((""+GV.strToNumber(ficha.getHoraEntrega())).length() == 8)) ? ficha.getHoraEntrega().replaceAll(" ", "").trim():"";
//        String number = ""+GV.strToNumber(hora);
//        int h1 = (number.length() == 8) ? GV.strToNumber(number.substring(0,2)):0;
//        int m1 = (number.length() == 8) ? GV.strToNumber(number.substring(2,4)):0;
//        int h2 = (number.length() == 8) ? GV.strToNumber(number.substring(4,6)):0;
//        int m2 = (number.length() == 8) ? GV.strToNumber(number.substring(6,8)):0;
//        txtHora1.setValue(h1);
//        txtMinuto1.setValue(m1);
//        txtHora2.setValue(h2);
//        txtMinuto2.setValue(m2);
//        String docName = (stDoctor!=null)?stDoctor.getNombre()+" <"+stDoctor.getCod()+">":"";
//        docName = (docName.equals(" <null>")) ? "":docName;
//        txtDoctor.setText(docName);
//        stInstitucion = ficha.getInstitucion();
//        String inst =  (stInstitucion!=null && !stInstitucion.getCod().isEmpty())? stInstitucion.getNombre()+"<"+stInstitucion.getCod()+">":"";
//        txtInstitucion.setText(inst);
//        
//        
//        String odCEsf = (cerca!=null)? cerca.getOdEsf():"";
//        txtODCercaESF.setText(odCEsf);
//        String odCA = (cerca!=null)?cerca.getOdA():"";
//        txtODCercaA.setText(odCA);
//        String odCCil = (cerca!=null)?cerca.getOdCil():"";
//        txtODCercaCIL.setText(odCCil);
//        String odLEsf = (lejos!=null)? lejos.getOdEsf():""; 
//        txtODLejosESF.setText(odLEsf);
//        String odLA = (lejos!=null)?lejos.getOdA():"";
//        txtODLejosA.setText(odLA);
//        String odLCil = (lejos!=null)?lejos.getOdCil():"";
//        txtODLejosCIL.setText(odLCil);
//        String oiCEsf = (cerca!=null)? cerca.getOiEsf():"";
//        String oiCA = (cerca!=null)? cerca.getOiA():"";
//        String oiCCil = (cerca!=null)? cerca.getOiCil():"";
//        txtOICercaESF.setText(oiCEsf);
//        txtOICercaA.setText(oiCA);
//        txtOICercaCIL.setText(oiCCil);
//        String oiLEsf = (lejos!=null)? lejos.getOiEsf():"";
//        String oiLA = (lejos!=null)? lejos.getOiA():"";
//        String oiLCil = (lejos!=null)? lejos.getOiCil():"";
//        txtOILejosESF.setText(oiLEsf);
//        txtOILejosA.setText(oiLA);
//        txtOILejosCIL.setText(oiLCil);
//        String obs = (ficha!=null)?ficha.getObservacion():"";
//        boolean capCerca = (ficha.getCerca() != null && ficha.getCerca().getCapa()==1)? true:false;
//        chkCapaCerca.setSelected(capCerca);
//        boolean capLejos = (ficha.getLejos() != null && ficha.getLejos().getCapa()==1)? true:false;
//        chkCapaLejos.setSelected(capLejos);
//        boolean endCerca = (ficha.getCerca() != null && ficha.getCerca().getEndurecido()==1)? true:false;
//        chkEndurecidoCerca.setSelected(endCerca);
//        boolean endLejos = (ficha.getLejos() != null && ficha.getLejos().getEndurecido()==1)? true:false;
//        chkEndurecidoLejos.setSelected(endLejos);
//        boolean pmCerca = (ficha.getCerca() != null && ficha.getCerca().getPlusMax()==1)? true:false;
//        chkPlusMaxCerca.setSelected(pmCerca);
//        boolean pmLejos = (ficha.getLejos() != null && ficha.getLejos().getPlusMax()==1)? true:false;
//        chkPlusMaxLejos.setSelected(pmLejos);
//        
//        txtObs.setText(obs);
//        
//        
//        String rut = (cliente!=null)?cliente.getCod():"";
//        String nombre = (cliente != null)? cliente.getNombre():"";
//        txtNombreCliente.setText(nombre);
//        String t1 = (cliente!=null)?cliente.getTelefono1():"";
//        txtTelefonoCliente1.setText(t1);
//        String t2 = (cliente!=null)?cliente.getTelefono2():"";
//        txtTelefonoCliente2.setText(t2);
//        String mail = (cliente!=null)? cliente.getEmail():"";
//        txtMailCliente.setText(mail);
//        String ciudad = (cliente!= null)? cliente.getCiudad():"";
//        txtCiudad.setText(ciudad);
//        String comuna = (cliente!= null)? cliente.getComuna():"";
//        txtComuna.setText(comuna);
//        int sexo = (cliente != null)? cliente.getSexo():0;
//        cboSexo.setSelectedIndex(sexo);
//        String direccion = (cliente != null)? cliente.getDireccion():"";
//        txtDireccionCliente.setText(direccion);
//        Date nac = (cliente!=null)? cliente.getNacimiento():null;
//        txtNacimiento.setDate(nac);
//        txtRutCliente.setText(rut);
//        cargarCbos();
//    }

    private void errorLargo(int largo) {
        OptionPane.showMsg( "Datos mal ingresados", "Error de ingreso de datos, \n"
                    + "los datos ingresados deben tener un maximo de "+largo+" caracteres.", JOptionPane.WARNING_MESSAGE);
    }
    
    private void msgWarning(String message){
        message = GV.getStr(message);
        if(message.isEmpty()){
            lblMessageStatus.setText("");
            lblMessageStatus.setVisible(false);
        }else{
            lblMessageStatus.setText(message);
            lblMessageStatus.setForeground(negro);
            lblMessageStatus.setVisible(true);
        }
    }
    
    private void msgRejectedClear(){
        msgRejected(null);
    }
    
    private String getDescuentoName(String arg){
        arg = GV.getStr(arg);
        if(arg.contains("(") && !arg.startsWith("(")){
            arg=arg.substring(0,arg.indexOf("(")-1);
        }
        return arg.trim();
    }


    private void txtFechaCheck() {
        if(!GV.getStr(txtFecha.getDateFormatString().replaceAll("[0-9-]", "")).isEmpty()){
            txtFecha.setDate(null);
        }
    }

    /**********************BEGIN ASIGNACION DE DATOS***************************/
    private void asigAllDatas() {
        FICHA = new Ficha();
        FICHA.setCod(load.getCurrentCod(new Ficha()));
        FICHA.setCerca(asigArmazon(tpCerca,FICHA.getCod()));
        FICHA.setLejos(asigArmazon(tpLejos,FICHA.getCod()));
        FICHA.setCliente(asigCliente());
        FICHA.setConvenio(stConvenio);
        FICHA.setDescuento(GV.strToNumber(txtDescuento.getText()));
        FICHA.setDespacho(null);
        FICHA.setDoctor(stDoctor);
        FICHA.setFecha(new Date());
        FICHA.setFechaEntrega(txtFecha.getDate());
        FICHA.setHoraEntrega(asigHora());
        FICHA.setInstitucion(stInstitucion);
        FICHA.setLugarEntrega(GV.getFilterString(txtEntrega.getText()));
        FICHA.setObservacion(GV.getFilterString(txtObs.getText()));
        FICHA.setSaldo(GV.strToNumber(txtSaldo.getText()));
        FICHA.setUser(GV.user());
        FICHA.setValorTotal(GV.strToNumber(txtTotal.getText()));
        int estado = (FICHA.getSaldo() == 0)? 2:1;//2=pagado,1=pendiente
        FICHA.setEstado(estado);
    }
    
    private Armazon asigArmazon(int tipo,String idFicha){
        Armazon armazon = new Armazon();
        Cristal cristal;
        Lente lente;
        int capa;
        int en;
        int pm;
        int dp;
        int precioCristal = 0;
        int precioLente = 0;
        String add = "";
        String nombreCristal = "";
        String nombreMarca = "";
        String ODA;
        String ODCIL;
        String ODESF;
        String OIA;
        String OICIL;
        String OIESF;
        if(tipo == tpCerca){
            capa = (chkCapaCerca.isSelected())? 1:0;
            en = (chkEndurecidoCerca.isSelected())? 1:0;
            pm = (chkPlusMaxCerca.isSelected())? 1:0;
            add = GV.getFilterString(txtAddCerca.getText());
            cristal = stCristalCerca;
            lente = stLenteCerca;
            dp = (int)txtDPCerca.getValue();
            ODA = GV.getFilterString(txtODCercaA.getText());
            ODCIL = GV.getFilterString(txtODCercaCIL.getText());
            ODESF = GV.getFilterString(txtODCercaESF.getText());
            OIA = GV.getFilterString(txtOICercaA.getText());
            OICIL = GV.getFilterString(txtOICercaCIL.getText());
            OIESF = GV.getFilterString(txtOICercaESF.getText());
        }else{
            capa = (chkCapaLejos.isSelected())? 1:0;
            en = (chkEndurecidoLejos.isSelected())? 1:0;
            pm = (chkPlusMaxLejos.isSelected())? 1:0;
            cristal = stCristalLejos;
            lente = stLenteLejos;
            dp = (int)txtDPLejos.getValue();
            ODA = GV.getFilterString(txtODLejosA.getText());
            ODCIL = GV.getFilterString(txtODLejosCIL.getText());
            ODESF = GV.getFilterString(txtODLejosESF.getText());
            OIA = GV.getFilterString(txtOILejosA.getText());
            OICIL = GV.getFilterString(txtOILejosCIL.getText());
            OIESF = GV.getFilterString(txtOILejosESF.getText());
        }
        if(cristal != null){
            precioCristal = (stConvenio==null)?
                    cristal.getPrecio():
                    cristal.getPrecio() + ((cristal.getPrecio() * stConvenio.getPorcentajeAdicion())/100);
            nombreCristal = cristal.getNombre();
        }
        if(lente != null){
            precioLente = (stConvenio==null)?
                    lente.getPrecioAct():
                    lente.getPrecioAct() + ((lente.getPrecioAct() * stConvenio.getPorcentajeAdicion())/100);
            nombreMarca = lente.getCod();
        }
        armazon.setIdFicha(idFicha);
        armazon.setPrecioCristal(precioCristal);
        armazon.setCristal(nombreCristal);
        armazon.setMarca(nombreMarca);
        armazon.setPrecioMarca(precioLente);
        armazon.setCapa(capa);
        armazon.setAdd(add);
        armazon.setDp(dp);
        armazon.setEndurecido(en);
        armazon.setEstado(1);
        armazon.setPlusMax(pm);
        armazon.setOdA(ODA);
        armazon.setOdCil(ODCIL);
        armazon.setOdEsf(ODESF);
        armazon.setOiA(OIA);
        armazon.setOiCil(OICIL);
        armazon.setOiEsf(OIESF);
        armazon.setTipo(tipo);
        
        return armazon;
    }
    
    private Cliente asigCliente(){
        Cliente cliente = new Cliente();
        cliente.setCiudad(GV.getFilterString(txtCiudad.getText()));
        cliente.setCod(GV.getFilterString(txtRutCliente.getText()));
        cliente.setComuna(GV.getFilterString(txtComuna.getText()));
        cliente.setDireccion(GV.getFilterString(txtDireccionCliente.getText()));
        cliente.setEmail(GV.getFilterString(txtMailCliente.getText()));
        cliente.setEstado(1);
        cliente.setNacimiento(txtNacimiento.getDate());
        cliente.setNombre(GV.getFilterString(txtNombreCliente.getText()));
        cliente.setSexo(cboSexo.getSelectedIndex());
        cliente.setTelefono1(GV.getFilterString(txtTelefonoCliente1.getText()));
        cliente.setTelefono2(GV.getFilterString(txtTelefonoCliente2.getText()));
        return cliente;
    }
    
    private String asigHora(){
        commitSpinner();
        int h1 = (int)txtHora1.getValue();
        String hr1 = (h1 < 10)? "0"+h1:""+h1;
        int h2 = (int)txtHora2.getValue();
        String hr2 = (h2 < 10)? "0"+h2:""+h2;
        int m1 = (int)txtMinuto1.getValue();
        String mn1 = (m1 < 10)? "0"+m1:""+m1;
        int m2 = (int)txtMinuto2.getValue();
        String mn2 = (m2 < 10)? "0"+m2:""+m2;
        return hr1+":"+mn1+"-"+hr2+":"+mn2;
    }
    /**********************END ASIGNACION DE DATOS*****************************/
    /********************INICIO ETAPA 1: PROCESOS DE CARGA*********************/
    private void reloadPage() {
        try {
            boton.crearFicha();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(VCrearFichaMac.class.getName()).log(Level.SEVERE, null, ex);
            OptionPane.showMsg("Error al recargar ventana", ex+"\n\n"+ex.getMessage()+"\n\n"+ex.getLocalizedMessage(), 3);
        }
    }

    private void loadStaticObjects() {
        clearData();
        stInventario = new Inventario();
        try {
            stInventario = (Inventario)load.get(GV.inventarioName(), 0, new Inventario());
        } catch (InstantiationException | IllegalAccessException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(VCrearFichaMac.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(stInventario == null){
            stInventario = new Inventario();
        }
        listTipoPagos = load.listar("0", new TipoPago());
        listInstituciones = load.listar("0", new Institucion());
        listClientes = load.listar("0", new Cliente());
        listDoctores = load.listar("0", new Doctor());
        listCristales = load.listar("0", new Cristal());
        listDescuentos = load.listar("0", new Descuento());
        GV.setInventarioSeleccionado(stInventario.getId());
        listLentes = load.listar("st", new Lente());
        GV.setInventarioSeleccionado(0);
        convenioObtenerSeleccionado();
        autocompletar();
        cargarCbos();
    }
    
    private void clearData() {
        stCliente=null;
        stCristalCerca= null;
        stCristalLejos=null;
        stDescuento=null;
        stDoctor= null;
        stInstitucion= null;
        stLenteCerca= null;
        stLenteLejos= null;
        stTipoPago = null;
        GV.clearFicha();
    }
    
    private void convenioLimpiarSeleccionado(){
        convenioAssign(null);
    }
    
    private void convenioAssign(Convenio selected){
        GV.setConvenio(selected);
        convenioObtenerSeleccionado();
    }
    
    private void convenioObtenerSeleccionado() {
        try {
            stConvenio = (Convenio)load.get(null, (GV.getConvenio() != null)?GV.getConvenio().getId():0, new Convenio());
            GV.setConvenio(stConvenio);
            if(stConvenio == null){
                btnClearConvenio.setVisible(false);
                ContentAdminMac.lblTitle.setText("Nueva receta oftalmológica");
                strCnvName = "";
                txtCnvName.setText(strCnvName);
                txtCnvName.setVisible(false);
            }else{
                btnClearConvenio.setVisible(true);
                ContentAdminMac.lblTitle.setText("Nueva receta oftalmológica con convenio: "+stConvenio.getNombre());
                strCnvName = "Convenio: "+stConvenio.getNombre();
                txtCnvName.setText(strCnvName);
                txtCnvName.setVisible(true);
            }
            cmpFormulario();
        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(VCrearFichaMac.class.getName()).log(Level.SEVERE, null, ex);
            stConvenio = null;
            GV.setConvenio(null);
            OptionPane.showMsg("Error inesperado", "Ocurrió un problema al cargar el convenio seleccionado", 3);
        }
    }
    
    private void autocompletar() {
        TextAutoCompleter textAutoCompleter = new TextAutoCompleter(txtInstitucion);
        textAutoCompleter.setMode(0);
        TextAutoCompleter textAutoCompleter8 = new TextAutoCompleter(txtEntrega);
        textAutoCompleter8.setMode(0);
        for (Object temp : listInstituciones) {
            textAutoCompleter.addItem(((Institucion)temp).getNombre()+" <"+((Institucion)temp).getCod()+">");
            textAutoCompleter.setMode(0);
            textAutoCompleter8.addItem(((Institucion)temp).getNombre());
            textAutoCompleter8.setMode(0);
        }
        
        TextAutoCompleter textAutoCompleter3 = new TextAutoCompleter(txtDoctor);
        for (Object temp : listDoctores) {
            textAutoCompleter3.addItem(((Doctor)temp).getNombre()+" <"+(((Doctor)temp).getCod())+">");
            textAutoCompleter3.setMode(0);
        }
        
        TextAutoCompleter textAutoCompleter4 = new TextAutoCompleter(txtCristalCerca);
        TextAutoCompleter textAutoCompleter5 = new TextAutoCompleter(txtCristalLejos);
        for (Object temp : listCristales) {
            textAutoCompleter4.addItem(((Cristal)temp).getNombre());
            textAutoCompleter4.setMode(0);
            textAutoCompleter5.addItem(((Cristal)temp).getNombre());
            textAutoCompleter5.setMode(0);
        }
        
        TextAutoCompleter textAutoCompleter6 = new TextAutoCompleter(txtArmazonCerca);
        TextAutoCompleter textAutoCompleter7 = new TextAutoCompleter(txtArmazonLejos);
        
        for (Object temp : listLentes) {
                textAutoCompleter6.addItem(((Lente)temp).getCod());
                textAutoCompleter6.setMode(0);
                textAutoCompleter7.addItem(((Lente)temp).getCod());
                textAutoCompleter7.setMode(0);
        }
        
    }
    /***********************FIN ETAPA 1: PROCESOS DE CARGA*********************/
    /********************INICIO ETAPA 2: VALIDACIONES**************************/
    
    private void txtRutClienteValidator() {
        String rutCliente = txtRutCliente.getText();
        if(ValidaRut.validarRut(rutCliente)){
            txtRutCliente.setForeground(negro);
        }else{
            if(!chkExtranjero.isSelected()){
                txtRutCliente.setForeground(rojo);
            }
        }
        stCliente = (Cliente)GV.buscarPorIdEnLista(rutCliente, listClientes, new Cliente());
        if(stCliente != null){
            txtNombreCliente.setText(stCliente.getNombre());
            txtTelefonoCliente1.setText(stCliente.getTelefono1());
            txtTelefonoCliente2.setText(stCliente.getTelefono2());
            txtMailCliente.setText(stCliente.getEmail());
            txtDireccionCliente.setText(stCliente.getDireccion());
            txtComuna.setText(stCliente.getComuna());
            txtCiudad.setText(stCliente.getCiudad());
            cboSexo.setSelectedIndex(stCliente.getSexo());
            txtNacimiento.setDate(stCliente.getNacimiento());
        }else{
            txtNombreCliente.setText("");
            txtTelefonoCliente1.setText("");
            txtTelefonoCliente2.setText("");
            txtMailCliente.setText("");
            txtDireccionCliente.setText("");
            txtComuna.setText("");
            txtCiudad.setText("");
            cboSexo.setSelectedIndex(0);
            txtNacimiento.setDate(null);
        }
    }
    
    private String getIdFromString(String arg){
        arg = GV.getStr(arg);
        if(arg.contains("<") && !arg.endsWith("<")){
            arg=arg.substring(arg.indexOf("<")+1).replaceAll(">", "");
            return arg;
        }
        return "0";
    }
    /***********************FIN ETAPA 2: VALIDACIONES**************************/
    
    private boolean cmpFormulario(){
        msgRejectedClear();
        if(!cmpFechaEntrega())return false;
        if(!cmpLugarEntrega())return false;
        if(!cmpHoraEntrega())return false;
        if(!cmpEspecialista())return false;
        if(!cmpInstitucion())return false;
        if(!cmpRut())return false;
        if(!cmpNombre())return false;
        if(!cmpContactos())return false;
        if(!cmpCamposCliente())return false;
        if(!cmpNacimiento())return false;
        if(!cmpLenteLejos())return false;
        if(!cmpLenteCerca())return false;
        if(!cmpLentesIguales())return false;
        if(!cmpCristalLejos())return false;
        if(!cmpCristalCerca())return false;
        if(!cmpPrecios())return false;
        if(!cmpTipoPago())return false;
        return true;
    }
    
    private boolean cmpFechaEntrega(){
        Date date = txtFecha.getDate();
        if(date == null){
            msgRejected("Debe ingresar una fecha de entrega");
            return false;
        }
        if(!GV.fechaActualOFutura(date)){
            msgRejected("Debe ingresar una fecha de entrega actual o futura");
            return false;
        }
        return true;
    }
    
    private boolean cmpLugarEntrega(){
        String place = GV.getFilterString(txtEntrega.getText());
        if(place.isEmpty()){
            msgRejected("Debe ingresar un lugar de entrega, no incluir caracteres especiales.");
            return false;
        }
        return true;
    }
    
    private boolean cmpHoraEntrega(){
        commitSpinner();
        int hora1 = GV.strToNumber(txtHora1.getValue().toString());
        int hora2 = GV.strToNumber(txtHora2.getValue().toString());
        int min1 = GV.strToNumber(txtMinuto1.getValue().toString());
        String m1 = ""+min1;
        if(min1 < 10){
            m1 = "0"+min1;
        }
        int min2 = GV.strToNumber(txtMinuto2.getValue().toString());
        String m2 = ""+min2;
        if(min2 < 10){
            m2 = "0"+min2;
        }
        int h1 = GV.strToNumber(hora1+m1);
        int h2 = GV.strToNumber(hora2+m2);
        if(h1 >= 700 && h1 < 2300){
            if(h2 >= h1 && h2 <=2300){
                return true;
            }
        }
        msgRejected("La hora de entrega debe estar ordenada de menor a mayor en rangos desde 07:00 hasta 23:00 hrs.");
        return false;
    }
    
    private boolean cmpEspecialista(){
        String rut = GV.getFilterString(txtDoctor.getText());
        if(rut.isEmpty()){
            txtDoctor.setForeground(negro);
            return true;
        }else{
            stDoctor = ((Doctor)GV.buscarPorIdEnLista(getIdFromString(rut), listDoctores, new Doctor()));
            if(stDoctor == null){
                txtDoctor.setForeground(rojo);
                msgRejected("El especialista no se encuentra registrado en el sistema.");
                return false;
            }
        }
        txtDoctor.setForeground(negro);
        return true;
    }
    
    private boolean cmpInstitucion(){
        String ins = GV.getFilterString(txtInstitucion.getText());
        stInstitucion = null;
        if(ins.isEmpty()){
            txtInstitucion.setForeground(negro);
            return true;
        }else{
            stInstitucion = ((Institucion)GV.buscarPorIdEnLista((getIdFromString(ins)), listInstituciones, new Institucion()));
            if(stInstitucion == null){
                txtInstitucion.setForeground(rojo);
                msgRejected("Debe ingresar una institución registrada en el sistema.");
                return false;
            }
        }
        txtInstitucion.setForeground(negro);
        return true;
    }
    
    private boolean cmpRut(){
        if(GV.getFilterString(txtRutCliente.getText()).isEmpty()){
            msgRejected("Debe ingresar el rut del cliente");
            return false;
        }else{
            if(txtRutCliente.getForeground() == rojo && !chkExtranjero.isSelected()){
                msgRejected("Debe ingresar un rut válido o marcar registro como extrangero");
                return false;
            }
        }
        return true;
    }
    
    private boolean cmpNombre(){
        if(GV.getFilterString(txtNombreCliente.getText()).isEmpty()){
            msgRejected("Debe ingresar el nombre del cliente");
            return false;
        }
        if(GV.getFilterString(txtNombreCliente.getText()).length() < 3){
            msgRejected("Nombre de cliente no debe contener menos de tres caracteres ni caracteres especiales");
            return false;
        }
        return true;
    }
    
    private boolean cmpContactos(){
        String tel1 = GV.getStr(txtTelefonoCliente1.getText());
        String tel2 = GV.getStr(txtTelefonoCliente2.getText());
        String mail = GV.mailValidate(txtMailCliente.getText());
        if(tel1.isEmpty() && tel2.isEmpty() && mail.isEmpty()){
            msgRejected("Faltan datos obligatorios de contacto: teléfonos o email válidos");
            return false;
        }
        if(!mail.isEmpty() && GV.mailValidate(mail).isEmpty()){
            txtMailCliente.setForeground(rojo);
            msgRejected("El email ingresado no es válido");
            return false;
        }
        txtMailCliente.setForeground(negro);
        return true;
    }
    
    private boolean cmpNacimiento(){
        int year = GV.strToNumber(GV.dateToString(txtNacimiento.getDate(), "yyyy"));
        int currentYear = GV.strToNumber(GV.dateToString(new Date(), "yyyy"));
        int dif = currentYear - year;
        if(dif >= 4 && dif < 100){
            return true;
        }
        msgRejected("Debe ingresar una fecha de nacimiento válida.");
        return false;
    }
    
    private boolean cmpCamposCliente(){
        String dir = GV.getFilterString(txtDireccionCliente.getText());
        txtDireccionCliente.setText(dir);
        String comuna = GV.getFilterString(txtComuna.getText());
        txtComuna.setText(comuna);
        String ciudad = GV.getFilterString(txtCiudad.getText());
        txtCiudad.setText(ciudad);
        if(dir.isEmpty() || comuna.isEmpty() || ciudad.isEmpty() || cboSexo.getSelectedIndex() == 0){
            msgWarning("Falta completar información del cliente");
        }
        return true;
    }
    
    private boolean cmpLenteLejos(){
        String lenName1 = txtArmazonLejos.getText();
        
        if(lenName1.length() > 1){
            stLenteLejos = ((Lente)GV.buscarPorIdEnLista(lenName1, listLentes, new Lente()));
            txtArmazonLejos.setForeground(negro);
            if(stLenteLejos == null){
                txtArmazonLejos.setForeground(rojo);
                msgRejected("Lejos: Debe ingresar un lente existente");
                return false;
            }
        }else{
            stLenteLejos = null;
        }
        return true;
    }
    
    private boolean cmpLenteCerca(){
        String lenName2 = txtArmazonCerca.getText();
        
        if(lenName2.length() > 1){
            stLenteCerca = ((Lente)GV.buscarPorIdEnLista(lenName2, listLentes, new Lente()));
            txtArmazonCerca.setForeground(negro);
            if(stLenteCerca == null){
                txtArmazonCerca.setForeground(rojo);
                msgRejected("Cerca: Debe ingresar un lente existente");
                return false;
            }
        }else{
            stLenteCerca = null;
        }
        return true;
    }
    
    private boolean cmpLentesIguales(){
        if(stLenteLejos != null && stLenteCerca != null){
            if(stLenteLejos.getCod().equals(stLenteCerca.getCod())){
                if(stLenteLejos.getStock()<=1){
                    msgRejected("Debe seleccionar un lente diferente, no hay stock disponible.");
                    return false;
                }
            }
        }
        return true;
    }
    
    private boolean cmpCristalLejos(){
        if(GV.getStr(txtCristalLejos.getText()).isEmpty()){
            stCristalLejos = null;
            if(!GV.getStr(txtArmazonLejos.getText()).isEmpty()){
                msgWarning("Lejos: Falta ingresar un cristal");
            }
            return true;
        }else{
            stCristalLejos = ((Cristal)GV.buscarPorNombreEnLista(txtCristalLejos.getText(), listCristales, new Cristal()));
            txtCristalLejos.setForeground(negro);
            if(stCristalLejos==null){
                txtCristalLejos.setForeground(rojo);
                msgRejected("Lejos: Debe ingresar un cristal existente");
                return false;
            }else{
                if(GV.getStr(txtArmazonLejos.getText()).isEmpty()){
                    msgWarning("Lejos: Falta ingresar un armazon");
                }
            }
        }
        return true;
    }
    
    private boolean cmpCristalCerca(){
        if(GV.getStr(txtCristalCerca.getText()).isEmpty()){
            stCristalCerca = null;
            if(!GV.getStr(txtArmazonCerca.getText()).isEmpty()){
                msgWarning("Cerca: Falta ingresar un cristal");
            }
            return true;
        }else{
            stCristalCerca = ((Cristal)GV.buscarPorNombreEnLista(txtCristalCerca.getText(), listCristales, new Cristal()));
            txtCristalCerca.setForeground(negro);
            if(stCristalCerca==null){
                txtCristalCerca.setForeground(rojo);
                msgRejected("Lejos: Debe ingresar un cristal existente");
                return false;
            }else{
                if(GV.getStr(txtArmazonCerca.getText()).isEmpty()){
                    msgWarning("Lejos: Falta ingresar un armazon");
                }
            }
        }
        return true;
    }
    
    private boolean cmpPrecios(){
        int cristales = 0;
        if(stCristalLejos != null){
            cristales = cristales+stCristalLejos.getPrecio();
        }
        if(stCristalCerca != null){
            cristales = cristales+stCristalCerca.getPrecio();
        }
        int lentes = 0;
        if(stLenteCerca != null){
            lentes = lentes + stLenteCerca.getPrecioAct();
        }
        if(stLenteLejos != null){
            lentes = lentes + stLenteLejos.getPrecioAct();
        }
        int total = GV.roundPrice((cristales+lentes));
        if(total == 0){
            msgRejected("Debe ingresar al menos un producto para generar este documento");
            return false;
        }
        total = (stConvenio==null)?total:total + ((total * stConvenio.getPorcentajeAdicion())/100);
        
        int abono = (int)txtAbono.getValue();
        
        int dscto = 0;
        if(chkDescuento.isSelected() && total > 0){
             stDescuento = ((Descuento)GV.buscarPorNombreEnLista(
                        getDescuentoName(cboDescuento.getSelectedItem().toString())
                        , listDescuentos, new Descuento()));
            if(stDescuento != null){
                dscto = GV.obtenerDescuentoFicha(stDescuento,total);
            }
        }
        int saldo = (total-dscto-abono);
        txtTotal.setText(GV.strToPrice(GV.roundPrice(total)));
        txtSaldo.setText(GV.strToPrice(saldo));
        txtDescuento.setText(GV.strToPrice(dscto));
        if(dscto > total){
            msgRejected("El descuento aplicado debe ser menor que el valor total");
            return false;
        }
        if(abono > (total - dscto)){
            msgRejected("El abono ingresado debe ser menor o igual que el saldo");
            return false;
        }
        if(abono < 0){
            msgRejected("El abono ingresado es incorrecto");
            return false;
        }
        return true;
    }
    
    private boolean cmpTipoPago(){
        if(GV.strToNumber(txtAbono.getValue().toString()) != 0){
            if(cboTipoPago.getSelectedIndex() == 0){
                msgRejected("Debe registrar el medio de pago en el abono");
                return false;
            }else{
                String nombre = (String) cboTipoPago.getSelectedItem();
                stTipoPago = ((TipoPago)GV.buscarPorNombreEnLista(nombre, listTipoPagos , new TipoPago()));
                if(stTipoPago == null){
                    msgRejected("Debe registrar el medio de pago en el abono");
                    return false;
                }
            } 
        }else{
            if(GV.strToNumber(txtTotal.getText()) != 0){
                msgWarning("No se ha registrado un abono");
            }
        }
        return true;
    }
    
    /**
     * muestra un mensaje en el panel, si el mensaje es vacío o nulo no aparece
     * @param message 
     */
    private void msgRejected(String message) {
        message = GV.getStr(message);
        if(message.isEmpty()){
            lblMessageStatus.setText("");
            lblMessageStatus.setVisible(false);
        }else{
            lblMessageStatus.setText(message);
            lblMessageStatus.setForeground(rojo);
            lblMessageStatus.setVisible(true);
        }
    }
    
    private boolean commitSpinner() {
        boolean value = true;
        try {
            txtHora1.commitEdit();
            txtHora2.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(VCrearFichaMac.class.getName()).log(Level.SEVERE, null, ex);
            GV.mensajeExcepcion("La hora ingresada es incorrecta\n"+ex.getMessage(), 2);
            value = false;
        }
        try {
            txtMinuto1.commitEdit();
            txtMinuto2.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(VCrearFichaMac.class.getName()).log(Level.SEVERE, null, ex);
            GV.mensajeExcepcion("Los minutos ingresados son incorrectos\n"+ex.getMessage(), 2);
            value = false;
        }
        try {
            txtAbono.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(VCrearFichaMac.class.getName()).log(Level.SEVERE, null, ex);
            GV.mensajeExcepcion("El abono ingresado es incorrecto\n"+ex.getMessage(), 2);
            value = false;
        }
        return value;
    }
    
    private void botonGuardar(){
        String warningsText = "";
        if(!commitSpinner()){
            return;
        }
        if(GV.sincronizacionIsStopped()){//No guardará los datos si hay una sincronización activa
            if(!cmpFormulario()){
                warningsText = (GV.getStr(lblMessageStatus.getText()).isEmpty())?"":lblMessageStatus.getText();
                OptionPane.showMsg("Falta corregir alguna información", warningsText, 2);
                return;
            }
            warningsText = (GV.getStr(lblMessageStatus.getText()).isEmpty())?"":"Observación:"+lblMessageStatus.getText();
            String confirmText = "Registrar los datos\n" + ((warningsText.isEmpty())? "\n":warningsText+"\n")
                + "¿Estas seguro que los datos son correctos?";
            if(OptionPane.getConfirmation("Confirmar registro", confirmText, 1)){
                asigAllDatas();
                if(save(FICHA)){
                    GV.printFicha(FICHA);
                    reloadPage();
                }
            }else{
                OptionPane.showMsg("Operación cancelada", "Los datos aún no se han guardado", 1);
            } 
        }
    }
    
    private boolean save(Ficha ficha){
        int abono = (int) txtAbono.getValue();
        HistorialPago hp = null;
        
        if(abono > 0){
            if(stTipoPago == null){
                msgRejected("Debe registrar el medio de pago en el abono");
                return false;
            }else{
                String idTp = load.getCurrentCod(new HistorialPago());
                hp = new HistorialPago(idTp, new Date(), abono, stTipoPago.getId(), ficha.getCod(),1, null, 0);
            }
        }
        return load.createFicha(ficha,hp);
    }
    
    private void logicaChkDescuento(){
        if(chkDescuento.isSelected() && listDescuentos.size() > 0){
            cboDescuento.setVisible(true);
            lblDescuento.setVisible(true);
            txtDescuento.setVisible(true);
        }else{
            cboDescuento.setSelectedIndex(0);
            cboDescuento.setVisible(false);
            lblDescuento.setVisible(false);
            txtDescuento.setVisible(false);
            if(listDescuentos.isEmpty()){
                chkDescuento.setSelected(false);
                cboDescuento.setVisible(true);
                lblDescuento.setVisible(true);
                txtDescuento.setVisible(true);
                OptionPane.showMsg("No se puede añadir descuento", "No existen descuentos registrados, debe ingresarlos en \"Configuracion\" opción \"Descuentos\"", 2);
            }
        }
        cmpPrecios();
    }
    
    
    private void cotizar(){
        String warningsText = "";
        if(!commitSpinner()){
            return;
        }
            if(!cmpFormularioQuote()){
                warningsText = (GV.getStr(lblMessageStatus.getText()).isEmpty())?"":lblMessageStatus.getText();
                OptionPane.showMsg("Falta corregir alguna información", warningsText, 2);
                return;
            }
            warningsText = (GV.getStr(lblMessageStatus.getText()).isEmpty())?"":"Observación:"+lblMessageStatus.getText();
            String confirmText = "Ver cotización\n" + ((warningsText.isEmpty())? "\n":warningsText+"\n")
                + "¿Estas seguro que los datos son correctos?";
            if(OptionPane.getConfirmation("Confirmar registro", confirmText, 1)){
                asigAllDatas();
                try{
                    load.add(FICHA.getCliente());
                }catch(InstantiationException | IllegalAccessException ex){
                   GV.mensajeExcepcion(ex.getMessage(), 3);
                }
                GV.printCotizacion(FICHA);
                reloadPage();
                
            }
    }
    
    private boolean cmpFormularioQuote(){
        msgRejectedClear();
        if(!cmpRut())return false;
        if(!cmpNombre())return false;
        if(!cmpContactos())return false;
        if(!cmpCamposCliente())return false;
        if(!cmpNacimiento())return false;
        if(!cmpLenteLejos())return false;
        if(!cmpLenteCerca())return false;
        if(!cmpLentesIguales())return false;
        if(!cmpCristalLejos())return false;
        if(!cmpCristalCerca())return false;
        if(!cmpPrecios())return false;
        return true;
    }
}
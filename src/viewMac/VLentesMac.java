/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewMac;

import dao.Dao;
import entities.Inventario;
import entities.Lente;
import entities.RegistroBaja;
import fn.Boton;
import fn.GV;
import javax.swing.table.DefaultTableModel;
import fn.Icons;
import fn.OptionPane;
import fn.globalValues.GlobalValuesVariables;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.TableRowSorter;
import sync.entities.LocalInventario;
import view.opanel.OpanelIncreaseStock;

/**
 *
 * @author home
 */
public class VLentesMac extends javax.swing.JPanel {
    Boton boton = new Boton();
    Dao load= new Dao();
    private static Lente stLente =  null;
    private static Inventario stInventario = null;
    private static String inventaryName = GV.inventarioName();
    TableRowSorter trs;
    DefaultTableModel modelo = new DefaultTableModel() {
           @Override
           public boolean isCellEditable(int fila, int columna) {
               return false; //Con esto conseguimos que la tabla no se pueda editar
           }
        };
    /**
     * Creates new form VClientes
     */
    public VLentesMac() throws SQLException, ClassNotFoundException {
        ContentAdminMac.lblTitle.setText("Lentes");
//        load.sincronize(new Lente());
        initComponents();
        loadPanels(1);          
        modelo.addColumn("Codigo");
        modelo.addColumn("Marca");
        modelo.addColumn("Color");
        modelo.addColumn("Stock");
        tblListar.setModel(modelo);
        cargarCbos();
        cboInventarioFilter.setSelectedItem(inventaryName);
        System.out.println(inventaryName);
        try {
            stInventario = (Inventario)load.get(cboInventarioFilter.getSelectedItem().toString(), 0, new Inventario());
        } catch (InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        load();
        loadPanels(1);
        GV.cursorDF();
        cDF();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cboMostrar = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListar = new javax.swing.JTable();
        btnAbrir = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JLabel();
        btnRestaurar = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnStockDown = new javax.swing.JLabel();
        cboInventarioFilter = new javax.swing.JComboBox<>();
        btnLoad = new javax.swing.JLabel();
        btnStockUp = new javax.swing.JLabel();
        pnl1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCod1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtPrecAct1 = new javax.swing.JSpinner();
        txtCol1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMar1 = new javax.swing.JTextField();
        txtTip1 = new javax.swing.JTextField();
        txtMat1 = new javax.swing.JTextField();
        cboFlex = new javax.swing.JComboBox<>();
        cboTipo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDsc1 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        txtStock1 = new javax.swing.JSpinner();
        txtPrecRef1 = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        txtStockMin1 = new javax.swing.JSpinner();
        jLabel24 = new javax.swing.JLabel();
        txtInventario1 = new javax.swing.JTextField();
        pnl2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtCod2 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtPrecAct2 = new javax.swing.JSpinner();
        txtCol2 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtMar2 = new javax.swing.JTextField();
        txtTip2 = new javax.swing.JTextField();
        txtMat2 = new javax.swing.JTextField();
        cboFlex2 = new javax.swing.JComboBox<>();
        cboTipo2 = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDsc2 = new javax.swing.JTextArea();
        jLabel31 = new javax.swing.JLabel();
        txtStock2 = new javax.swing.JSpinner();
        txtPrecRef2 = new javax.swing.JSpinner();
        jLabel32 = new javax.swing.JLabel();
        txtStockMin2 = new javax.swing.JSpinner();
        btnCancel = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtInventario2 = new javax.swing.JTextField();
        pnl3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtCod3 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        btnUpdate2 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        txtCol3 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        txtMar3 = new javax.swing.JTextField();
        txtTip3 = new javax.swing.JTextField();
        txtMat3 = new javax.swing.JTextField();
        cboFlex3 = new javax.swing.JComboBox<>();
        cboTipo3 = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDsc3 = new javax.swing.JTextArea();
        txtStock3 = new javax.swing.JSpinner();
        jLabel40 = new javax.swing.JLabel();
        btnCancel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Lista de registros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        cboMostrar.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        cboMostrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activos", "Eliminados" }));
        cboMostrar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMostrarItemStateChanged(evt);
            }
        });

        tblListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Marca", "Color", "Stock"
            }
        ));
        jScrollPane1.setViewportView(tblListar);

        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Eye_50px.png"))); // NOI18N
        btnAbrir.setToolTipText("Cargar");
        btnAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAbrirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAbrirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAbrirMouseExited(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Trash_50px.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });

        btnRestaurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Data_Backup_50px.png"))); // NOI18N
        btnRestaurar.setToolTipText("Restaurar");
        btnRestaurar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRestaurarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRestaurarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRestaurarMouseExited(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Search_Property_25px_1.png"))); // NOI18N

        txtBuscar.setToolTipText("Buscar");
        txtBuscar.setBorder(null);
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnStockDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/stock_Down_50px.png"))); // NOI18N
        btnStockDown.setToolTipText("Reducir Stock");
        btnStockDown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStockDownDownMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStockDownDownMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStockDownDownMouseExited(evt);
            }
        });

        cboInventarioFilter.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboInventarioFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboInventarioFilter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboInventarioFilterItemStateChanged(evt);
            }
        });

        btnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Next_25px.png"))); // NOI18N
        btnLoad.setToolTipText("Cargar Inventario");
        btnLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoadMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLoadMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLoadMouseExited(evt);
            }
        });

        btnStockUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/stock_Up_50px.png"))); // NOI18N
        btnStockUp.setToolTipText("Incrementar Stock");
        btnStockUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStockUpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStockUpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStockUpMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnAbrir)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnRestaurar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnStockUp)
                .addGap(18, 18, 18)
                .addComponent(btnStockDown)
                .addGap(41, 41, 41)
                .addComponent(cboMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cboInventarioFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLoad)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnStockUp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cboInventarioFilter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLoad, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAbrir, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRestaurar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboMostrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnStockDown, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(36, 36, 36))
        );

        pnl1.setBackground(new java.awt.Color(255, 255, 255));
        pnl1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Crear nuevo registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel1.setText("Codigo");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel2.setText("Tipo");

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel3.setText("Material");

        txtCod1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod1KeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel5.setText("Flex");

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel7.setText("Descripcion");

        jLabel8.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel8.setText("Precio actual");

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel9.setText("Precio Ref.");

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Save_50px.png"))); // NOI18N
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarMouseExited(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel20.setText("Marca");

        txtPrecAct1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        txtCol1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCol1KeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel4.setText("Color");

        txtMar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMar1KeyTyped(evt);
            }
        });

        txtTip1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTip1KeyTyped(evt);
            }
        });

        txtMat1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMat1KeyTyped(evt);
            }
        });

        cboFlex.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboFlex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboTipo.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtDsc1.setColumns(20);
        txtDsc1.setRows(5);
        jScrollPane2.setViewportView(txtDsc1);

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel13.setText("Stock");

        txtStock1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        txtPrecRef1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel15.setText("Stock mínimo");

        txtStockMin1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel24.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel24.setText("Ubicación");

        txtInventario1.setEditable(false);
        txtInventario1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInventario1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(txtCod1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24)
                            .addComponent(txtCol1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(txtTip1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24)
                            .addComponent(txtMar1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(txtMat1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtInventario1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(cboFlex, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(95, 95, 95)
                            .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(15, 15, 15)
                            .addComponent(txtPrecAct1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24)
                            .addComponent(txtStock1))
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(24, 24, 24)
                            .addComponent(txtPrecRef1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtStockMin1)))
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCol1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))))
                .addGap(6, 6, 6)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2))
                    .addComponent(txtTip1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(txtMar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3))
                    .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24)
                        .addComponent(txtInventario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5))
                    .addComponent(cboFlex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrecAct1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13))))
                .addGap(6, 6, 6)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrecRef1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStockMin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel15))))
                .addGap(6, 6, 6)
                .addComponent(btnGuardar))
        );

        pnl2.setBackground(new java.awt.Color(108, 217, 186));
        pnl2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Abrir registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel6.setText("Codigo");

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel18.setText("Tipo");

        jLabel21.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel21.setText("Material");

        txtCod2.setEditable(false);
        txtCod2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod2KeyTyped(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel25.setText("Flex");

        jLabel26.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel26.setText("Descripcion");

        jLabel27.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel27.setText("Precio actual");

        jLabel28.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel28.setText("Precio Ref.");

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Save_50px.png"))); // NOI18N
        btnUpdate.setToolTipText("Modificar");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateMouseExited(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel29.setText("Marca");

        txtPrecAct2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        txtCol2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCol2KeyTyped(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel30.setText("Color");

        txtMar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMar2KeyTyped(evt);
            }
        });

        txtTip2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTip2KeyTyped(evt);
            }
        });

        txtMat2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMat2KeyTyped(evt);
            }
        });

        cboFlex2.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboFlex2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboTipo2.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboTipo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtDsc2.setColumns(20);
        txtDsc2.setRows(5);
        jScrollPane3.setViewportView(txtDsc2);

        jLabel31.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel31.setText("Stock");

        txtStock2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        txtStock2.setEnabled(false);

        txtPrecRef2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel32.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel32.setText("Stock mínimo");

        txtStockMin2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cancel_50px.png"))); // NOI18N
        btnCancel.setToolTipText("Cancelar");
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelMouseExited(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel35.setText("Ubicación");

        txtInventario2.setEditable(false);
        txtInventario2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInventario2KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnl2Layout = new javax.swing.GroupLayout(pnl2);
        pnl2.setLayout(pnl2Layout);
        pnl2Layout.setHorizontalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl2Layout.createSequentialGroup()
                                    .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCod2)
                                        .addComponent(txtTip2)
                                        .addComponent(txtMat2)
                                        .addComponent(cboFlex2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)))
                                .addGroup(pnl2Layout.createSequentialGroup()
                                    .addComponent(txtPrecAct2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)))
                            .addGroup(pnl2Layout.createSequentialGroup()
                                .addComponent(txtPrecRef2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl2Layout.createSequentialGroup()
                                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnl2Layout.createSequentialGroup()
                                        .addComponent(txtStockMin2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl2Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnCancel)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate)
                                .addContainerGap())
                            .addGroup(pnl2Layout.createSequentialGroup()
                                .addComponent(txtStock2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl2Layout.createSequentialGroup()
                                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtInventario2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCol2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMar2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboTipo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(88, 88, 88))))
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnl2Layout.setVerticalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCod2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCol2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(txtTip2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel29)
                    .addComponent(txtMar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtMat2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(txtInventario2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(cboFlex2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTipo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnUpdate)
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(txtPrecAct2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31)
                            .addComponent(txtStock2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(txtPrecRef2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32)
                            .addComponent(txtStockMin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(btnCancel))))
        );

        pnl3.setBackground(new java.awt.Color(108, 217, 186));
        pnl3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Registro de bajas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel10.setText("Codigo");

        jLabel22.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel22.setText("Tipo");

        jLabel23.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel23.setText("Material");

        txtCod3.setEditable(false);
        txtCod3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod3KeyTyped(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel33.setText("Flex");

        jLabel34.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel34.setText("Causa de la reducción del Stock");

        btnUpdate2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Save_50px.png"))); // NOI18N
        btnUpdate2.setToolTipText("Registrar baja");
        btnUpdate2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdate2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdate2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdate2MouseExited(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel37.setText("Marca");

        txtCol3.setEditable(false);
        txtCol3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCol3KeyTyped(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel38.setText("Color");

        txtMar3.setEditable(false);
        txtMar3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMar3KeyTyped(evt);
            }
        });

        txtTip3.setEditable(false);
        txtTip3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTip3KeyTyped(evt);
            }
        });

        txtMat3.setEditable(false);
        txtMat3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMat3KeyTyped(evt);
            }
        });

        cboFlex3.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboFlex3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboFlex3.setEnabled(false);

        cboTipo3.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboTipo3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTipo3.setEnabled(false);

        txtDsc3.setColumns(20);
        txtDsc3.setRows(5);
        jScrollPane4.setViewportView(txtDsc3);

        txtStock3.setModel(new javax.swing.SpinnerNumberModel());

        jLabel40.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel40.setText("Cantidad a reducir");

        btnCancel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cancel_50px.png"))); // NOI18N
        btnCancel2.setToolTipText("Cancelar");
        btnCancel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancel2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnl3Layout = new javax.swing.GroupLayout(pnl3);
        pnl3.setLayout(pnl3Layout);
        pnl3Layout.setHorizontalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl3Layout.createSequentialGroup()
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                        .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl3Layout.createSequentialGroup()
                        .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl3Layout.createSequentialGroup()
                                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnl3Layout.createSequentialGroup()
                                        .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtCod3)
                                            .addComponent(txtTip3)
                                            .addComponent(txtMat3)
                                            .addComponent(cboFlex3, 0, 143, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                            .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(txtStock3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnCancel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate2)
                                .addContainerGap())
                            .addGroup(pnl3Layout.createSequentialGroup()
                                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCol3)
                                    .addComponent(txtMar3)
                                    .addComponent(cboTipo3, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(88, 88, 88))))
                    .addGroup(pnl3Layout.createSequentialGroup()
                        .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 48, Short.MAX_VALUE))))
        );
        pnl3Layout.setVerticalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl3Layout.createSequentialGroup()
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCod3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCol3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(txtTip3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel37)
                    .addComponent(txtMar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtMat3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(cboFlex3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTipo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl3Layout.createSequentialGroup()
                                .addGap(0, 13, Short.MAX_VALUE)
                                .addComponent(btnCancel2))
                            .addGroup(pnl3Layout.createSequentialGroup()
                                .addComponent(txtStock3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate2))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnl3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String codigo = tblListar.getValueAt(fila, 0).toString();
            
            abrirLente(codigo);
            cDF();
        }catch(Exception e){
            OptionPane.showMsg("Seleccione un elemento en la tabla","Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el botón \"Ver\".",  2);
            cDF();
        }
    }//GEN-LAST:event_btnAbrirMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String cod = tblListar.getValueAt(fila, 0).toString();
            String invName = cboInventarioFilter.getSelectedItem().toString();
            
            if(OptionPane.getConfirmation("Eliminar registro", "¿Esta seguro que desea eliminar el lente "+cod+"?", 2)){
                cWT();
                Lente temp = (Lente)load.getLente(cod,invName);
                if(!load.restoreOrDeleteFromUI(temp)){
                    cDF();
                    return;
                }
            }
            cargarDatos("0");
            cDF();
        }catch(Exception e){
            OptionPane.showMsg("Seleccione Lente","Error al cargar valores,\n"
                    + "es posible que no se haya seleccionado un registro:\n"
                    + "Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el botón \"Ver\".\n"
                    + "Otro posible error: el valor seleccionado no tiene un identificador válido.",2);
            cDF();
        }
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnRestaurarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestaurarMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String cod = tblListar.getValueAt(fila, 0).toString();
            if(OptionPane.getConfirmation("Confirmación de registro", "¿Esta seguro que desea restaurar este registro?", 1)){
                cWT();
                String invName = cboInventarioFilter.getSelectedItem().toString();
                Lente temp = (Lente)load.getLente(cod,invName);
                if(!load.restoreOrDeleteFromUI(temp)){
                    cDF();
                    return;
                }
                cargarDatos("-1");
                cDF();
            }
        }catch(Exception e){
            OptionPane.showMsg("Seleccione Lente","Error al cargar valores,\n"
                    + "es posible que no se haya seleccionado un registro:\n"
                    + "Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el botón \"Ver\".\n"
                    + "Otro posible error: el valor seleccionado no tiene un identificador válido.",2);
            cDF();
        }
    }//GEN-LAST:event_btnRestaurarMouseClicked

    private void btnAbrirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseEntered
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnAbrir.getIcon().toString()))));
    }//GEN-LAST:event_btnAbrirMouseEntered

    private void btnAbrirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseExited
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnAbrir.getIcon().toString()))));
    }//GEN-LAST:event_btnAbrirMouseExited

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnEliminar.getIcon().toString()))));
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnEliminar.getIcon().toString()))));
    }//GEN-LAST:event_btnEliminarMouseExited

    private void btnRestaurarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestaurarMouseEntered
        btnRestaurar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnRestaurar.getIcon().toString()))));
    }//GEN-LAST:event_btnRestaurarMouseEntered

    private void btnRestaurarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestaurarMouseExited
        btnRestaurar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnRestaurar.getIcon().toString()))));
    }//GEN-LAST:event_btnRestaurarMouseExited

    private void cboMostrarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMostrarItemStateChanged
        cWT();
        load();
        cDF();
    }//GEN-LAST:event_cboMostrarItemStateChanged

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        txtBuscar.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(final KeyEvent e) {
//                trs.setRowFilter(RowFilter.regexFilter(txtBuscar.getText(), 1));
                trs.setRowFilter(RowFilter.regexFilter("(?i)"+txtBuscar.getText(), 0,1,2,3,4,5,7,8,9,10));
            }
            
        });
        
        
        
        trs = new TableRowSorter(modelo);
        
        tblListar.setRowSorter(trs);
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void btnGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseExited
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnGuardar.getIcon().toString()))));
    }//GEN-LAST:event_btnGuardarMouseExited

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnGuardar.getIcon().toString()))));
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        try {                                        
            cWT();
            String cod = GV.getFilterString(txtCod1.getText());
            String color = GV.getFilterString(txtCol1.getText());
            String tipo = GV.getFilterString(txtTip1.getText());
            String marca = GV.getFilterString(txtMar1.getText());
            String material = GV.getFilterString(txtMat1.getText());
            int flex = cboFlex.getSelectedIndex();
            int type = cboTipo.getSelectedIndex();
            String desc = GV.getFilterString(txtDsc1.getText());
            try {
                txtPrecAct1.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al precio actual.", 2);
                return;
            }
            try {
                txtPrecRef1.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al precio de referencia.", 2);
                return;
            }
            try {
                txtStock1.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al stock.", 2);
                return;
            }
            try {
                txtStockMin1.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al stock minimo.", 2);
                return;
            }
            
            int precioAct = (int)txtPrecAct1.getValue();
            int precioRef = (int)txtPrecRef1.getValue();
            int stock = (int)txtStock1.getValue();
            int stockMin  =  (int)txtStockMin1.getValue();
            String inventaryName = txtInventario1.getText();
            Inventario inventario = (Inventario)load.get(inventaryName,0, new Inventario());
            int idInventario=(inventario!=null)?inventario.getId():0;
            Lente lente= new Lente(cod, color, tipo, marca, material, flex, type, desc, precioRef, precioAct, stock, stockMin, idInventario, 1, null, 0);
            
            cWT();
            if(!load.addFromUI(lente)){
               cDF();
               return; 
            }
            cargarDatos("0");
            cDF();
        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void txtCod1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod1KeyTyped
        int largo = 25;
        if(txtCod1.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El registro solo debe contener hasta "+largo+" caracteres", 2);
        }
    }//GEN-LAST:event_txtCod1KeyTyped

    private void txtCol1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCol1KeyTyped
        int largo = 25;
        if(txtCod1.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El registro solo debe contener hasta "+largo+" caracteres", 2);
        }
    }//GEN-LAST:event_txtCol1KeyTyped

    private void txtMar1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMar1KeyTyped
        int largo = 45;
        if(txtCod1.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El registro solo debe contener hasta "+largo+" caracteres", 2);
        }
    }//GEN-LAST:event_txtMar1KeyTyped

    private void txtTip1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTip1KeyTyped
        int largo = 45;
        if(txtCod1.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El registro solo debe contener hasta "+largo+" caracteres", 2);
        }
    }//GEN-LAST:event_txtTip1KeyTyped

    private void txtMat1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMat1KeyTyped
        int largo = 25;
        if(txtCod1.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El registro solo debe contener hasta "+largo+" caracteres", 2);
        }
    }//GEN-LAST:event_txtMat1KeyTyped

    private void txtCod2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCod2KeyTyped

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        updateLente();
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseEntered
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnUpdate.getIcon().toString()))));
    }//GEN-LAST:event_btnUpdateMouseEntered

    private void btnUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseExited
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnUpdate.getIcon().toString()))));
    }//GEN-LAST:event_btnUpdateMouseExited

    private void txtCol2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCol2KeyTyped
        int largo = 25;
        if(txtCod1.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El registro solo debe contener hasta "+largo+" caracteres", 2);
        }
    }//GEN-LAST:event_txtCol2KeyTyped

    private void txtMar2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMar2KeyTyped
        int largo = 45;
        if(txtCod1.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El registro solo debe contener hasta "+largo+" caracteres", 2);
        }
    }//GEN-LAST:event_txtMar2KeyTyped

    private void txtTip2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTip2KeyTyped
        int largo = 45;
        if(txtCod1.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El registro solo debe contener hasta "+largo+" caracteres", 2);
        }
    }//GEN-LAST:event_txtTip2KeyTyped

    private void txtMat2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMat2KeyTyped
        int largo = 45;
        if(txtCod1.getText().length() >= largo){
            evt.consume();
            OptionPane.showMsg("Error de ingreso de datos", "El registro solo debe contener hasta "+largo+" caracteres", 2);
        }
    }//GEN-LAST:event_txtMat2KeyTyped

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        limpiarTextField();
        loadPanels(1);
    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseEntered
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnCancel.getIcon().toString()))));
    }//GEN-LAST:event_btnCancelMouseEntered

    private void btnCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseExited
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnCancel.getIcon().toString()))));
    }//GEN-LAST:event_btnCancelMouseExited

    private void txtCod3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCod3KeyTyped

    private void btnUpdate2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate2MouseClicked
        
        try {
            txtStock3.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
            GV.mensajeExcepcion("Error en cantidad ingresada.", 2);
            return;
        }
        cWT();
        int cantidad = (int)txtStock3.getValue();
        int newStock = stLente.getStock()- (LocalInventario.stockDescontado(stLente.getCod()) + cantidad);
        if(newStock < 0){
            OptionPane.showMsg("Parámetros incorrectos", "El monto a reducir debe ser menor o igual al stock del producto.", 2);
            cDF();
            return;
        }
        String obs = txtDsc3.getText();
        if(obs == null || obs.isEmpty() || obs.length() < 10){
            OptionPane.showMsg("Parámetros obligatorios", "Es necesario introducir una causa válida de la reducción\n.", 2);
            cDF();
            return;
        }
        if(OptionPane.getConfirmation("Reducción de stock", "¿Confirmo que los datos ingresados son correctos?", 2)){
            if(load.decreaseStock(stLente.getCod(), cantidad)){
                RegistroBaja rb = new RegistroBaja(null, new Date(), stLente.getCod(), cantidad, obs+ "\n [Usuario: "+GV.user().getNombre()+" ID_USER:"+GV.user().getId()+"]", 1, null, 0);
                if(!load.addFromUI(rb)){
                    cDF();
                    return;
                }
                cargarDatos("0"); 
            }else{
                OptionPane.showMsg("No es posible reducir el stock", "No se ha podido crear un nuevo registro en la reducción del stock.\n"
                        + "Debes operar con productos correspondientes a tu inventario local: \"" +GV.inventarioName() + "\"", 2);
                cDF();
                return;
            }
        }else{
            OptionPane.showMsg("Reducción de stock", "Operación cancelada", 1);
        }
        cDF();
    }//GEN-LAST:event_btnUpdate2MouseClicked

    private void btnUpdate2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate2MouseEntered
        btnUpdate2.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnUpdate2.getIcon().toString()))));
    }//GEN-LAST:event_btnUpdate2MouseEntered

    private void btnUpdate2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate2MouseExited
        btnUpdate2.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnUpdate2.getIcon().toString()))));
    }//GEN-LAST:event_btnUpdate2MouseExited

    private void txtCol3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCol3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCol3KeyTyped

    private void txtMar3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMar3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMar3KeyTyped

    private void txtTip3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTip3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTip3KeyTyped

    private void txtMat3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMat3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMat3KeyTyped

    private void btnCancel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel2MouseClicked
        loadPanels(1);
        limpiarTextField();
    }//GEN-LAST:event_btnCancel2MouseClicked

    private void btnCancel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel2MouseEntered
        btnCancel2.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnCancel2.getIcon().toString()))));
    }//GEN-LAST:event_btnCancel2MouseEntered

    private void btnCancel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel2MouseExited
        btnCancel2.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnCancel2.getIcon().toString()))));
    }//GEN-LAST:event_btnCancel2MouseExited

    private void btnStockDownDownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockDownDownMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String codigo = tblListar.getValueAt(fila, 0).toString();
            
            loadPnlStock(codigo);
            cDF();
        }catch(Exception e){
            OptionPane.showMsg("Seleccione un elemento en la tabla","Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el botón \"Reducir stock\".",  2);
            cDF();
        }
    }//GEN-LAST:event_btnStockDownDownMouseClicked

    private void btnStockDownDownMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockDownDownMouseEntered
        btnStockDown.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnStockDown.getIcon().toString()))));
    }//GEN-LAST:event_btnStockDownDownMouseEntered

    private void btnStockDownDownMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockDownDownMouseExited
        btnStockDown.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnStockDown.getIcon().toString()))));
    }//GEN-LAST:event_btnStockDownDownMouseExited

    private void cboInventarioFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboInventarioFilterItemStateChanged
        
    }//GEN-LAST:event_cboInventarioFilterItemStateChanged

    private void btnLoadMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoadMouseExited

        btnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnLoad.getIcon().toString()))));
    }//GEN-LAST:event_btnLoadMouseExited

    private void btnLoadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoadMouseEntered
        btnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnLoad.getIcon().toString()))));
    }//GEN-LAST:event_btnLoadMouseEntered

    private void btnLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoadMouseClicked
        try {
            cWT();
            inventaryName = cboInventarioFilter.getSelectedItem().toString();
            stInventario = (Inventario)load.get(inventaryName, 0, new Inventario());
            load();
            cDF();
        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLoadMouseClicked

    private void txtInventario1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInventario1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInventario1KeyTyped

    private void txtInventario2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInventario2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInventario2KeyTyped

    private void btnStockUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockUpMouseClicked
        increaseStock();
    }//GEN-LAST:event_btnStockUpMouseClicked

    private void btnStockUpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockUpMouseEntered
        btnStockUp.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnStockUp.getIcon().toString()))));
    }//GEN-LAST:event_btnStockUpMouseEntered

    private void btnStockUpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockUpMouseExited
        btnStockUp.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnStockUp.getIcon().toString()))));
    }//GEN-LAST:event_btnStockUpMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAbrir;
    private javax.swing.JLabel btnCancel;
    private javax.swing.JLabel btnCancel2;
    private javax.swing.JLabel btnEliminar;
    private javax.swing.JLabel btnGuardar;
    private javax.swing.JLabel btnLoad;
    private javax.swing.JLabel btnRestaurar;
    private javax.swing.JLabel btnStockDown;
    private javax.swing.JLabel btnStockUp;
    private javax.swing.JLabel btnUpdate;
    private javax.swing.JLabel btnUpdate2;
    private javax.swing.JComboBox<String> cboFlex;
    private javax.swing.JComboBox<String> cboFlex2;
    private javax.swing.JComboBox<String> cboFlex3;
    private javax.swing.JComboBox<String> cboInventarioFilter;
    private javax.swing.JComboBox<String> cboMostrar;
    private javax.swing.JComboBox<String> cboTipo;
    private javax.swing.JComboBox<String> cboTipo2;
    private javax.swing.JComboBox<String> cboTipo3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel pnl1;
    private javax.swing.JPanel pnl2;
    private javax.swing.JPanel pnl3;
    private javax.swing.JTable tblListar;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCod1;
    private javax.swing.JTextField txtCod2;
    private javax.swing.JTextField txtCod3;
    private javax.swing.JTextField txtCol1;
    private javax.swing.JTextField txtCol2;
    private javax.swing.JTextField txtCol3;
    private javax.swing.JTextArea txtDsc1;
    private javax.swing.JTextArea txtDsc2;
    private javax.swing.JTextArea txtDsc3;
    private javax.swing.JTextField txtInventario1;
    private javax.swing.JTextField txtInventario2;
    private javax.swing.JTextField txtMar1;
    private javax.swing.JTextField txtMar2;
    private javax.swing.JTextField txtMar3;
    private javax.swing.JTextField txtMat1;
    private javax.swing.JTextField txtMat2;
    private javax.swing.JTextField txtMat3;
    private javax.swing.JSpinner txtPrecAct1;
    private javax.swing.JSpinner txtPrecAct2;
    private javax.swing.JSpinner txtPrecRef1;
    private javax.swing.JSpinner txtPrecRef2;
    private javax.swing.JSpinner txtStock1;
    private javax.swing.JSpinner txtStock2;
    private javax.swing.JSpinner txtStock3;
    private javax.swing.JSpinner txtStockMin1;
    private javax.swing.JSpinner txtStockMin2;
    private javax.swing.JTextField txtTip1;
    private javax.swing.JTextField txtTip2;
    private javax.swing.JTextField txtTip3;
    // End of variables declaration//GEN-END:variables

    private void cargarCbos() {
        cboFlex.removeAllItems();
        cboFlex.addItem("Si");
        cboFlex.addItem("No");
        cboFlex2.removeAllItems();
        cboFlex2.addItem("Si");
        cboFlex2.addItem("No");
        cboFlex3.removeAllItems();
        cboFlex3.addItem("Si");
        cboFlex3.addItem("No");
        cboTipo.removeAllItems();
        cboTipo.addItem("Unisex");
        cboTipo.addItem("Femenino");
        cboTipo.addItem("Masculino");
        cboTipo2.removeAllItems();
        cboTipo2.addItem("Unisex");
        cboTipo2.addItem("Femenino");
        cboTipo2.addItem("Masculino");
        cboTipo3.removeAllItems();
        cboTipo3.addItem("Unisex");
        cboTipo3.addItem("Femenino");
        cboTipo3.addItem("Masculino");
        cboInventarioFilter.removeAllItems();
        ArrayList<Object> list = load.listar("0", new Inventario());
        if(list.size() == 0){
            OptionPane.showMsg("No existe un inventario", "Debe crear un inventario para poder agregar productos.", 2);
            try{
                boton.crearFicha();
            }catch( SQLException | ClassNotFoundException ex){
                OptionPane.showMsg("Error inesperado", "Ocurrió un error inesperado al intentar abrir ventana principal\n"
                        + "el sistema se cerrará.", 3);
                System.exit(0);
            }
        }
        for (Object object : list) {
            cboInventarioFilter.addItem(((Inventario)object).getNombre());
        }
        cboInventarioFilter.setSelectedItem(inventaryName);
        txtInventario1.setText(inventaryName);
    }
    
     private void load(){
        if(cboMostrar.getSelectedIndex()==0){//en nueva version cargar ventana completa con lista de clientes estatica global
            cargarDatos("0");
            btnStockDown.setVisible(true);
            btnStockUp.setVisible(true);
        }else{
            cargarDatos("-1");
            btnStockDown.setVisible(false);
            btnStockUp.setVisible(false);
        }
    }
    private void cargarDatos(String listar) {
        cargarCbos();
        limpiarTextField();
        loadPanels(1);
        if(listar.equals("-1")){
            btnRestaurar.setVisible(true);
            btnEliminar.setVisible(false);
            btnAbrir.setVisible(false);
            btnUpdate.setVisible(false);
        }else{
            btnRestaurar.setVisible(false);
            btnEliminar.setVisible(true);
            btnAbrir.setVisible(true);
            btnUpdate.setVisible(true);
        }
        try{
            modelo.setNumRows(0);
            GV.setInventarioSeleccionado(stInventario.getId());
            List<Object> lista = load.listar(listar, new Lente());
            GV.setInventarioSeleccionado(0);
            for (Object object : lista) {
                Lente temp = (Lente)object;
                    Object[] fila = new Object[4];
                    fila[0] = temp.getCod();
                    fila[1] = temp.getMarca();
                    fila[2] = temp.getColor();
                    fila[3] = temp.getStock();
                    modelo.addRow(fila);
            }
            tblListar.updateUI();
            if(tblListar.getRowCount() == 0){
                GV.emptyTable(cboMostrar, txtBuscar, "Lentes");
            }
            
        }catch(Exception e){
            OptionPane.showMsg("Ocurrió un error inesperado", "Ocurrió un error inesperado al cargar valores en la tabla, ["+e.getMessage()+"]",3);
        }
    }

    private void abrirLente(String cod) throws SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {
        String invName = cboInventarioFilter.getSelectedItem().toString();
        stLente = load.getLente(cod,invName);
        loadPanels(2);
        if(stLente!=null){
            txtStock2.setModel(new SpinnerNumberModel(stLente.getStock(), stLente.getStock(), stLente.getStock(), 1));
            if(stLente.getCod().isEmpty() || stLente.getCod().equals("null"))
                txtCod2.setText("");
            else
                txtCod2.setText(stLente.getCod());
            txtCol2.setText(stLente.getColor());
            txtTip2.setText(stLente.getTipo());
            txtMar2.setText(stLente.getMarca());
            txtMat2.setText(stLente.getMaterial());
            cboFlex2.setSelectedIndex(stLente.getFlex());
            cboTipo2.setSelectedIndex(stLente.getClasificacion());
            txtDsc2.setText(stLente.getDescripcion());

            txtPrecAct2.setValue((int)stLente.getPrecioAct());
            txtPrecRef2.setValue((int)stLente.getPrecioRef());
            Inventario inv = (Inventario)load.get("BY_ID/"+stLente.getInventario(), 0, new Inventario());
            txtInventario2.setText(invName);

            txtStock2.setValue((int)stLente.getStock());
            txtStockMin2.setValue((int)stLente.getStockMin());
        }else{
            OptionPane.showMsg("Seleccione registro","Error al cargar valores,\n"
                + "es posible que no se haya seleccionado un registro\n"
                + "o el valor seleccionado no tiene un identificador válido.",2);
        }
    }
    
    private void loadPnlStock(String cod) throws SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {
        String invName = cboInventarioFilter.getSelectedItem().toString();
        stLente = (Lente)load.getLente(cod,invName);
            loadPanels(3);
            if(stLente!=null){
                if(stLente.getCod().isEmpty() || stLente.getCod().equals("null"))
                    txtCod3.setText("");
                else
                    txtCod3.setText(stLente.getCod());
                txtCol3.setText(stLente.getColor());
                txtTip3.setText(stLente.getTipo());
                txtMar3.setText(stLente.getMarca());
                txtMat3.setText(stLente.getMaterial());
                cboFlex3.setSelectedIndex(stLente.getFlex());
                cboTipo3.setSelectedIndex(stLente.getClasificacion());
                txtDsc3.setText("");
                
                
                txtStock3.setValue((int)1);
            }else{
                OptionPane.showMsg("Seleccione registro","Error al cargar valores,\n"
                    + "es posible que no se haya seleccionado un registro\n"
                    + "o el valor seleccionado no tiene un identificador válido.",2);
            }
    }

    private void limpiarTextField() {
        txtCod1.setText("");
        txtCod2.setText("");
        txtCol1.setText("");
        txtCol2.setText("");
        txtDsc1.setText("");
        txtDsc2.setText("");
        txtMar1.setText("");
        txtMar2.setText("");
        txtMat1.setText("");
        txtMat2.setText("");
        txtPrecAct1.setValue((int)0);
        txtPrecAct2.setValue((int)0);
        txtPrecRef1.setValue((int)0);
        txtPrecRef2.setValue((int)0);
        txtStock1.setValue((int)0);
        txtStock2.setValue((int)0);
        txtStockMin1.setValue((int)0);
        txtStockMin2.setValue((int)0);
        txtTip1.setText("");
        txtTip2.setText("");
        
        cargarCbos();
    }

    private void loadPanels(int param) {
        switch (param){
            case 1:
                pnl1.setVisible(true);
                pnl2.setVisible(false);
                pnl3.setVisible(false);
                break;
            case 2:
                pnl1.setVisible(false);
                pnl2.setVisible(true);
                pnl3.setVisible(false);
                if(GV.tipoUserIventario()){
                    txtStock2.setEnabled(true);
                }else{
                    txtStock2.setEnabled(false);
                }
                break;
            case 3:
                pnl1.setVisible(false);
                pnl2.setVisible(false);
                pnl3.setVisible(true);
                break;
            default:
                pnl1.setVisible(true);
                pnl2.setVisible(false);
                break;
        }
    }
    
    private void cWT(){
        GV.cursorWAIT(this);
    }
    private void cDF(){
        GV.cursorDF(this);
    }
    
    private void updateLente(){
        try {
            Inventario inventario = (Inventario)load.get(txtInventario2.getText(), 0, new Inventario());
            int idInventario = (inventario!= null)?inventario.getId():0;
            cWT();
            stLente.setClasificacion(cboTipo2.getSelectedIndex());
            stLente.setColor(txtCol2.getText());
            stLente.setDescripcion(txtDsc2.getText());
            stLente.setFlex(cboFlex2.getSelectedIndex());
            stLente.setInventario(idInventario);
            stLente.setMarca(txtMar2.getText());
            stLente.setMaterial(txtMat2.getText());
            try {
                txtPrecAct2.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al precio actual.", 2);
                cDF();
                return;
            }
            try {
                txtPrecRef2.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al precio de referencia.", 2);
                cDF();
                return;
            }
            try {
                txtStock2.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al stock.", 2);
                cDF();
                return;
            }
            try {
                txtStockMin2.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VLentesMac.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al stock minimo.", 2);
                cDF();
                return;
            }
            stLente.setPrecioAct((int)txtPrecAct2.getValue());
            stLente.setPrecioRef((int)txtPrecRef2.getValue());
            stLente.setStockMin((int)txtStockMin2.getValue());
            stLente.setTipo(txtTip2.getText());
            
            if(!load.updateFromUI(stLente)){
                cDF();
                return;
            }
            cargarDatos("0");
            cDF();
        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            OptionPane.showMsg("Error al cargar los datos para modificación.", "Ocurrió un error inesperado al momento de cargar los datos."
                    + "\nDetalle: "+ex, 3);
        }
        cDF();
    }
    
    private void increaseStock(){
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String codigo = tblListar.getValueAt(fila, 0).toString();
            GlobalValuesVariables.setIdLenteIncreaseStock(codigo);
            OptionPane.showOptionPanel(new OpanelIncreaseStock(), "Incrementar Stock");
            cDF();
        }catch(Exception e){
            OptionPane.showMsg("Seleccione un elemento en la tabla","Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el botón \"Incrementar Stock\".",  2);
            cDF();
        }
    }
}
